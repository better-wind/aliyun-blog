{"title":"Louis Blog","description":"前端之路，渐行渐远。","language":"","link":"https://luyi10year.github.io","pubDate":"Mon, 26 Dec 2016 04:20:16 GMT","lastBuildDate":"Tue, 27 Dec 2016 07:28:32 GMT","generator":"hexo-generator-json-feed","webMaster":"Louis","items":[{"title":"Let Chat","link":"https://luyi10year.github.io/2016/12/26/websockt-chat-node/","description":"","pubDate":"Mon, 26 Dec 2016 04:20:16 GMT","guid":"https://luyi10year.github.io/2016/12/26/websockt-chat-node/","category":"Node,websocket"},{"title":"Git自动化部署","link":"https://luyi10year.github.io/2016/12/22/automated-deployment/","description":"每次更新完博客,得先push到github上然后在服务器上把代码pull下来部署 一开始 忍了后来 够了","pubDate":"Thu, 22 Dec 2016 09:42:46 GMT","guid":"https://luyi10year.github.io/2016/12/22/automated-deployment/","category":"Linux,Git,服务器"},{"title":"谈谈","link":"https://luyi10year.github.io/2016/12/20/diary-2016-1220-1430/","description":"","pubDate":"Tue, 20 Dec 2016 06:29:27 GMT","guid":"https://luyi10year.github.io/2016/12/20/diary-2016-1220-1430/","category":"杂谈"},{"title":"1px != 1px -- 移动端适配浅析","link":"https://luyi10year.github.io/2016/12/19/rem-layout/","description":"viewport 物理像素(physical pixel) 设别像素，显示设备 设备独立像素(density-independent pixel) 设备像素比(device pixel ratio) 设备像素比 ＝ 物理像素 / 设备独立像素","pubDate":"Mon, 19 Dec 2016 09:28:08 GMT","guid":"https://luyi10year.github.io/2016/12/19/rem-layout/","category":"Rem,H5"},{"title":"react","link":"https://luyi10year.github.io/2016/12/18/react/","description":"整理整理思绪","pubDate":"Sun, 18 Dec 2016 05:50:35 GMT","guid":"https://luyi10year.github.io/2016/12/18/react/","category":"react"},{"title":"vue","link":"https://luyi10year.github.io/2016/12/17/vue/","description":"整理整理思绪","pubDate":"Sat, 17 Dec 2016 05:50:25 GMT","guid":"https://luyi10year.github.io/2016/12/17/vue/","category":"vue"},{"title":"webpack","link":"https://luyi10year.github.io/2016/12/16/webpack/","description":"entry output moduleloaders url-loader test: /.(gif|jpg|png)$/, loader: ‘url-loader?limit=1024&amp;name=img/[name].[ext]’ 小于1024字节 采用base64 大于1024字节 正常打包到output目录下img文件夹中 js-loader babel 配置 .babelrc .rc run command 程序启动阶段被调用 执行babal-loader时自动执行 12345678910111213&#123; \"presets\": [\"es2015\", \"stage-2\"], \"plugins\": [ \"transform-class-properties\", \"transform-runtime\" ]&#125;//webpack.config.js&#123; test: /\\.js$/, exclude: /node_modules/, loader:'babel'&#125;, 另一种 123456789101112&#123; test: /\\.js$/, exclude: /node_modules/, loader: 'babel', query: &#123; presets: [\"es2015\", \"stage-2\"], plugins: [ \"transform-class-properties\", \"transform-runtime\" ] &#125; &#125;, css-loader loader 采取管道流 1loader: ['style','css','scss'].join('!') 提取样式到单独文件 插件 extract-text-webpack-plugin 123456789101112var ExtractTextPlugin = require('extract-text-webpack-plugin');......&#123; test: /\\.(scss|sass|css)$/, loader: ExtractTextPlugin.extract('style-loader', 'css-loader')&#125;plugins: [ new ExtractTextPlugin('[name].css') //output目录下 ], css样式自动 fix 插件 autoprefixer(postcss插件) 12345678&#123; test: /\\.(scss|sass|css)$/, loader: ExtractTextPlugin.extract('style-loader', ['css-loader', 'postcss-loader']) &#125; postcss: function() &#123; return [autoprefixer]; &#125;, file-loader1234&#123; test: /\\.(woff|svg|eot|ttf).$/, loader: \"file-loader?name=fonts/[name].[ext]\"&#125; resolve别名 var moment = require(‘moment’);编译很慢 也就是说，请求的是 moment 的源码。实际上，通过 NPM 安装 moment 的时候会同时安装 moment 的源码和压缩后的代码var moment = require(‘moment/min/moment-with-locales.min.js’);只不过这样改，可读性会有所下降，而且每一个用到 moment 的地方都得这么写。另外，如果同样的问题出现在第三方模块中，修改别人代码就不那么方便了。下面来看看用 Webpack 怎么解决这个问题。12345resolve: &#123; alias: &#123; moment: \"moment/min/moment-with-locales.min.js\" &#125; &#125; module.noParse 是 webpack 的另一个很有用的配置项，如果你 确定一个模块中没有其它新的依赖 就可以配置这项，webpack 将不再扫描这个文件中的依赖。123module: &#123; noParse: [/moment-with-locales/] &#125; 通常，JavaScript的解释器会告诉你，第几行第几列代码出错。但是，这对于转换后的代码毫无用处。举例来说，jQuery 1.9压缩后只有3行，每行3万个字符，所有内部变量都改了名字。你看着报错信息，感到毫无头绪，根本不知道它所对应的原始位置。这就是Source map想要解决的问题。 devtool: ‘#source-map’, 多看文档！","pubDate":"Fri, 16 Dec 2016 06:29:27 GMT","guid":"https://luyi10year.github.io/2016/12/16/webpack/","category":"webpack"},{"title":"学点运维，配个服务器","link":"https://luyi10year.github.io/2016/12/15/aliyun/","description":"前段时间和同事合租了一个阿里云服务器，60几块钱一个月。服务器上的资源环境很多都是他配的，作为前端，只是在上面放点静态的东西，也没太大兴趣在这方面去摸索然后这货今天离职了。","pubDate":"Thu, 15 Dec 2016 09:08:08 GMT","guid":"https://luyi10year.github.io/2016/12/15/aliyun/","category":"Linux,Git,服务器"},{"title":"In city","link":"https://luyi10year.github.io/2016/12/14/in-city/","description":"悠然随心随性随缘","pubDate":"Wed, 14 Dec 2016 10:40:08 GMT","guid":"https://luyi10year.github.io/2016/12/14/in-city/","category":"杂谈"},{"title":"Node","link":"https://luyi10year.github.io/2016/12/13/node/","description":"NodeNode.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。","pubDate":"Tue, 13 Dec 2016 10:41:55 GMT","guid":"https://luyi10year.github.io/2016/12/13/node/","category":"Node"}]}