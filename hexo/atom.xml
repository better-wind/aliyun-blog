<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Louis Blog</title>
  <icon>https://www.gravatar.com/avatar/8d694ef21ea4b52eb41035539ea741fc</icon>
  <subtitle>Louis/十年</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="//fenghou.site/"/>
  <updated>2018-07-02T03:40:56.908Z</updated>
  <id>//fenghou.site/</id>
  
  <author>
    <name>Louis</name>
    <email>wjf550@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>shell脚本应用</title>
    <link href="//fenghou.site/2018/07/02/2018-07-02-sh-shell/"/>
    <id>//fenghou.site/2018/07/02/2018-07-02-sh-shell/</id>
    <published>2018-07-02T03:29:35.000Z</published>
    <updated>2018-07-02T03:40:56.908Z</updated>
    
    <content type="html"><![CDATA[<p>自动化命令脚本<br><a id="more"></a></p><p>每次写完程序 需要提交代码<br>git 命令行敲一遍 多了 hin烦</p><p>可以配置一份脚本 让那个它自动去提交</p><p>release.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Releasing project - are you sure? (y/n)"</span> -n 1 -r</span><br><span class="line"><span class="built_in">echo</span>    <span class="comment"># (optional) move to a new line</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$REPLY</span> =~ ^[Yy]$ ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Releasing..."</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment"># commit build</span></span><br><span class="line">  git add -A</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Enter Commit message: "</span></span><br><span class="line">  <span class="built_in">read</span> COMMIT</span><br><span class="line">  git commit -m <span class="string">"<span class="variable">$COMMIT</span>"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># publish</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"publishing git..."</span></span><br><span class="line">  git push origin master</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><p>然后跑这个脚本就OK 当然除了shell bin 都是可以的</p><p>package.json<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>:&#123;</span><br><span class="line">        <span class="attr">"release"</span>:<span class="string">"sh shell/release.sh"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自动化命令脚本&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="//fenghou.site/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ohmyzsh配置</title>
    <link href="//fenghou.site/2018/06/29/2018-06-29-mac-iterm2-zsh/"/>
    <id>//fenghou.site/2018/06/29/2018-06-29-mac-iterm2-zsh/</id>
    <published>2018-06-29T02:20:52.000Z</published>
    <updated>2018-07-02T03:28:31.785Z</updated>
    
    <content type="html"><![CDATA[<p>配置<br><a id="more"></a><br>下载安装<br>sh -c “$(curl -fsSL <a href="https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;" target="_blank" rel="noopener">https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</a><br>配置文件<br>~/.zshrc<br>主题<br>ZSH_THEME=”dracula”<br>插件holo<br>plugins=(<br>  git node npm yarn history sublime z autojump<br>)<br>别名<br>alias g=’git’</p><p>快捷开启webstorm<br>webstorm 开启快捷键<br>webstorm 菜单栏 Tools -&gt; Create Command Line Launcher<br>/usr/local/bin/webstorm 其中webstorm就是脚本命令<br><a href="https://www.jetbrains.com/help/webstorm/opening-files-from-command-line.html" target="_blank" rel="noopener">官网命令</a><br>webstorm path 打开path<br>webstorm . 打开当前文件夹</p><p>快捷开启subline<br>zsh 插件 sublime<br>st 打开文件[夹]<br>st . 当前文件夹</p><p>还可以指定链接<br>alias atom=’/Applications/Atom.app/Contents/MacOS/Atom’<br>// sublime3<br>alias subl=’/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl’<br>// sublime2<br>alias subl=’/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl’<br>alias code=’/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin/code’</p><p>插件<br>web-search 命令行使用搜索引擎<br>google content<br>baidu content<br>bing content</p><p>zsh-autosuggestions 历史搜索记录提示<br>git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions</p><p><a href="https://ohmyz.sh/" target="_blank" rel="noopener">https://ohmyz.sh/</a><br><a href="https://draculatheme.com/zsh/" target="_blank" rel="noopener">https://draculatheme.com/zsh/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;配置&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>逐渐忘却的DOM操作</title>
    <link href="//fenghou.site/2018/06/15/2018-06-15-element-position/"/>
    <id>//fenghou.site/2018/06/15/2018-06-15-element-position/</id>
    <published>2018-06-15T01:45:42.000Z</published>
    <updated>2018-06-15T02:34:59.987Z</updated>
    
    <content type="html"><![CDATA[<p>以此记录那些用过的dom操作<br><a id="more"></a></p><h3 id="获取元素定位"><a href="#获取元素定位" class="headerlink" title="获取元素定位"></a>获取元素定位</h3><p>dom.clientWidth dom.offsetWidth 在不同的盒模型下表现不一致<br>border-box<br>dom.clientWidth = 设置的width - border-width<br>dom.offsetWidth = 设置的width</p><p>content-box<br>dom.clientWidth = 设置的width + padding-width<br>dom.offsetWidth = 设置的width + padding-width + border-width</p><p>dom.clientLeft  dom.offsetLeft 在不同的盒模型下表现一致<br>dom.clientLeft = border-left-width<br>dom.offsetLeft = 左边框外侧到 已定位父元素左边框内侧</p><p>dom.scrollWidth = 滚动区真实的width + padding-width<br>dom.scrollTop =  滚动区已经滚动卷去的高度</p><p>dom.getBoundingClientRect().width 和 dom.offsetWidth 表现一致<br>dom.getBoundingClientRect().top 返回元素在文档流中的高度</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以此记录那些用过的dom操作&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>大道万千，日拱一卒</title>
    <link href="//fenghou.site/2018/05/25/2018-05-25-diary-fe/"/>
    <id>//fenghou.site/2018/05/25/2018-05-25-diary-fe/</id>
    <published>2018-05-25T01:22:43.000Z</published>
    <updated>2018-06-11T06:28:24.715Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

      
    
    </summary>
    
    
      <category term="随笔" scheme="//fenghou.site/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>个人项目经验</title>
    <link href="//fenghou.site/2018/05/10/2018-05-10-interview-work-peoject/"/>
    <id>//fenghou.site/2018/05/10/2018-05-10-interview-work-peoject/</id>
    <published>2018-05-10T03:01:38.000Z</published>
    <updated>2018-06-11T06:28:24.715Z</updated>
    
    <content type="html"><![CDATA[<p>本文 需 3 分钟左右 阅读时间<br><a id="more"></a></p><h3 id="格家网络"><a href="#格家网络" class="headerlink" title="格家网络"></a>格家网络</h3><p><code>2017.03 - 至今</code><br>商家后台<br>负责项目的构建 模块化 组件化开发<br>负责项目的开发与维护</p><p><code>2017.07 - 至今</code><br>商品库管理<br>负责项目的构建 模块化 组件化开发<br>负责项目的开发与维护</p><blockquote><p>在这一段时间<br>独自开发了商家后台 和 商品库管理系统<br>期间碰到了很多问题 举几个例子<br><code>架构层面</code><br>1.作为传统的管理页面 很多都是查询搜索结果页 那么<br>能不能作为业务组件抽离出来做成可配置的 ？<br>能不能从把它项目中抽离出来进行托管 然后在别的项目中应用 ？<br>2.对于重复请求 二次点击 有没有通用的拦截实现 ？<br>对于请求的成功失败 有没有全局通用的错误回调机制 ？<br>3.什么样的设计能满足组件 接口 路由 vuex 等的合理调用呢 ？<br>什么样的代码结构 能满足 拓展性呢 ？<br><code>业务逻辑层面</code><br>搜索页面中 能不能对搜索选项进行判断 能不能根据已有的搜索选项地址 进行加载 ？全局的回车搜索 ？<br>批量上传 如何保证顺序 ？<br>省市区选择树 如何保证页面不卡 ？<br>分页选择 再次进入当前页 如何渲染上次的选择 ？<br><code>布局层面</code><br>如何适应不同窗口 ？<br>如何定义基础样式 ？</p></blockquote><p>目前为止 我搭建的项目架构 已在组内 推广使用<br>我本地项目已将 部分业务组件 托管在npm上</p><p>期间明白<br>开发前的前后端沟通 很重要<br>想清楚再写 很重要<br>在信息共享时代 想法和视野 很重要</p><p><a href="https://github.com/luyi10year/vue-server-bg-temp" target="_blank" rel="noopener">项目地址</a></p><h3 id="琐碎的个人时间"><a href="#琐碎的个人时间" class="headerlink" title="琐碎的个人时间"></a>琐碎的个人时间</h3><p>这个想了想还是放第二吧<br>这一年 基本上大部分的时间 都花在处理 业务逻辑 上<br>对于项目中用到的各种框架 其实知之甚少<br>期间 有过不少想法 但实际落地甚少<br>但是 回头看看 感觉自己比之前还是有点进步的<br>这一年多研究过各种框架源码 也能明个大概<br>发现css 其实很难 但从其设计角度研究研究 其实也不难 很多时候顺其自然 反倒效果更好<br>发现js  基础真的很重要  时不时看看总能研究出点新东西<br>发现canvas 其实能做的事真的很多 意料之外情理之中<br>发现前端自动化脚本 也只是js 可以随心所欲<br>发现各种 .xxx 文件其实也不那么 可怕<br>发现请求协议 再怎么复杂多变 还是有迹可循<br>发现服务器部署维护 也不是那么遥不可及<br>发现代码的托管 真的也只是托管我的代码<br>发现所有的框架 都只是为了方便服务开发<br>发现技术真的没有好坏 只有适不适用业务</p><h3 id="Holo网站"><a href="#Holo网站" class="headerlink" title="Holo网站"></a>Holo网站</h3><p>一个朋友让我帮他写的网站 用作他现在创业项目的宣传<br>他们团队能提供的 就是一个服务器的账号密码 和 设计稿<br>要求是 兼容所有设备<br>解决方案 响应式 ？ 自适应 ？</p><p><a href="http://www.holoartstudio.com" target="_blank" rel="noopener">网站地址</a></p><h3 id="想去网"><a href="#想去网" class="headerlink" title="想去网"></a>想去网</h3><p>这期间 有快一年是只有我一个前端<br>大部分的项目 前后端没有分离 前端采用的 velocity 模版<br>那会对于网站的日常开发 是基于zepto<br>css预处理用的是scss 并且自己写了一套 rem的布局方案<br>对于日常的活动开发 放弃第三方的框架 自己封装了个基础库 （包括基础的dom操作 工具 懒加载等）<br>能共用的也基本上共用了(分享 活动模版等)<br>大部分项目构建工具用的是gulp 也能配置热加载 自动更新</p><p>印象里 那段时间其实做了很多东西<br>但现在回过头看 其实好像没做什么</p><p><a href="http://www.xiangqu.com/" target="_blank" rel="noopener">网站地址</a></p><p><code>2015.08 – 2017.03</code><br>   双十一活动、双十二活动、年中活动、年终活动<br>   二周年活动、情人节活动、类黑凤梨传播活动、<br>   微信书法、运营日常活动模板等等<br><code>2017.02</code><br>   微信推广联盟后台<br>   负责项目构建 开发<br><code>2017.01</code><br>   微信小程序开发（好设计精选）<br>   负责项目架构，登录逻辑，下单支付主流程开发<br><code>2016.07 - 2016.08</code><br>   网站交易模块重构<br>   负责交易相关逻辑接口梳理和重写<br>   包括下单，二次支付，合并付款，优惠券选择<br>   商家版买家版订单管理，购物车，商品详情等<br><code>2016.06 - 2016.07</code><br>   网站退货退款模块<br>   新增网站退货退款功能<br>   移动端App内嵌H5页面<br><code>2016.03 - 2016.04</code><br>   微信商城<br>   H5微信商城页面改版</p><h3 id="感谢阅读"><a href="#感谢阅读" class="headerlink" title="感谢阅读"></a>感谢阅读</h3><p>当然 文字是苍白的 我更倾向于面对面的交流</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文 需 3 分钟左右 阅读时间&lt;br&gt;
    
    </summary>
    
    
      <category term="interview" scheme="//fenghou.site/tags/interview/"/>
    
  </entry>
  
  <entry>
    <title>一颗关于省市区的树</title>
    <link href="//fenghou.site/2018/04/20/2018-04-20-js-province-city-district/"/>
    <id>//fenghou.site/2018/04/20/2018-04-20-js-province-city-district/</id>
    <published>2018-04-20T06:17:54.000Z</published>
    <updated>2018-06-11T06:28:24.714Z</updated>
    
    <content type="html"><![CDATA[<p>如何绘制一个省市区三级可选择的树？<br><a id="more"></a></p><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p>首先你拥有的数据结构 所有省市区的信息列表 以及已经选中的信息<br>用的是element-ui的 el-tree<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cityStorage = &#123;</span><br><span class="line">    provinceList:[</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">provinceId</span>: <span class="string">"110000"</span>, <span class="attr">name</span>: <span class="string">"北京市"</span>&#125;</span><br><span class="line">    ],<span class="comment">//所有省</span></span><br><span class="line">    cityList:[</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">cityId</span>: <span class="string">"110100"</span>, <span class="attr">name</span>: <span class="string">"北京市"</span>, <span class="attr">provinceId</span>: <span class="string">"110000"</span>, <span class="attr">zipCode</span>: <span class="string">"102600"</span>&#125;</span><br><span class="line">    ],<span class="comment">//所有市</span></span><br><span class="line">    districtList:[</span><br><span class="line">        &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">districtId</span>: <span class="string">"110101"</span>, <span class="attr">name</span>: <span class="string">"东城区"</span>, <span class="attr">cityId</span>: <span class="string">"110100"</span>&#125;</span><br><span class="line">    ],<span class="comment">//所有区</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">const</span> selectList = [</span><br><span class="line">    &#123; <span class="attr">provinceId</span>: <span class="string">"110000"</span>,<span class="attr">cityId</span>: <span class="string">"110100"</span>,<span class="attr">districtId</span>: <span class="string">"110101"</span>&#125;</span><br><span class="line">] <span class="comment">// 所有选中的省市区 ID 保存的时候也是这个格式</span></span><br></pre></td></tr></table></figure></p><h3 id="按需渲染"><a href="#按需渲染" class="headerlink" title="按需渲染"></a>按需渲染</h3><p>首先 作为有相对要求的开发人员 不会考虑说 直接的去渲染出整个树 那整个省市区加载的速度绝对会是感人的</p><p>那么 可行的解决方法是 一开始 只展示 所有省的信息 点击展开 时再去渲染下一层 数据</p><p>这个对应关系 相对还容易找 每次点击展开能获得当前的层级和id 根据层级和id去对应的city和district中过滤就行</p><p>这里分享一个小技巧 不通过判断的方式去对应 而是通过数据的方式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//level , id</span></span><br><span class="line"><span class="keyword">const</span> levelConfig = &#123;</span><br><span class="line">     <span class="number">1</span>: &#123;</span><br><span class="line">        idLabel: <span class="string">'cityId'</span>,</span><br><span class="line">        fetchLabel: <span class="string">'cityList'</span>,</span><br><span class="line">        perIdLabel: <span class="string">'provinceId'</span></span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="number">2</span>: &#123;</span><br><span class="line">        idLabel: <span class="string">'districtId'</span>,</span><br><span class="line">        fetchLabel: <span class="string">'districtList'</span>,</span><br><span class="line">        perIdLabel: <span class="string">'cityId'</span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 那么过滤就可以这么写</span></span><br><span class="line">cityStorage[levelConfig[level].fetchLabel].filter(<span class="function"><span class="params">item</span> =&gt;</span> item[levelConfig[level].perIdLabel] == id)</span><br></pre></td></tr></table></figure></p><p>获取数据 然后加载对应下一层 一切到现在为止 都还可以<br><img src="/assets/blogImg/tree/new-tree.png" alt="new-tree"></p><h3 id="赋值渲染"><a href="#赋值渲染" class="headerlink" title="赋值渲染"></a>赋值渲染</h3><p>再往下 如果我有初始数据呢？</p><p>在只展示省信息的情况下 结合前面给的数据格式 怎么展示 这个省是 全选 半选(表示省中有选择的市或者区但没选全) 和 不选 ？</p><p>第一 你需要设法知道省份满足全选的条件<br>第二 你需要设法知道已经选择的情况</p><p>所以这个时候 需要做的 是计数 也就 ++<br>遍历一遍 cityStorage.provinceList 和 cityStorage.cityList<br>往Map中初始化 provinceId cityId 对应的计数<br>在遍历 cityStorage.districtList 过程中往Map 对应provinceId cityId 增加计数</p><p>那么 有没有什么别的基础数据 是要在这个时候初始化的呢？<br>例如 只给你一个 districtId 你怎么才能最快的 找到他对应的 cityId 和 provinceId<br>或者 只给你一个 id 怎么最快找到他 对应的 name 呢<br>Map<br>我们可以构建一个Map来记录我们需要的信息<br>districtId:cityId<br>cityId:provinceId<br>那么 我可以通过 Map[districtId] 找到cityId Map[Map[districtId]] 找到 provinceId<br>id 和 name 的对应关系 也是如此<br>而这些 可以在 计数的 过程进行</p><p>接着 通过已经选择地区 的 列表 获取provinceId cityId的数据 的计数</p><p>两份数据都有了 </p><p>在渲染 省的时候 判断 两份Map中对应的计数 是否相同来渲染勾选</p><p>那半选的状态怎么表示呢？el-tree并不支持设置半选的状态，必须是通过数据的形式呢？<br><img src="/assets/blogImg/tree/edit-tree.png" alt="edit-tree"></p><p>通过模拟子节点的方法 当满足不全选的情况 模拟两个子节点<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> children = [</span><br><span class="line">    &#123;</span><br><span class="line">      id:provinceId+<span class="string">'111'</span>,</span><br><span class="line">      label:name,</span><br><span class="line">      type:<span class="string">'none'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id:provinceId+<span class="string">'222'</span>,</span><br><span class="line">      label:name,</span><br><span class="line">      type:<span class="string">'none'</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>然后选中 其中一个 父元素自然就是半选状态</p><h3 id="保存提交"><a href="#保存提交" class="headerlink" title="保存提交"></a>保存提交</h3><p>最后是保存提交时候的数据处理</p><p>由于模拟了半选状态 所以最后获取到的选中的数据 会有两种</p><p>一种常规的6位 还是一种是模拟的d{6}xxx</p><p>而且如果 是出现这种d{6}xxx的数据 代表的是它所在的一级有些被选中了 而这些数据还没有出现在 渲染树中</p><p>这是就 需要有一个数据结构记录 这种情况</p><p>在已选择的数据 初始化计数的时候 新构建一个Map 存储 provinceId cityId出现的数据的下标(我这边保存的是districtId)<br>provinceId:[districtId,districtId,districtId]<br>cityId:[districtId,districtId,districtId]<br>至此 我们最后能拿到的 选中的 id 有 [310000,410000111,510100,610101]<br>此时这份数据中 有provinceId cityId districtId 以及 模拟的半选数据 怎么尽可能的优雅的生成我们需要的格式呢？</p><p>首先是分类 可以发现 xx0000表示的是省  xxx000 xxxx00 表示的是市<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> _zeo = item.match(<span class="regexp">/(0+)$/g</span>),</span><br><span class="line">           type = _zeo ? _zeo[<span class="number">0</span>] : <span class="string">'0'</span></span><br><span class="line">          <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'0'</span>:</span><br><span class="line">              districtList.push(item)</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'00'</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'000'</span>:</span><br><span class="line">              cityList.push(item)</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'0000'</span>:</span><br><span class="line">              provinceList.push(item)</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure></p><p>而这种410000111 数据 可以通过 先前的 Map 将数据并入 districtList 中</p><p>接着就是净化数据</p><p>省选择了 不需要市的所有id 市选择了 不需要区的所有id</p><p>总结 判断条件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sub = item.substr(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">var</span> re =<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\^'</span> +sub+<span class="string">'\\d&#123;4&#125;'</span>); <span class="comment">// 省</span></span><br><span class="line"><span class="comment">// var sub = item.substr(0,4)</span></span><br><span class="line"><span class="comment">// var re =new RegExp('\^' +sub+'\\d&#123;2&#125;'); // 市</span></span><br><span class="line">cityList.filter(<span class="function"><span class="params">code</span>=&gt;</span>!code.match(re))</span><br></pre></td></tr></table></figure></p><p>最后 provinceList cityList districtList 都是有效的选中值<br>遍历一遍 cityStorage.districtList 将其中在provinceList cityList中存在id的数据并入 districtList中</p><p>此时 districtList 是最终有效的所有选中的 districtId值<br>此时 cityId = Map[districtId] province=Map[cityId]</p><h3 id="展示归并"><a href="#展示归并" class="headerlink" title="展示归并"></a>展示归并</h3><p>保存后希望展示成<br>当选择了一个省份全部地区的时候展示省份名称<br>当选择了一个省份下的部分市时展示市的名称<br>当选择了一个市下的所有地区时,只展示市的名称<br>当选择了一个市下的部分地区时,括号内展示地区名称<br><img src="/assets/blogImg/tree/name.png" alt="edit-tree"></p><p>首先还是通过计数 获取 已经选中的有效的 provinceList cityList districtList<br>数据格式{provinceId: “110000”,cityId: “110100”,districtId: “110101”}</p><p>构建一个存 selectNameList 用于存放已经选中的 name name可以通过前面的Map[id]获取</p><p>provinceList 选择的省没问题 直接推入</p><p>cityList 遍历 构建新的数据 格式 {provinceId: “110000”,cityId: “110100”,districtId: “1”}<br>并入 districtList 中</p><p>对districtList 根据 cityId 排序</p><p>最后 遍历 districtList 通过标记判断每次是否是重复的cityId  设置数组 indeterminateNameList 记录不是全选的市的name<br>不重复 将标记记为当前cityId 如果上一个元素的 districtCode 是 1 将 indeterminateNameList 存入 selectNameList 中<br>selectNameList.push(‘(<span class="c-dis">‘ + indeterminateNameList.join(‘，’) + ‘</span>)’)<br>districtId == 1 全选 存入 selectNameList<br>districtId != 1 不是全选 存入 indeterminateNameList = [cityId]<br>在这个过程中 有需要 还可以记录 cityId 和 indeterminateNameList的管理关系</p><p>最终 selectNameList.join(‘，’) </p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>管理配送模板<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"btn-wrap"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"showTplLayer()"</span>&gt;</span>新增配送模板<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"isReady"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section-item"</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in distributionList"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block-item o-h"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>模板名称：&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">"fl-r"</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">size</span>=<span class="string">"small"</span> @<span class="attr">click</span>=<span class="string">"deleteTpl(index)"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">"fl-r"</span> <span class="attr">style</span>=<span class="string">"margin-right: 10px"</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">size</span>=<span class="string">"small"</span></span></span><br><span class="line"><span class="tag">                                                   @<span class="attr">click</span>=<span class="string">"showTplLayer(index+'')"</span>&gt;</span>修改</span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block-item"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"item.type==1"</span>&gt;</span>限制类型：仅发以下地区<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">"item.type==2"</span>&gt;</span>限制类型：以下地区不发货<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">"item.type==3"</span>&gt;</span>限制类型：限制仅发货省份中的不发货区县<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block-item"</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">span</span>&gt;</span>限制地区：<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"isCityDetail"</span> <span class="attr">v-html</span>=<span class="string">"limitName[index]"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">i</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">"el-icon-loading c-red"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block-item"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>模板描述：&#123;&#123;item.desc&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">"block-item-loading"</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-loading c-red"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">:title</span>=<span class="string">"tplLayer.title"</span> <span class="attr">size</span>=<span class="string">"large"</span> <span class="attr">v-model</span>=<span class="string">"tplLayer.show"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"price-ct"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-ct"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>模板名称：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"tplLayer.inputName"</span> <span class="attr">placeholder</span>=<span class="string">"请输入内容"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>限制类型：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-radio-group</span> <span class="attr">v-model</span>=<span class="string">"tplLayer.radioType"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">"1"</span>&gt;</span>仅发以下地区<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">"2"</span>&gt;</span>以下地区不发货<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">el-radio-group</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>限制地区：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"limit-tree-wrap"</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--:load="loadLimit"--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">el-tree</span></span></span><br><span class="line"><span class="tag">                                    <span class="attr">:data</span>=<span class="string">"limitData"</span></span></span><br><span class="line"><span class="tag">                                    <span class="attr">show-checkbox</span></span></span><br><span class="line"><span class="tag">                                    <span class="attr">node-key</span>=<span class="string">"id"</span></span></span><br><span class="line"><span class="tag">                                    <span class="attr">ref</span>=<span class="string">"tree"</span></span></span><br><span class="line"><span class="tag">                                    @<span class="attr">node-expand</span>=<span class="string">"nodeExpand"</span></span></span><br><span class="line"><span class="tag">                                    @<span class="attr">node-collapse</span>=<span class="string">"nodeCollapse"</span></span></span><br><span class="line"><span class="tag">                                    @<span class="attr">current-change</span>=<span class="string">"checkChange"</span></span></span><br><span class="line"><span class="tag">                                    @<span class="attr">node-click</span>=<span class="string">"nodeClick"</span></span></span><br><span class="line"><span class="tag">                                    <span class="attr">highlight-current</span></span></span><br><span class="line"><span class="tag">                                    <span class="attr">:props</span>=<span class="string">"defaultProps"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">el-tree</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>模板描述：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"tplLayer.inputDesc"</span> <span class="attr">placeholder</span>=<span class="string">"请输入内容"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">"footer"</span> <span class="attr">class</span>=<span class="string">"dialog-footer"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"saveTpl"</span>&gt;</span>确 定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"cancelTpl"</span>&gt;</span>取 消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">title</span>=<span class="string">"提示"</span> <span class="attr">v-model</span>=<span class="string">"dialogVisible"</span> <span class="attr">size</span>=<span class="string">"tiny"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>确定删除【&#123;&#123;distributionListName&#125;&#125;】模板？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">"footer"</span> <span class="attr">class</span>=<span class="string">"dialog-footer"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"dialogVisible = false"</span>&gt;</span>取 消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"confirmDelete"</span>&gt;</span>确 定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> &#123;mapState, mapActions&#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">'distributionTemplate'</span>,</span></span><br><span class="line"><span class="undefined">        created ()&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.initView()</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        data: <span class="function"><span class="params">()</span> =&gt;</span> (&#123;</span></span><br><span class="line"><span class="actionscript">        isReady:<span class="literal">false</span>, </span></span><br><span class="line"><span class="actionscript">        isCityDetail:<span class="literal">false</span>,</span></span><br><span class="line"><span class="undefined">        tplLayer: &#123;</span></span><br><span class="line"><span class="actionscript">            show: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">            title: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">            inputName: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">            inputDesc: <span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">            radioType: 1,</span></span><br><span class="line"><span class="undefined">            index: 0,</span></span><br><span class="line"><span class="undefined">            cityArr: [],</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        limitName:[],</span></span><br><span class="line"><span class="undefined">        localAllCity: &#123;</span></span><br><span class="line"><span class="undefined">            provinceList: [],</span></span><br><span class="line"><span class="undefined">            cityList: [],</span></span><br><span class="line"><span class="undefined">            districtList: []</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="actionscript">        dialogVisible: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">        index: <span class="literal">null</span>,</span></span><br><span class="line"><span class="actionscript">        distributionListName: <span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">        distributionList: [],</span></span><br><span class="line"><span class="undefined">        limitData: [</span></span><br><span class="line"><span class="actionscript"><span class="comment">//              &#123;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                id: 1,</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                label: '一级 1',</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                children: [</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                    &#123;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                      id: 4,</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                      label: '二级 1-1',</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                      children: [</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                          &#123;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                          id: 9,</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                          label: '三级 1-1-1'</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                          &#125;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                      ]</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//                    &#125;]</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//              &#125;</span></span></span><br><span class="line"><span class="undefined">        ],</span></span><br><span class="line"><span class="undefined">        defaultProps: &#123;</span></span><br><span class="line"><span class="actionscript">            children: <span class="string">'children'</span>,</span></span><br><span class="line"><span class="actionscript">            label: <span class="string">'label'</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        mapLimitData:&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        limitCheckList:&#123;</span></span><br><span class="line"><span class="undefined">            province:[],</span></span><br><span class="line"><span class="undefined">            city:[],</span></span><br><span class="line"><span class="undefined">            district:[]</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        mapAllAreaName:&#123;&#125;,</span></span><br><span class="line"><span class="undefined">        mapAllArea:&#123;&#125;,</span></span><br><span class="line"><span class="undefined">        mapAllAreaList:[],</span></span><br><span class="line"><span class="undefined">        mapAreaLength:&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        mapProvinceAreaLength:&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//          1:1</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        mapCityAreaLength:&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//          1:&#123;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//              _len:1,</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//              id:''</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//          &#125;</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        checkMapAreaLength:&#123;&#125;,</span></span><br><span class="line"><span class="undefined">        indeterminateArea:&#123;&#125;</span></span><br><span class="line"><span class="undefined">    &#125;),</span></span><br><span class="line"><span class="undefined">    computed: &#123;</span></span><br><span class="line"><span class="actionscript">    ...mapState([<span class="string">'allCity'</span>])</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    methods: &#123;</span></span><br><span class="line"><span class="actionscript">    ...mapActions([<span class="string">'getDistributionTemplate'</span>, <span class="string">'deleteDeliverTpl'</span>, <span class="string">'saveDeliverTpl'</span>, <span class="string">'getAllCity'</span>, <span class="string">'callSetNotice'</span>]),</span></span><br><span class="line"><span class="undefined">            initView() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (!Util.storage.get(<span class="string">'CityStorage'</span>)) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.getAllCity()</span></span><br><span class="line"><span class="javascript">                    .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    Util.storage.set(<span class="string">'CityStorage'</span>, <span class="keyword">this</span>.allCity.data)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.initList()</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.initList()</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        initList() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.setAreaBase()</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.callGetDistributionTemplate()</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        setAreaBase()&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> allList = Util.storage.get(<span class="string">'CityStorage'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.localAllCity.provinceList = allList.provinceList</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.localAllCity.cityList = allList.cityList</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.localAllCity.districtList = allList.districtList</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//初始化处理省 市 区 全选计数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.localAllCity.provinceList.forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.mapProvinceAreaLength[item.provinceId] = <span class="number">0</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.mapAllAreaName[item.provinceId] = item.name</span></span><br><span class="line"><span class="actionscript"><span class="comment">//          this.mapAllAreaList[item.provinceId] = []</span></span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.localAllCity.cityList.forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.mapCityAreaLength[item.cityId] = &#123;</span></span><br><span class="line"><span class="undefined">                len:0,</span></span><br><span class="line"><span class="undefined">                id:item.provinceId</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.mapAllArea[item.cityId] = item.provinceId</span></span><br><span class="line"><span class="actionscript"><span class="comment">//          this.mapAllAreaList[item.cityId] = []</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//          this.mapAllAreaList[item.provinceId].push(item.cityId)</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.mapAllAreaName[item.cityId] = item.name</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.localAllCity.districtList.map(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span>(<span class="keyword">this</span>.mapCityAreaLength[item.cityId])&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.mapCityAreaLength[item.cityId].len++</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.mapProvinceAreaLength[<span class="keyword">this</span>.mapCityAreaLength[item.cityId].id] ++</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            item.provinceId = <span class="keyword">this</span>.mapAllArea[item.cityId]</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.mapAllArea[item.districtId] = item.cityId</span></span><br><span class="line"><span class="actionscript"><span class="comment">//          this.mapAllAreaList[item.cityId].push(item.districtId)</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.mapAllAreaName[item.districtId] = item.name</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        callGetDistributionTemplate()&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.isReady = <span class="literal">false</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.getDistributionTemplate()</span></span><br><span class="line"><span class="javascript">                .then(<span class="function">(<span class="params">rs</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//遍历城市编码转换城市名称</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.distributionList = rs</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 延时加载</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//            this.$nextTick(() =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//              this.setLimitAreaName()</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//            &#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.isReady = <span class="literal">true</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.isCityDetail = <span class="literal">false</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.limitName = []</span></span><br><span class="line"><span class="actionscript">            setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.setLimitAreaName()</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.isCityDetail = <span class="literal">true</span></span></span><br><span class="line"><span class="actionscript">            &#125;.bind(<span class="keyword">this</span>),<span class="number">1000</span>)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        setLimitAreaName()&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, j = <span class="keyword">this</span>.distributionList.length; i &lt; j; i++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> list = <span class="keyword">this</span>.distributionList[i].limitAreaList</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _checkMapAreaLength = &#123;&#125;, _province = [], _city = [], _district = []</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> n = <span class="number">0</span>, m = list.length; n &lt; m; n++) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> item = list[n]</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (!_checkMapAreaLength[item.provinceCode]) &#123;</span></span><br><span class="line"><span class="undefined">                        _checkMapAreaLength[item.provinceCode] = 1</span></span><br><span class="line"><span class="actionscript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="undefined">                        _checkMapAreaLength[item.provinceCode]++</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (!_checkMapAreaLength[item.cityCode]) &#123;</span></span><br><span class="line"><span class="undefined">                        _checkMapAreaLength[item.cityCode] = 1</span></span><br><span class="line"><span class="actionscript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="undefined">                        _checkMapAreaLength[item.cityCode]++</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> _checkMapAreaLength) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 选择的 省</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (_checkMapAreaLength[i] == <span class="keyword">this</span>.mapProvinceAreaLength[i]) &#123;</span></span><br><span class="line"><span class="undefined">                        _province.push(i)</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 选择 的 市</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (<span class="keyword">this</span>.mapCityAreaLength[i] &amp;&amp; _checkMapAreaLength[i] == <span class="keyword">this</span>.mapCityAreaLength[i].len) &#123;</span></span><br><span class="line"><span class="undefined">                        _city.push(i)</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="javascript">                _district = list.filter(<span class="function"><span class="params">item</span> =&gt;</span> !_province.includes(item.provinceCode) &amp;&amp; !_city.includes(item.cityCode))</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _sNameList = [], _limitList = []</span></span><br><span class="line"><span class="undefined">                _limitList = _limitList.concat(_district)</span></span><br><span class="line"><span class="javascript">                _province.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    _sNameList.push(<span class="keyword">this</span>.mapAllAreaName[item])</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="javascript">                _city.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (!_province.includes(<span class="keyword">this</span>.mapAllArea[item])) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> _opts = &#123;</span></span><br><span class="line"><span class="actionscript">                        provinceCode: <span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">                        cityCode: item,</span></span><br><span class="line"><span class="undefined">                        districtCode: 1,</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                    _limitList.push(_opts)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="javascript">                _limitList.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> a.cityCode - b.cityCode</span></span><br><span class="line"><span class="undefined">                &#125;)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> current = <span class="string">''</span>, _subList = []</span></span><br><span class="line"><span class="javascript">                _limitList.forEach(<span class="function">(<span class="params">item, idx</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (item.cityCode != current) &#123;</span></span><br><span class="line"><span class="undefined">                    current = item.cityCode</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (_limitList[idx - <span class="number">1</span>] &amp;&amp; _limitList[idx - <span class="number">1</span>].districtCode != <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                        _sNameList.push(<span class="keyword">this</span>.mapAllAreaName[_limitList[idx - <span class="number">1</span>].cityCode] + <span class="string">'(&lt;span style="color:#aaa"&gt;'</span> + _subList.join(<span class="string">'，'</span>) + <span class="string">'&lt;/span&gt;)'</span>)</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (item.districtCode == <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                        _sNameList.push(<span class="keyword">this</span>.mapAllAreaName[item.cityCode])</span></span><br><span class="line"><span class="actionscript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                        _subList = [<span class="keyword">this</span>.mapAllAreaName[item.districtCode]]</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    _subList.push(<span class="keyword">this</span>.mapAllAreaName[item.districtCode])</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.limitName.push(_sNameList.join(<span class="string">'，'</span>))</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        showTplLayer(index)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.index = index || <span class="literal">null</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.tplLayer.title = index ? <span class="string">'修改配送模板'</span> : <span class="string">'新增配送模板'</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.tplLayer.show = <span class="literal">true</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (index) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> _thisTplObj = <span class="keyword">this</span>.distributionList[index]</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.tplLayer.inputName = _thisTplObj.name</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.tplLayer.inputDesc = _thisTplObj.desc</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.tplLayer.radioType = _thisTplObj.type</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.setLimitCheckList(_thisTplObj.limitAreaList)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.tplLayer.inputName = <span class="string">''</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.tplLayer.inputDesc = <span class="string">''</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.tplLayer.radioType = <span class="number">1</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.limitDefault()</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        limitDefault()&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> _check = []</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.localAllCity.provinceList.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _opts = &#123;</span></span><br><span class="line"><span class="undefined">                    id: item.provinceId,</span></span><br><span class="line"><span class="undefined">                    label: item.name,</span></span><br><span class="line"><span class="actionscript">                    type:<span class="string">'provinceId'</span>,</span></span><br><span class="line"><span class="undefined">                    provinceId:item.provinceId,</span></span><br><span class="line"><span class="actionscript">                    cityId:<span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">                    districtId:<span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">                    children:[</span></span><br><span class="line"><span class="undefined">                        &#123;</span></span><br><span class="line"><span class="actionscript">                            id:item.provinceId+<span class="string">'111'</span>,</span></span><br><span class="line"><span class="undefined">                            label:item.name,</span></span><br><span class="line"><span class="actionscript">                            type:<span class="string">'none'</span></span></span><br><span class="line"><span class="undefined">                        &#125;,</span></span><br><span class="line"><span class="undefined">                        &#123;</span></span><br><span class="line"><span class="actionscript">                            id:item.provinceId+<span class="string">'222'</span>,</span></span><br><span class="line"><span class="undefined">                            label:item.name,</span></span><br><span class="line"><span class="actionscript">                            type:<span class="string">'none'</span></span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="undefined">                    ],</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.limitData.push(_opts)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span>(<span class="keyword">this</span>.limitCheckList.province.includes(item.provinceId))&#123;</span></span><br><span class="line"><span class="undefined">                _check.push(item.provinceId)</span></span><br><span class="line"><span class="actionscript">                _check.push(item.provinceId+<span class="string">'111'</span>)</span></span><br><span class="line"><span class="actionscript">                _check.push(item.provinceId+<span class="string">'222'</span>)</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.checkMapAreaLength[item.provinceId])&#123;</span></span><br><span class="line"><span class="actionscript">                _check.push(item.provinceId+<span class="string">'111'</span>)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.setCheckLimitArea(_check)</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        mockData()&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> _list = [</span></span><br><span class="line"><span class="undefined">                &#123;</span></span><br><span class="line"><span class="actionscript">                    provinceCode:<span class="string">'110000'</span>,</span></span><br><span class="line"><span class="actionscript">                    cityCode:<span class="string">'110100'</span>,</span></span><br><span class="line"><span class="actionscript">                    districtCode:<span class="string">'110228'</span></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                &#123;</span></span><br><span class="line"><span class="actionscript">                    provinceCode:<span class="string">'110000'</span>,</span></span><br><span class="line"><span class="actionscript">                    cityCode:<span class="string">'110100'</span>,</span></span><br><span class="line"><span class="actionscript">                    districtCode:<span class="string">'110229'</span></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="actionscript"><span class="comment">//          &#123;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//            provinceCode:'110000',</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//            cityCode:'110100',</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//            districtCode:'110230'</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//          &#125;</span></span></span><br><span class="line"><span class="undefined">            ]</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> _len = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">17</span>).fill(<span class="number">1</span>)</span></span><br><span class="line"><span class="javascript">            _len.map(<span class="function">(<span class="params">item,idx</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _code = <span class="string">'1101'</span> + (idx &lt; <span class="number">9</span> ? <span class="string">'0'</span> : <span class="string">''</span>) + (idx+<span class="number">1</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span>(idx != <span class="number">9</span>)&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _opts = &#123;</span></span><br><span class="line"><span class="actionscript">                    provinceCode:<span class="string">'110000'</span>,</span></span><br><span class="line"><span class="actionscript">                    cityCode:<span class="string">'110100'</span>,</span></span><br><span class="line"><span class="undefined">                    districtCode:_code</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                _list.push(_opts)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> _list</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        setLimitCheckList(rs)&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//        let list = this.mockData()</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> list = rs</span></span><br><span class="line"><span class="javascript">            list.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//已选择 的 省份 计数</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (!<span class="keyword">this</span>.checkMapAreaLength[item.provinceCode]) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.checkMapAreaLength[item.provinceCode] = <span class="number">1</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.indeterminateArea[item.provinceCode] = [item.cityCode]</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.checkMapAreaLength[item.provinceCode]++</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span>(!<span class="keyword">this</span>.indeterminateArea[item.provinceCode].includes(item.cityCode))&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.indeterminateArea[item.provinceCode].push(item.cityCode)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//已选择 的 城市 计数</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (!<span class="keyword">this</span>.checkMapAreaLength[item.cityCode]) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.checkMapAreaLength[item.cityCode] = <span class="number">1</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.indeterminateArea[item.cityCode] = [item.districtCode]</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.checkMapAreaLength[item.cityCode]++</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span>(!<span class="keyword">this</span>.indeterminateArea[item.cityCode].includes(item.districtCode))&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.indeterminateArea[item.cityCode].push(item.districtCode)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//选择的 区</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.limitCheckList.district.push(item.districtCode)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> <span class="keyword">this</span>.checkMapAreaLength) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 选择的 省</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (<span class="keyword">this</span>.checkMapAreaLength[i] == <span class="keyword">this</span>.mapProvinceAreaLength[i]) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.limitCheckList.province.push(i)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 选择 的 市</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (<span class="keyword">this</span>.mapCityAreaLength[i] &amp;&amp; <span class="keyword">this</span>.checkMapAreaLength[i] == <span class="keyword">this</span>.mapCityAreaLength[i].len) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.limitCheckList.city.push(i)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//          if(this.mapProvinceAreaLength[i])&#123;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//            console.log(i,this.checkMapAreaLength[i],this.mapProvinceAreaLength[i])</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//          &#125;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//          if(this.mapCityAreaLength[i])&#123;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//            console.log(i,this.checkMapAreaLength[i],this.mapCityAreaLength[i].len)</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//          &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//        console.log(this.limitCheckList.city)</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        nodeExpand(data, node)&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> id = data.id,</span></span><br><span class="line"><span class="undefined">                _level = node.level,</span></span><br><span class="line"><span class="undefined">                _checked = node.checked,</span></span><br><span class="line"><span class="undefined">                _indeterminate = node.indeterminate</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 已经展开 back</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (<span class="keyword">this</span>.mapLimitData[id]) <span class="keyword">return</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.mapLimitData[id] = <span class="literal">true</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 市 区 对应map</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> _levelMap = &#123;</span></span><br><span class="line"><span class="undefined">                1: &#123;</span></span><br><span class="line"><span class="actionscript">                    idLabel: <span class="string">'cityId'</span>,</span></span><br><span class="line"><span class="actionscript">                    fetchLabel: <span class="string">'cityList'</span>,</span></span><br><span class="line"><span class="actionscript">                    perIdLabel: <span class="string">'provinceId'</span></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                2: &#123;</span></span><br><span class="line"><span class="actionscript">                    idLabel: <span class="string">'districtId'</span>,</span></span><br><span class="line"><span class="actionscript">                    fetchLabel: <span class="string">'districtList'</span>,</span></span><br><span class="line"><span class="actionscript">                    perIdLabel: <span class="string">'cityId'</span></span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> configLevel = _levelMap[_level]</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> _list = [], selectId = []</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.localAllCity[configLevel.fetchLabel].filter(<span class="function"><span class="params">item</span> =&gt;</span> item[configLevel.perIdLabel] == id).forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _opts = &#123;</span></span><br><span class="line"><span class="actionscript">                    id: item[configLevel.idLabel]+<span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">                    label: item.name,</span></span><br><span class="line"><span class="actionscript">                    provinceId: item.provinceId || <span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">                    cityId: item.cityId,</span></span><br><span class="line"><span class="actionscript">                    districtId: item.districtId || <span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">                    type: configLevel.idLabel</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (_level &lt; <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="undefined">                _opts.children = [</span></span><br><span class="line"><span class="undefined">                    &#123;</span></span><br><span class="line"><span class="actionscript">                        id: item[configLevel.idLabel] + <span class="string">'111'</span>,</span></span><br><span class="line"><span class="undefined">                        label: item.name,</span></span><br><span class="line"><span class="actionscript">                        type: <span class="string">'none'</span></span></span><br><span class="line"><span class="undefined">                    &#125;,</span></span><br><span class="line"><span class="undefined">                    &#123;</span></span><br><span class="line"><span class="actionscript">                        id: item[configLevel.idLabel] + <span class="string">'222'</span>,</span></span><br><span class="line"><span class="undefined">                        label: item.name,</span></span><br><span class="line"><span class="actionscript">                        type: <span class="string">'none'</span></span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                ]</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 父 选择</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (_checked) &#123;</span></span><br><span class="line"><span class="undefined">                selectId.push(item[configLevel.idLabel])</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 父 未选择 但是有子元素选择</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">else</span> <span class="keyword">if</span> (_indeterminate) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (<span class="keyword">this</span>.limitCheckList.city.includes(item[configLevel.idLabel])) &#123;</span></span><br><span class="line"><span class="undefined">                    selectId.push(item[configLevel.idLabel])</span></span><br><span class="line"><span class="actionscript">                    selectId.push(item[configLevel.idLabel]+<span class="string">'111'</span>)</span></span><br><span class="line"><span class="actionscript">                    selectId.push(item[configLevel.idLabel]+<span class="string">'222'</span>)</span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.checkMapAreaLength[item[configLevel.idLabel]]) &#123;</span></span><br><span class="line"><span class="actionscript">                    selectId.push(item[configLevel.idLabel] + <span class="string">'111'</span>)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (<span class="keyword">this</span>.limitCheckList.district.includes(item[configLevel.idLabel])) &#123;</span></span><br><span class="line"><span class="undefined">                    selectId.push(item[configLevel.idLabel])</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            _list.push(_opts)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="actionscript"><span class="comment">//        console.log(selectId)</span></span></span><br><span class="line"><span class="undefined">            data.children = _list</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.setCheckLimitArea(selectId)</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        nodeCollapse(data, node)&#123;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        checkChange(data)&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        nodeClick(data,node)&#123;&#125;,</span></span><br><span class="line"><span class="undefined">        setCheckLimitArea(list)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (!list.length) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _checkList = <span class="keyword">this</span>.$refs.tree.getCheckedKeys().concat(list)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.$refs.tree.setCheckedKeys(_checkList);</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        loadLimit(node,resolve)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (node.level === <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> resolve(<span class="keyword">this</span>.limitData);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> configLevel = &#123;</span></span><br><span class="line"><span class="actionscript">                    idLabel:<span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">                    fetchLabel:<span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">                    perIdLabel:<span class="string">''</span></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                id = node.data.id</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (node.level === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                configLevel.fetchLabel = <span class="string">'cityList'</span></span></span><br><span class="line"><span class="actionscript">                configLevel.idLabel = <span class="string">'cityId'</span></span></span><br><span class="line"><span class="actionscript">                configLevel.perIdLabel = <span class="string">'provinceId'</span></span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (node.level === <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                configLevel.fetchLabel = <span class="string">'districtList'</span></span></span><br><span class="line"><span class="actionscript">                configLevel.idLabel = <span class="string">'districtId'</span></span></span><br><span class="line"><span class="actionscript">                configLevel.perIdLabel = <span class="string">'cityId'</span></span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> resolve([]);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> _limitData = []</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.localAllCity[configLevel.fetchLabel].filter(<span class="function"><span class="params">item</span>=&gt;</span>item[configLevel.perIdLabel] == id).forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _opts = &#123;</span></span><br><span class="line"><span class="undefined">                    id: item[configLevel.idLabel],</span></span><br><span class="line"><span class="undefined">                    label: item.name,</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                _limitData.push(_opts)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> resolve(_limitData);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        cancelTpl()&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.tplLayer.show = <span class="literal">false</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.limitData = []</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.mapLimitData = &#123;&#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.limitCheckList = &#123;</span></span><br><span class="line"><span class="undefined">                province:[],</span></span><br><span class="line"><span class="undefined">                city:[],</span></span><br><span class="line"><span class="undefined">                district:[]</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.checkMapAreaLength = &#123;&#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.indeterminateArea = &#123;&#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        deleteTpl(index)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.index = index</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.distributionListName = <span class="keyword">this</span>.distributionList[index].name</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.dialogVisible = <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        saveTpl()&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> limitAreaList = []</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (!<span class="keyword">this</span>.tplLayer.inputName) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.getNotice(<span class="string">'请输入运费模板名称'</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (!<span class="keyword">this</span>.tplLayer.inputDesc) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.getNotice(<span class="string">'请输入运费模板描述'</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            limitAreaList = <span class="keyword">this</span>.changeSelectCodeToList(<span class="keyword">this</span>.$refs.tree.getCheckedKeys())</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//        return false</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> opts = &#123;</span></span><br><span class="line"><span class="actionscript">                id: <span class="keyword">this</span>.index === <span class="literal">null</span> ? <span class="string">''</span> : <span class="keyword">this</span>.distributionList[<span class="keyword">this</span>.index].id,</span></span><br><span class="line"><span class="actionscript">                name: <span class="keyword">this</span>.tplLayer.inputName,</span></span><br><span class="line"><span class="actionscript">                desc: <span class="keyword">this</span>.tplLayer.inputDesc,</span></span><br><span class="line"><span class="actionscript">                type: <span class="keyword">this</span>.tplLayer.radioType,</span></span><br><span class="line"><span class="undefined">                limitAreaList: limitAreaList,</span></span><br><span class="line"><span class="undefined">                exceptAreaList: []</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.saveDeliverTpl(opts)</span></span><br><span class="line"><span class="javascript">                .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.callGetDistributionTemplate()</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.cancelTpl()</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        changeSelectCodeToList(list)&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//           //xx0000 省份</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//          // xxxx00 市</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//          // xx0000xxx 省份半选</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//          // xxxx00xxx 市半选</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> indeterminate = [],</span></span><br><span class="line"><span class="undefined">                districtList = [],</span></span><br><span class="line"><span class="undefined">                cityList = [],</span></span><br><span class="line"><span class="undefined">                provinceList = []</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, j = list.length; i &lt; j; i++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> item = list[i]</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (item.length &gt; <span class="number">6</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> _item = item.replace(<span class="regexp">/\d&#123;3&#125;$/</span>, <span class="string">''</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(_item.match(<span class="regexp">/0000$/g</span>))&#123;</span></span><br><span class="line"><span class="actionscript">                        indeterminate = indeterminate.concat(<span class="keyword">this</span>.indeterminateArea[_item])</span></span><br><span class="line"><span class="actionscript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="undefined">                        indeterminate.push(_item)</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">continue</span>;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _zeo = item.match(<span class="regexp">/(0+)$/g</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> type = _zeo ? _zeo[<span class="number">0</span>] : <span class="string">'0'</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">switch</span> (type) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">case</span> <span class="string">'0'</span>:</span></span><br><span class="line"><span class="undefined">                        districtList.push(item)</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">case</span> <span class="string">'00'</span>:</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">case</span> <span class="string">'000'</span>:</span></span><br><span class="line"><span class="undefined">                        cityList.push(item)</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">case</span> <span class="string">'0000'</span>:</span></span><br><span class="line"><span class="undefined">                        provinceList.push(item)</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//        console.log('i',indeterminate)</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//        console.log('d',districtList)</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//        console.log('c',cityList)</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//        console.log('p',provinceList)</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//        return false</span></span></span><br><span class="line"><span class="javascript">            indeterminate.forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span>(<span class="keyword">this</span>.indeterminateArea[item])&#123;</span></span><br><span class="line"><span class="actionscript">                districtList = districtList.concat(<span class="keyword">this</span>.indeterminateArea[item])</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="javascript">            provinceList.forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _sub = item.substr(<span class="number">0</span>,<span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> re =<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\^'</span> +_sub+<span class="string">'\\d&#123;4&#125;'</span>,<span class="string">'g'</span>);</span></span><br><span class="line"><span class="javascript">            cityList = cityList.filter(<span class="function">(<span class="params">code</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> !code.match(re)</span></span><br><span class="line"><span class="undefined">                &#125;)</span></span><br><span class="line"><span class="javascript">            districtList = districtList.filter(<span class="function">(<span class="params">code</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> !code.match(re)</span></span><br><span class="line"><span class="undefined">                &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="javascript">            cityList.forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _sub = item.substr(<span class="number">0</span>,<span class="number">4</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> re =<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\^'</span> +_sub+<span class="string">'\\d&#123;2&#125;'</span>,<span class="string">'g'</span>);</span></span><br><span class="line"><span class="javascript">            districtList = districtList.filter(<span class="function">(<span class="params">code</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> !code.match(re)</span></span><br><span class="line"><span class="undefined">                &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> _limitList = []</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            districtList.forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _opts = &#123;</span></span><br><span class="line"><span class="actionscript">                    provinceCode:<span class="keyword">this</span>.mapAllArea[<span class="keyword">this</span>.mapAllArea[item]],</span></span><br><span class="line"><span class="actionscript">                    cityCode:<span class="keyword">this</span>.mapAllArea[item],</span></span><br><span class="line"><span class="undefined">                    districtCode:item</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                _limitList.push(_opts)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.localAllCity.districtList.forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span>(cityList.includes(item.cityId) || provinceList.includes(item.provinceId))&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _opts = &#123;</span></span><br><span class="line"><span class="undefined">                    provinceCode:item.provinceId,</span></span><br><span class="line"><span class="undefined">                    cityCode:item.cityId,</span></span><br><span class="line"><span class="undefined">                    districtCode:item.districtId</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                _limitList.push(_opts)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//        console.log('d',districtList)</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//        console.log('c',cityList)</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//        console.log('p',provinceList)</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//        console.log('limit',_limitList)</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> _limitList</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        confirmDelete()&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.deleteDeliverTpl(&#123;</span></span><br><span class="line"><span class="actionscript">                templateId: <span class="keyword">this</span>.distributionList[<span class="keyword">this</span>.index].id</span></span><br><span class="line"><span class="javascript">            &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.callGetDistributionTemplate()</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.dialogVisible = <span class="literal">false</span></span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        getNotice(msg)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> notice = &#123;</span></span><br><span class="line"><span class="actionscript">                isShow: <span class="literal">true</span>,</span></span><br><span class="line"><span class="undefined">                msg: msg,</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.callSetNotice(notice)</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">'less'</span> <span class="attr">rel</span>=<span class="string">"stylesheet/less"</span> <span class="attr">scoped</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.block-item-loading</span>&#123;</span></span><br><span class="line"><span class="undefined">        text-align: center;</span></span><br><span class="line"><span class="undefined">        line-height: 400px;</span></span><br><span class="line"><span class="undefined">        font-size: 30px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.slide-fade-enter</span>, <span class="selector-class">.slide-fade-leave-to</span> &#123;</span></span><br><span class="line"><span class="undefined">        transform: translateX(60px);</span></span><br><span class="line"><span class="undefined">        opacity: 1;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何绘制一个省市区三级可选择的树？&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
      <category term="vue" scheme="//fenghou.site/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>前端异常监控</title>
    <link href="//fenghou.site/2018/03/26/2018-03-26-fe-error-statistics/"/>
    <id>//fenghou.site/2018/03/26/2018-03-26-fe-error-statistics/</id>
    <published>2018-03-26T01:40:57.000Z</published>
    <updated>2018-06-11T06:28:24.714Z</updated>
    
    <content type="html"><![CDATA[<p>前端页面报错监听 统计<br><a id="more"></a></p><h3 id="异常捕获"><a href="#异常捕获" class="headerlink" title="异常捕获"></a>异常捕获</h3><p>script error<br>window.error 进行全局捕获<br>对于从cdn引入的js script type<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Vue</span></span><br><span class="line">Vue.config.errorHandler = <span class="function"><span class="keyword">function</span> (<span class="params">err, vm, info</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> &#123;</span><br><span class="line">    message, <span class="comment">// 异常信息</span></span><br><span class="line">    name, <span class="comment">// 异常名称</span></span><br><span class="line">    script,  <span class="comment">// 异常脚本url</span></span><br><span class="line">    line,  <span class="comment">// 异常行号</span></span><br><span class="line">    column,  <span class="comment">// 异常列号</span></span><br><span class="line">    stack  <span class="comment">// 异常堆栈信息</span></span><br><span class="line">  &#125; = err;</span><br><span class="line">  <span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//React</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ErrorBoundary</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state = &#123; <span class="attr">hasError</span>: <span class="literal">false</span> &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentDidCatch(error, info) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123; <span class="attr">hasError</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将异常信息上报给服务器</span></span><br><span class="line">        logErrorToMyService(error, info);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.state.hasError) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'出错了'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.props.children;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//window</span></span><br><span class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">errorMessage, scriptURI, lineNo, columnNo, error</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'errorMessage: '</span> + errorMessage); <span class="comment">// 异常信息</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'scriptURI: '</span> + scriptURI); <span class="comment">// 异常文件路径</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'lineNo: '</span> + lineNo); <span class="comment">// 异常行号</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'columnNo: '</span> + columnNo); <span class="comment">// 异常列号</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'error: '</span> + error); <span class="comment">// 异常堆栈信息</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="异常上报"><a href="#异常上报" class="headerlink" title="异常上报"></a>异常上报</h3><p>模拟图片请求</p><h3 id="异常分析"><a href="#异常分析" class="headerlink" title="异常分析"></a>异常分析</h3><p>nginx 日志分析 </p><p>页面 图形可视化</p><p><a href="https://zhuanlan.zhihu.com/p/32262716" target="_blank" rel="noopener">把前端监控做到极致</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端页面报错监听 统计&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
      <category term="nginx" scheme="//fenghou.site/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>css-world</title>
    <link href="//fenghou.site/2018/03/16/2018-02-26-css-world/"/>
    <id>//fenghou.site/2018/03/16/2018-02-26-css-world/</id>
    <published>2018-03-16T02:04:47.000Z</published>
    <updated>2018-06-11T06:28:24.713Z</updated>
    
    <content type="html"><![CDATA[<p>Css<br><a id="more"></a></p><h3 id="神奇的width-auto"><a href="#神奇的width-auto" class="headerlink" title="神奇的width:auto"></a>神奇的width:auto</h3><p>块级元素 常规定位时 宽度默认展开为父元素的宽度 遇到margin padding 会减小宽度<br>float absolute定位时 宽度包裹内部元素  单当 left和right一起出现时 根据父元素宽度展开</p><h3 id="block-inline"><a href="#block-inline" class="headerlink" title="block inline"></a>block inline</h3><p>外在表现盒子 内在盒子<br>display:inline-block<br>脑补<br>display:inline-inline<br>display:block-block</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Css&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="//fenghou.site/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Knowledge</title>
    <link href="//fenghou.site/2018/03/09/2018-03-09-interview/"/>
    <id>//fenghou.site/2018/03/09/2018-03-09-interview/</id>
    <published>2018-03-09T03:18:48.000Z</published>
    <updated>2018-06-11T06:28:24.714Z</updated>
    
    <content type="html"><![CDATA[<p>MVVM<br><a id="more"></a></p><h2 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h2><p>String-based 模板技术 (基于字符串的parse和compile过程)<br>Dom-based 模板技术 (基于Dom的link或compile过程)<br>杂交的Living templating 技术 (基于字符串的parse 和 基于dom的compile过程)</p><p><a href="http://www.html-js.com/article/Regularjs-Chinese-guidelines-for-a-comprehensive-summary-of-the-front-template-technology" target="_blank" rel="noopener">RegularJS 作者对前端模板技术的总结</a></p><p><a href="https://github.com/livoras/blog/issues/11" target="_blank" rel="noopener">界面之下：还原真实的MV*模式</a></p><h2 id="React"><a href="#React" class="headerlink" title="React"></a>React</h2><p>React 生命周期<br>类型校验 PropTypes  prop-types<br>Virtual DOM<br>渲染优化</p><p>Redux<br>让变化可控制控制<br>数据流 要修改 state 必须通过 dispatch 一个 action<br>为了描述 action 如何改变 state 树 必须编写 reducers<br>middleware<br><a href="http://www.redux.org.cn/docs/advanced/Middleware.html" target="_blank" rel="noopener">middleware</a></p><p>react-redux context<br>Provider 构建根节点 将store 写入context<br>connect  根据传入的参数 将store中的state dispatch 混入 组件props中</p><p>react-router</p><p><a href="https://devhints.io/react" target="_blank" rel="noopener">React.js cheatsheet</a><br><a href="https://reactjs.org/docs/events.html#supported-events" target="_blank" rel="noopener">SyntheticEvent</a><br><a href="http://huziketang.com/books/react/" target="_blank" rel="noopener">react小书</a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-id">#wrapper</span>~<span class="selector-tag">div</span>,<span class="selector-id">#granted-modal</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">opacity</span><span class="selector-pseudo">:0</span>!<span class="selector-tag">important</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">display</span><span class="selector-pseudo">:none</span>!<span class="selector-tag">important</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><a href="https://github.com/livoras/blog/issues/13" target="_blank" rel="noopener">深度剖析：如何实现一个 Virtual DOM 算法</a><br><a href="http://cn.mobx.js.org/" target="_blank" rel="noopener">MobX</a></p><p>redux connect<br>react-redux Provider</p><p>router-route</p><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MVVM&lt;br&gt;
    
    </summary>
    
    
      <category term="react" scheme="//fenghou.site/tags/react/"/>
    
      <category term="vue" scheme="//fenghou.site/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Knowledge</title>
    <link href="//fenghou.site/2018/03/08/2018-03-08-interview/"/>
    <id>//fenghou.site/2018/03/08/2018-03-08-interview/</id>
    <published>2018-03-08T03:19:05.000Z</published>
    <updated>2018-06-11T06:28:24.713Z</updated>
    
    <content type="html"><![CDATA[<p>Node &amp;&amp; Linux &amp;&amp; Nginx &amp;&amp; 自动化脚本<br><a id="more"></a></p><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>依赖的安装 xshell链接的配置</p><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><p>nginx 反向代理<br>静态资源服务器</p><h3 id="资源压缩"><a href="#资源压缩" class="headerlink" title="资源压缩"></a>资源压缩</h3><p>gzip 压缩</p><h3 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h3><p>分析请求日志<br>前端异常监控</p><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><p>服务器</p><h3 id="session"><a href="#session" class="headerlink" title="session"></a>session</h3><p>express 服务 express-session</p><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>node 链接 mysql</p><h3 id="文件处理"><a href="#文件处理" class="headerlink" title="文件处理"></a>文件处理</h3><p>远程文件拉取<br>脚手架配置</p><h3 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h3><p>网络爬虫<br>puppeteer </p><h3 id="gulp"><a href="#gulp" class="headerlink" title="gulp"></a>gulp</h3><p>gulp 前端自动化</p><h2 id="rollup"><a href="#rollup" class="headerlink" title="rollup"></a>rollup</h2><p><a href="https://www.cnblogs.com/tugenhua0707/p/8179686.html" target="_blank" rel="noopener">深入学习rollup来进行打包</a></p><h2 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h2><p>###配置<br>配置合并 分离<br>本质<br>实现原理</p><p>###启动<br>命令行启动</p><p>配合node启动</p><p><a href="https://juejin.im/post/5aa3d2056fb9a028c36868aa?utm_source=gold_browser_extension" target="_blank" rel="noopener">webpack详解</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Node &amp;amp;&amp;amp; Linux &amp;amp;&amp;amp; Nginx &amp;amp;&amp;amp; 自动化脚本&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
      <category term="linux" scheme="//fenghou.site/tags/linux/"/>
    
      <category term="nginx" scheme="//fenghou.site/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Knowledge</title>
    <link href="//fenghou.site/2018/03/07/2018-03-07-interview/"/>
    <id>//fenghou.site/2018/03/07/2018-03-07-interview/</id>
    <published>2018-03-07T09:22:43.000Z</published>
    <updated>2018-06-11T06:28:24.713Z</updated>
    
    <content type="html"><![CDATA[<p>Canvas &amp;&amp; Js<br><a id="more"></a></p><h2 id="Canvas"><a href="#Canvas" class="headerlink" title="Canvas"></a>Canvas</h2><p>颜色提取<br>毛笔字<br>连线小球<br>烟花<br>星空</p><h2 id="Js"><a href="#Js" class="headerlink" title="Js"></a>Js</h2><h3 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h3><p>命名规范<br>命名<br>规范检查<br>eslint</p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>ES5/ES6/ES7<br><a href="https://github.com/Chalarangelo/30-seconds-of-code" target="_blank" rel="noopener">30-seconds-of-code</a></p><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><p>类型<br>存储<br>对象</p><h3 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h3><p>元字符<br>限定符<br>test exec match<br>replace<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'^[0-9]&#123;1&#125;[0-9]*$'</span>,<span class="string">'g'</span>)</span><br><span class="line"><span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="regexp">/^[0-9]&#123;1&#125;[0-9]*$/g</span>)</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^[0-9]&#123;1&#125;[0-9]*$/g</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">'12'</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(a))  <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.test(a))  <span class="comment">//false</span></span><br><span class="line"><span class="comment">// 如果正则表达式设置了全局标志，</span></span><br><span class="line"><span class="comment">// test() 的执行会改变正则表达式   </span></span><br><span class="line"><span class="comment">// lastIndex属性。连续的执行test()方法，</span></span><br><span class="line"><span class="comment">// 后续的执行将会从 lastIndex 处开始匹配字符串，</span></span><br><span class="line"><span class="comment">// (exec() 同样改变正则本身的 lastIndex属性值).</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面的实例表现了这种行为： </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/foo/g</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// regex.lastIndex is at 0</span></span><br><span class="line">regex.test(<span class="string">'foo'</span>); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// regex.lastIndex is now at 3</span></span><br><span class="line">regex.test(<span class="string">'foo'</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></p><h3 id="事件模型"><a href="#事件模型" class="headerlink" title="事件模型"></a>事件模型</h3><p>事件冒泡 从点击外外    false<br>事件捕获 从点击外往里  true<br>事件委托</p><h3 id="作用域和上下文"><a href="#作用域和上下文" class="headerlink" title="作用域和上下文"></a>作用域和上下文</h3><p>函数作用域<br>作用域链<br>执行环境<br>执行上下文</p><h3 id="事件机制"><a href="#事件机制" class="headerlink" title="事件机制"></a>事件机制</h3><p>eventLoop</p><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><p>函数私有化<br>柯里化<br>IIFE</p><h3 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h3><p>原型<br>原型链</p><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>继承方式</p><h3 id="this"><a href="#this" class="headerlink" title="this"></a>this</h3><p>apply call bind 剪头函数</p><h3 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h3><p>commonJS<br>import</p><h3 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h3><p>Promise<br>Generator<br>async await<br>图片预览<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">getFileImage:<span class="function">(<span class="params">src</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> image = <span class="keyword">new</span> Image();</span><br><span class="line">      image.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> width = image.width</span><br><span class="line">        <span class="keyword">const</span> height = image.height</span><br><span class="line">        resolve(&#123;width,height&#125;)</span><br><span class="line">      &#125;</span><br><span class="line">      image.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">        reject(err)</span><br><span class="line">      &#125;</span><br><span class="line">      image.src = src;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  getFileReaderImage:<span class="function">(<span class="params">file</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> fr = <span class="keyword">new</span> FileReader();</span><br><span class="line">      fr.onload = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">_file</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">          <span class="keyword">const</span> imageWh =  <span class="keyword">await</span> UtilTool.getFileImage(_file.target.result)</span><br><span class="line">          <span class="keyword">const</span> size = file.size</span><br><span class="line">          <span class="keyword">const</span> type = file.type</span><br><span class="line">          resolve(&#123;...imageWh,size,type&#125;)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">          reject(err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// var image = new Image();</span></span><br><span class="line">        <span class="comment">// image.onload = function()&#123;</span></span><br><span class="line">        <span class="comment">//   const width = image.width</span></span><br><span class="line">        <span class="comment">//   const height = image.height</span></span><br><span class="line">        <span class="comment">//   const size = file.size</span></span><br><span class="line">        <span class="comment">//   const type = file.type</span></span><br><span class="line">        <span class="comment">//   resolve(&#123;width,height,size,type&#125;)</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// image.onerror = function(err)&#123;</span></span><br><span class="line">        <span class="comment">//   reject(err)</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// image.src = _file.target.result;</span></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      fr.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">        reject(err)</span><br><span class="line">      &#125;</span><br><span class="line">      fr.readAsDataURL(file);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Canvas &amp;amp;&amp;amp; Js&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
      <category term="canvas" scheme="//fenghou.site/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>Knowledge</title>
    <link href="//fenghou.site/2018/03/06/2018-03-06-interview/"/>
    <id>//fenghou.site/2018/03/06/2018-03-06-interview/</id>
    <published>2018-03-06T02:45:29.000Z</published>
    <updated>2018-06-11T06:28:24.713Z</updated>
    
    <content type="html"><![CDATA[<p>通信 &amp;&amp; 浏览器<br><a id="more"></a></p><h2 id="通信"><a href="#通信" class="headerlink" title="通信"></a>通信</h2><h3 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h3><p>http协议<br>客户端请求 服务端响应 单次链接<br>无状态 对处理的事务没有记忆<br>request headers<br>content-type 请求传输的MIME类型<br>常用的<br>application/json json数据格式 {username:”name”,password:”pwd”}<br>application/x-www-from-urlencoded 经过编码的键值对请求字符串 username=name&amp;password=pwd<br>注意点：这边转换的时候需要进行encodeURIComponent转码处理</p><p>response headers<br>content-type 返回资源的MIME类型<br>text/html<br>image/jpeg<br>application/javascript<br>text/css<br>application/json</p><p>请求类<br>POST<br>GET<br><a href="https://zhuanlan.zhihu.com/p/25028045" target="_blank" rel="noopener">听说『99% 的人都理解错了 HTTP 中 GET 与 POST 的区别』？？</a><br><a href="https://juejin.im/entry/597ca6caf265da3e301e64db" target="_blank" rel="noopener">HTTP｜GET 和 POST 区别？网上多数答案都是错的！</a><br><a href="http://man.chinaunix.net/develop/rfc/default.htm" target="_blank" rel="noopener">rfc文档</a><br><a href="https://pan.baidu.com/s/1Or3_1gxChZi6SDffHpGqZQ" target="_blank" rel="noopener">HTTP权威指南pdf 密码 7p7m</a></p><h3 id="Https"><a href="#Https" class="headerlink" title="Https"></a>Https</h3><p>Http协议的安全版本<br>在TCP协议删加了一层SSL协议<br>网络七层协议</p><h3 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h3><p>TCP协议连接时三次握手<br>TCP协议断开时四次握手</p><h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><p>Asynchronous Javascript And XML 异步JavaScript和XML<br>XMLHttpRequest<br>API<br>事件<br>状态</p><h3 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h3><p>双工通信<br>websocket协议本质上是一个基于TCP的协议<br>是先通过HTTP/HTTPS协议发起一条特殊的HTTP请求进行握手后创建一个用于交换数据的TCP连接<br>此后服务端与客户端通过此TCP连接进行实时通信</p><h3 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h3><p>nginx 代理<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">       <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">       <span class="attribute">server_name</span> music.fenghou.site;</span><br><span class="line">       <span class="attribute">root</span> /admin/fenghou/www/super_music/view/dist;</span><br><span class="line">       <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">index</span> index.html;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="attribute">location</span> /nateAPI/ &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://localhost:4000;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="attribute">location</span> /MusicAPI/ &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://localhost:4000/;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>node 中间件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line"><span class="keyword">var</span> proxyMiddleware = <span class="built_in">require</span>(<span class="string">'http-proxy-middleware'</span>)</span><br><span class="line"><span class="keyword">let</span> _opts = &#123;</span><br><span class="line">                                target: <span class="string">'http://114.215.198.55:9004'</span>,</span><br><span class="line">                                changeOrigin: <span class="literal">true</span>,</span><br><span class="line">                                pathRewrite: &#123;</span><br><span class="line">                                  <span class="string">'^/goodsAdmin'</span>: <span class="string">''</span></span><br><span class="line">                                &#125;,</span><br><span class="line">                              &#125;</span><br><span class="line">app.use(proxyMiddleware(<span class="string">'/goodsAdmin'</span>, _opts))</span><br><span class="line">app.listen()</span><br></pre></td></tr></table></figure></p><p>webpack dev-server<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        clientLogLevel: <span class="string">'warning'</span>,</span><br><span class="line">        historyApiFallback: &#123;</span><br><span class="line">          rewrites: [</span><br><span class="line">            &#123; <span class="attr">from</span>: <span class="regexp">/.*/</span>, <span class="attr">to</span>: path.join(<span class="string">'/'</span>, <span class="string">'index.html'</span>) &#125;,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">        hot: <span class="literal">true</span>,</span><br><span class="line">        contentBase: <span class="literal">false</span>, <span class="comment">// since we use CopyWebpackPlugin.</span></span><br><span class="line">        compress: <span class="literal">true</span>,</span><br><span class="line">        host: <span class="string">'localhost'</span>,</span><br><span class="line">        port: <span class="string">'8080'</span>,</span><br><span class="line">        open: <span class="literal">true</span>,</span><br><span class="line">        overlay: &#123; <span class="attr">warnings</span>: <span class="literal">false</span>, <span class="attr">errors</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        publicPath: <span class="string">'/'</span>,</span><br><span class="line">        proxy: &#123;</span><br><span class="line">            <span class="string">'/goodsAdmin'</span>: &#123;</span><br><span class="line">                    target: <span class="string">'http://114.215.198.55:9004'</span>,</span><br><span class="line">                    changeOrigin: <span class="literal">true</span>,</span><br><span class="line">                    pathRewrite: &#123;</span><br><span class="line">                      <span class="string">'^/goodsAdmin'</span>: <span class="string">''</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                  &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        quiet: <span class="literal">true</span>, <span class="comment">// necessary for FriendlyErrorsPlugin</span></span><br><span class="line">        watchOptions: &#123;</span><br><span class="line">          poll: <span class="literal">false</span>,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>XSS：跨站脚本（Cross-site scripting）<br>CSRF：跨站请求伪造（Cross-site request forgery）</p><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><p>缓存主要设置在请求头<br>request header<br>Pragma<br>Cache-Control no-cache、no-store、max-age<br>if-none-match<br>if-modified-since</p><p>response header<br>Etag<br>expires<br>last-modified</p><h3 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h3><p>cookie<br>localStorage<br>localSession</p><h3 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h3><p>页面加载<br>域名解析-页面解析-渲染<br>渲染流程<br>dom解析成 DOM Tree 此时遇到资源文件开始下载<br>遇到css下载 并且开始解析<br>遇到js文件下载 并且开始解析<br>遇到图片资源 开始下载<br>所以说js 放在头部加载 会阻塞 dom解析</p><p>css 解析 CSS Rule Tree 并且合并到DOM Tree 成 Rendering Tree  这是用到的css 里的图片资源开始请求加载<br>Rendering Tree 渲染树并不等同于DOM树 因为一些像display:none的东西就没必要放在渲染树中了。<br>然后 计算每个Element的位置 又叫layout和reflow过程<br>最后通过调用操作系统Native GUI的API绘制</p><p>js加载事件</p><p>windows.onload dom节点 资源全部加载完成</p><p>重排和重绘</p><p>动画优化</p><p><a href="https://pic1.zhimg.com/80/bef065b504473d590387ae37089a72c3_hd.jpg" target="_blank" rel="noopener">浏览器工作原理</a></p><p><a href="https://www.paulirish.com/2013/webkit-for-developers/" target="_blank" rel="noopener">WebKit for Developers</a><br><a href="https://link.zhihu.com/?target=https%3A//speakerdeck.com/addyosmani/velocityconf-rendering-performance-case-studies" target="_blank" rel="noopener">VelocityConf: Rendering Performance Case Studies</a><br><a href="https://link.zhihu.com/?target=http%3A//www.chromium.org/developers/design-documents/gpu-accelerated-compositing-in-chrome" target="_blank" rel="noopener">GPU Accelerated Compositing in Chrome</a><br><a href="https://link.zhihu.com/?target=http%3A//www.html5rocks.com/en/tutorials/speed/high-performance-animations/" target="_blank" rel="noopener">High Performance Animations</a><br><a href="https://link.zhihu.com/?target=http%3A//wilsonpage.co.uk/preventing-layout-thrashing/" target="_blank" rel="noopener">Preventing layout thrashing</a><br><a href="https://link.zhihu.com/?target=http%3A//www.html5rocks.com/en/tutorials/internals/howbrowserswork/" target="_blank" rel="noopener">How Browsers Work: Behind the scenes of modern web browsers</a><br><a href="https://link.zhihu.com/?target=http%3A//velocity.oreilly.com.cn/2013/ppts/16_ms_optimization--web_front-end_performance_optimization.pdf" target="_blank" rel="noopener">16毫秒的优化——Web前端性能优化的微观分析</a><br><a href="https://link.zhihu.com/?target=http%3A//www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%25E5%258A%25A8%25E7%2594%25BB%25E7%25AE%2597%25E6%25B3%2595/" target="_blank" rel="noopener">CSS3动画那么强，requestAnimationFrame还有毛线用？</a><br><a href="https://link.zhihu.com/?target=http%3A//flaminghorns.com/chromium_graphics/Compositing%2520in%2520Blink%2520-%2520WebCore-%2520From%2520WebCore--RenderLayer%2520to%2520cc-Layer.pdf" target="_blank" rel="noopener">Compositing in Blink / WebCore: FromWebCore::RenderLayer to cc:Layer</a><br><a href="https://link.zhihu.com/?target=http%3A//blog.csdn.net/milado_nju" target="_blank" rel="noopener">Webkit技术内幕</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通信 &amp;amp;&amp;amp; 浏览器&lt;br&gt;
    
    </summary>
    
    
      <category term="浏览器" scheme="//fenghou.site/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Knowledge</title>
    <link href="//fenghou.site/2018/03/05/2018-03-05-interview/"/>
    <id>//fenghou.site/2018/03/05/2018-03-05-interview/</id>
    <published>2018-03-05T01:29:55.000Z</published>
    <updated>2018-06-11T06:28:24.713Z</updated>
    
    <content type="html"><![CDATA[<p>Html &amp;&amp; Css<br><a id="more"></a><br><a href="https://github.com/Liyuk/Interview-Questions-Answers" target="_blank" rel="noopener">Questions-Answers</a><br><a href="https://github.com/yangshun/front-end-interview-handbook/blob/master/Translations/Chinese/README.md" target="_blank" rel="noopener">Questions-Answers</a></p><h2 id="Html"><a href="#Html" class="headerlink" title="Html"></a>Html</h2><h3 id="html的规范"><a href="#html的规范" class="headerlink" title="html的规范"></a>html的规范</h3><p>首先是标签的语义化<br>语义化 顾名思义就是 什么时候该用什么标签 例如header section footer<br>接着是标签的嵌套规则<br>典型的就是 h1-h6 p 标签中不能再嵌套块级元素 原则上行内元素内不能嵌套块级元素</p><h4 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签"></a>meta标签</h4><p>用于提供页面的元信息 比如<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">针对搜索引擎 <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"noarchive"</span> /&gt;</span> </span><br><span class="line">关键词 <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"Keywords"</span> <span class="attr">content</span>=<span class="string">"关键字"</span> /&gt;</span></span><br><span class="line">描述  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"Description"</span> <span class="attr">content</span>=<span class="string">"页面的描述"</span> /&gt;</span></span><br><span class="line">重定向 <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Refresh"</span> <span class="attr">content</span>=<span class="string">"5;url=https://fenghou.site"</span> /&gt;</span></span><br><span class="line">通知浏览器接收类型 <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">网页可视区域的设置 <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,user-scalable=no"</span> /&gt;</span></span><br><span class="line">不识别数字为电话号码 <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> /&gt;</span></span><br><span class="line">针对iphone 允许全屏模式浏览 <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"yes"</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><h3 id="css的规范"><a href="#css的规范" class="headerlink" title="css的规范"></a>css的规范</h3><p>css方面的规范 首先体现在命名规范上 例如 BEM 规范 block(块) Element(元素) Modifier(修饰器)<br>命名方式如下 block__element-modifier 基本上采用BEM表示该元素出现的频率很高<br>例如下面的一个商品列表<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product__header-wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product__header"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product__footer-wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product__footer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>BEM 需要配合postcss-salad 或者 postcss-bem 使用<br>无非就是在复杂的容器中如何正确的命名元素 也不是BEM是必须的 但起码这种思想是可以借鉴的<br>就是命名划分的维度 块 元素 修饰符</p><h3 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h3><p>传统的css不支持 方法嵌套 以及兼容性的拓展 而预处理就是解决了这一系列问题<br>如sass 允许在在css 中使用 变量 方法 和嵌套<br>如postcss 允许我们配置插件在处理css 例如 autoprefixer插件 用来自动补充需要兼容的浏览器前缀</p><h3 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h3><p>盒模型其实是元素框处理元素内容、内边距、边框和外边距的规定方式<br>容器真实宽度的计算      width(真实) = content-box-width + padding-box-width + border-box-width<br>content-box 标准盒模型 width(真实) = width(设置的宽度) + padding-box-box + border-box-width<br>border-box  IE盒模型   width(真实) = width(设置的宽度)<br>也就是说 在标准盒模型中 设置的width 其实是 content-box 的width<br>在 IE盒模型中 设置的width 是 整个盒模型的width</p><h3 id="盒模型下的背景"><a href="#盒模型下的背景" class="headerlink" title="盒模型下的背景"></a>盒模型下的背景</h3><p>css中背景的渲染也提供了不同的计算方式<br>background-origin 规定了背景开始渲染的位置<br>background-clip   规定了背景实际显示的位置<br>background-position 表示从这张背景图片的什么位置 开始渲染在 元素背景上<br>background-position:X% Y%(百分比值) 表示会把图片 横向X% 纵向的Y% 的点与 元素 横向X% 纵向的Y%点对齐<br>background-position:Xpx Ypx(数值)  表示图片距离背景起始绘制点的距离 </p><h3 id="FC-Formatting-Context"><a href="#FC-Formatting-Context" class="headerlink" title="FC(Formatting Context)"></a>FC(Formatting Context)</h3><p>FC 格式化上下文<br>BFC 块级格式化上下文<br>内部的Box会在垂直方向 一个接一个地放置。<br>BFC就是页面上的一个隔离的独立容器 容器里面的子元素不会影响到外面的元素 反之也如此 例如 消除margin重叠<br>计算BFC的高度时 浮动元素也参与计算 例如 清除浮动<br>BFC的区域不会和 float Box 重合   例如 两列布局</p><p>IFC 行内格式化上下文<br>IFC从包含块水平方向 一个接一个放置 margin padding在水平方向有效<br>IFC默认对齐方式 vertical-align:baseline 所以同时存在有内容的内联元素和没内容的内联元素 有内容的 会往下掉</p><p>GFC 网格布局格式化上下文<br>display值为grid的元素将会获得一个独立的渲染区域<br>我们可以通过在网格容器（grid container）上定义网格定义行（grid definition rows）和网格定义列（grid definition columns）属性<br>在网格项目（grid item）上定义网格行（grid row）和网格列（grid columns）为每一个网格项目（grid item）定义位置和空间<br>FFC 自适应格式化上下文<br>display值为flex或者inline-flex的元素将会生成自适应容器（flex container）<br>Flex Box 由伸缩容器和伸缩项目组成<br>通过设置元素的 display 属性为 flex 或 inline-flex 可以得到一个伸缩容器<br>设置为 flex 的容器被渲染为一个块级元素，而设置为 inline-flex 的容器则渲染为一个行内元素。<br><a href="https://www.w3.org/TR/CSS2/visuren.html#block-formatting" target="_blank" rel="noopener">W3C文档BFC</a><br><a href="https://www.w3.org/TR/CSS2/visuren.html#inline-formatting" target="_blank" rel="noopener">W3C文档IFC</a><br><a href="http://www.cnblogs.com/lhb25/p/inside-block-formatting-ontext.html" target="_blank" rel="noopener">BFC 神奇背后的原理</a></p><h3 id="布局之道"><a href="#布局之道" class="headerlink" title="布局之道"></a>布局之道</h3><p>布局 简单的可以理解为在文档流下 元素的排版规则<br>在传统的布局按照文档流正常排布<br>遇到需要脱离文档流的 一般通过absolute定位或float浮动来解决<br>为了解决程序员日益增长的精神需要同浏览器传统的布局之间的矛盾<br>css3中新增了 flex布局和grid布局 FFC和GFC 应运而生<br><a href="https://codepen.io/enxaneta/pen/adLPwv" target="_blank" rel="noopener">flexbox plyground</a><br><a href="http://www.css88.com/book/css/properties/flex/index.htm" target="_blank" rel="noopener">flex文档</a><br><a href="http://www.css88.com/archives/8510/comment-page-1" target="_blank" rel="noopener">grid布局指南</a><br><a href="https://segmentfault.com/a/1190000013565024?utm_source=channel-hottest" target="_blank" rel="noopener">CSS布局解决方案（终结版）</a></p><h3 id="移动端布局"><a href="#移动端布局" class="headerlink" title="移动端布局"></a>移动端布局</h3><p>移动端的布局跟pc基本一样<br>主要区别在于 移动端样式中的1px 不等于 屏幕上的1px<br><a href="https://fenghou.site/2016/12/19/2016-12-19-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/" target="_blank" rel="noopener">1px!=1px移动端rem布局</a><br>淘宝rem方案 是将页面划分为10rem 1rem表示的就是页面的1/10  但这对设计稿并不友好<br>可以自定义一个转换方法 准换为 设计稿的尺寸<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@function remChange(<span class="variable">$args</span>) &#123;</span><br><span class="line">  @return  <span class="variable">$args</span> / 750 * 10rem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="响应式和自适应"><a href="#响应式和自适应" class="headerlink" title="响应式和自适应"></a>响应式和自适应</h3><p>简单来说就是能适应不同的尺寸浏览器<br>常见的做法 根据屏幕宽度的100%来布局<br>淘宝的rem方案也是一种解决方案<br>跟rem方案异曲同工的是通过 可视单位 vw vh解决<br>vw 相对于视窗的宽度：视窗宽度是100vw<br>vh 相对于视窗的高度：视窗宽度是100vh<br>上面的做法严格上来说是自适应的范畴 在不同的终端显示相同</p><p>而相应式 通俗的讲 就是大屏我能放下三个div 小点我能放下两个div<br>一般的做法是通过 css的媒体查询来配置不同尺寸下的样式<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> screen and (max-width: 1080px)&#123;</span><br><span class="line">  <span class="comment">//小于1080时代码生效</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="各种居中的方案"><a href="#各种居中的方案" class="headerlink" title="各种居中的方案"></a>各种居中的方案</h3><p>传统布局中图片垂直水平居中<br>内部需要居中的图片<br>absolute 定位<br>top left bottom right 设为0<br>margin:auto<br>浏览器会计算容器的margin<br>外部容器的宽度 = 内部容器宽度 + 定位left + 定位right + margin-left + margin-right  浏览器会根据这个规则分配</p><p>居中对于 Flex Box 和 Grid布局来说有点太儿戏</p><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><p>css动画三剑客<br>transform 变形<br>transitions 过渡<br>animation 动画</p><h3 id="css中的层叠关系"><a href="#css中的层叠关系" class="headerlink" title="css中的层叠关系"></a>css中的层叠关系</h3><p><a href="http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/" target="_blank" rel="noopener">css中的层叠规则</a></p><h3 id="一些注意点和技巧"><a href="#一些注意点和技巧" class="headerlink" title="一些注意点和技巧"></a>一些注意点和技巧</h3><p>利用多重背景<br>叠加规则 是 先写的在上面<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="undefined">    width: 100px;</span></span><br><span class="line"><span class="undefined">    height: 100px;</span></span><br><span class="line"><span class="undefined">    background-image:</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">                linear-gradient(</span></span><br><span class="line"><span class="undefined">                        transparent 8%,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.1</span>) 8%,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.1</span>) 14%,</span></span><br><span class="line"><span class="undefined">                        transparent 14%,</span></span><br><span class="line"><span class="undefined">                        transparent 86%,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.1</span>) 86%,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.1</span>) 92%,</span></span><br><span class="line"><span class="undefined">                        transparent 92%</span></span><br><span class="line"><span class="undefined">                ),</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">                linear-gradient(</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">rgba</span>(255, 255, 255, 0<span class="selector-class">.75</span>),</span></span><br><span class="line"><span class="undefined">                        rgba(255, 255, 255, 0)</span></span><br><span class="line"><span class="undefined">                ),</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">                linear-gradient(</span></span><br><span class="line"><span class="undefined">                        45deg,</span></span><br><span class="line"><span class="undefined">                        transparent 40%,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.1</span>) 40%,</span></span><br><span class="line"><span class="css">                        <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.1</span>) 60%,</span></span><br><span class="line"><span class="undefined">                        transparent 60%</span></span><br><span class="line"><span class="undefined">                ),</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">                linear-gradient(white, white);</span></span><br><span class="line"><span class="undefined">                background-size:</span></span><br><span class="line"><span class="undefined">                cover,</span></span><br><span class="line"><span class="undefined">                cover,</span></span><br><span class="line"><span class="undefined">                4px 4px,</span></span><br><span class="line"><span class="undefined">                cover;            </span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><div style="width: 100px;                        height: 100px;                        background-image:                        linear-gradient(                                            transparent 8%,                                            rgba(0, 0, 0, 0.1) 8%,                                            rgba(0, 0, 0, 0.1) 14%,                                            transparent 14%,                                            transparent 86%,                                            rgba(0, 0, 0, 0.1) 86%,                                            rgba(0, 0, 0, 0.1) 92%,                                            transparent 92%                                    ),                        linear-gradient(                                            rgba(255, 255, 255, 0.75),                                            rgba(255, 255, 255, 0)                                    ),                        linear-gradient(                                            45deg,                                            transparent 40%,                                            rgba(0, 0, 0, 0.1) 40%,                                            rgba(0, 0, 0, 0.1) 60%,                                            transparent 60%                                    ),                        linear-gradient(white, white);                                    background-size:                                    cover,                                    cover,                                    4px 4px,                                    cover;"></div><br><a href="http://lea.verou.me/css3patterns/#" target="_blank" rel="noopener">css背景</a><br><br>莫名的空白<br><a href="http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/" target="_blank" rel="noopener">line-height和vertical-align</a><br><br>利用盒模型计算规则制作几何图形<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="undefined">    box-sizing: border-box;</span></span><br><span class="line"><span class="undefined">    width: 50px;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border-left</span><span class="selector-pseudo">:50px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgb</span>(255,255,0);</span></span><br><span class="line"><span class="undefined">    border-bottom: 25px solid transparent;</span></span><br><span class="line"><span class="undefined">    border-top: 25px solid transparent;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="undefined">    box-sizing: border-box;</span></span><br><span class="line"><span class="undefined">    width: 50px;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border-left</span><span class="selector-pseudo">:50px</span> <span class="selector-tag">solid</span> <span class="selector-tag">rgb</span>(255,255,0);</span></span><br><span class="line"><span class="undefined">    border-bottom: 50px solid transparent;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><div style="box-sizing: border-box;                    display:inline-block;                    width: 50px;                    border-left:50px solid rgb(255,255,0);                    border-bottom: 25px solid transparent;                    border-top: 25px solid transparent;"></div><div style="box-sizing: border-box;                        display:inline-block;                        width: 50px;                        border-left:50px solid rgb(255,255,0);                        border-bottom: 50px solid transparent;"></div><p>文字溢出的省略表示<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单行</span></span><br><span class="line"><span class="selector-class">.clamp</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//多行</span></span><br><span class="line"><span class="selector-class">.line-clamp</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line">-webkit-line-clamp: <span class="number">2</span>;</span><br><span class="line">-webkit-box-orient: vertical;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p style="width: 150px;          overflow: hidden;          white-space: nowrap;          text-overflow: ellipsis;">单行文字溢出单行文字溢出单行文字溢出</p><br><div style="width: 150px;            display: -webkit-box;            -webkit-line-clamp: 2;            -webkit-box-orient: vertical;            overflow: hidden;"><br>多行文字溢出多行文字溢出多行文字溢出多行文字溢出多行文字溢出<br></div><br><br>负边距<br>margin-top 设为负值 容器会往上<br>margin-bottom 设为赋值 容器会从下往上搜索<br><br>拓展 俩容器内容不同 保证高度一致<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.wrap</span>&#123;</span></span><br><span class="line"><span class="undefined">    overflow: hidden;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="undefined">    margin-bottom: -10000px;</span></span><br><span class="line"><span class="undefined">    padding-bottom: 10000px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.wrap</span>&#123;</span></span><br><span class="line"><span class="undefined">    display: table-row;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="undefined">    display: table-cell;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>伪元素和伪类<br>伪元素::before ::after ::first-letter ::first-line<br>伪类: css2 :hover :active :focus :first-child …<br>      css3 :checked :nth-child(n) :last-child …<br><br><br>/<em> 为不同语言指定引号的表现 </em>/<br>:lang(ch) &gt; q { quotes: ‘“’ ‘”’; }<br>:lang(en) &gt; q { quotes: ‘“‘ ‘“‘; }<br>:lang(no) &gt; q { quotes: ‘«’ ‘»’; }<br>/<em> 在 q 标签的前后插入引号 </em>/<br>q:before { content: open-quote; }<br>q:after { content: close-quote; }<br><p lang="ch"><q>这本书很赞！</q></p><br><p lang="en"><q>This book is very good!</q></p><br><p lang="no"><q>denne bog er fantastisk!</q></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Html &amp;amp;&amp;amp; Css&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="//fenghou.site/tags/css/"/>
    
      <category term="html" scheme="//fenghou.site/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>查看Nginx日志</title>
    <link href="//fenghou.site/2018/02/03/2018-02-03-nginx-log/"/>
    <id>//fenghou.site/2018/02/03/2018-02-03-nginx-log/</id>
    <published>2018-02-03T09:35:27.000Z</published>
    <updated>2018-06-11T06:28:24.712Z</updated>
    
    <content type="html"><![CDATA[<p>Nginx 日志分析<br><a id="more"></a></p><h3 id="日志组成"><a href="#日志组成" class="headerlink" title="日志组成"></a>日志组成</h3><p>nginx的默认日记位置<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#error_log  logs/<span class="meta-keyword">error</span>.log;</span></span><br><span class="line"><span class="meta">#error_log  logs/<span class="meta-keyword">error</span>.log  notice;</span></span><br><span class="line"><span class="meta">#error_log  logs/<span class="meta-keyword">error</span>.log  info;</span></span><br></pre></td></tr></table></figure></p><p>nginx的默认日志配置文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                        <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                       <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line">                       </span><br><span class="line"><span class="attribute">access_log</span>  logs/access.log  main;</span><br></pre></td></tr></table></figure><p>位置和格式都可以在 nginx.conf配置中设置</p><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><p>实时监控</p><blockquote><p>tail -f filename  </p></blockquote><p>获取对应格式(访问的ip)</p><blockquote><p>awk ‘{print $1}’</p></blockquote><p>过滤信息(16点到17点的日志)</p><blockquote><p>grep “03/Feb/2018:1[6-7]” filename<br>-o 只输出匹配的内容</p></blockquote><p>组合</p><blockquote><p>tail -f filename | grep “03/Feb/2018:1[6-7]” filename | awk ‘{print $1}’</p></blockquote><h3 id="翻阅"><a href="#翻阅" class="headerlink" title="翻阅"></a>翻阅</h3><p>(awk处理nginx日志)[<a href="http://blog.csdn.net/KimmKing/article/details/52727845]" target="_blank" rel="noopener">http://blog.csdn.net/KimmKing/article/details/52727845]</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Nginx 日志分析&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="//fenghou.site/tags/linux/"/>
    
      <category term="nginx" scheme="//fenghou.site/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>巧用数组存储</title>
    <link href="//fenghou.site/2017/12/11/2017-12-11-array-storage-memory/"/>
    <id>//fenghou.site/2017/12/11/2017-12-11-array-storage-memory/</id>
    <published>2017-12-11T01:43:41.000Z</published>
    <updated>2018-06-11T06:28:24.712Z</updated>
    
    <content type="html"><![CDATA[<p>多重数组赋值<br><a id="more"></a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cates = [</span><br><span class="line">    &#123;</span><br><span class="line">      label:<span class="string">''</span>,</span><br><span class="line">      value:<span class="string">''</span>,</span><br><span class="line">      cates:[</span><br><span class="line">        &#123;</span><br><span class="line">          label:<span class="string">''</span>,</span><br><span class="line">          value:<span class="string">''</span>,</span><br><span class="line">          cates:[</span><br><span class="line">           &#123;</span><br><span class="line">              label:<span class="string">'me'</span>,</span><br><span class="line">              value:<span class="string">''</span>,</span><br><span class="line">              cates:[]</span><br><span class="line">           &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]  </span><br><span class="line">    &#125;</span><br><span class="line"> ]</span><br><span class="line"><span class="comment">//现在我想给label='me'的cates 赋值怎么做</span></span><br><span class="line"><span class="comment">//假如我知道他的结构层级是[0,0,0]</span></span><br><span class="line"><span class="comment">//you can </span></span><br><span class="line">cates[<span class="number">0</span>].cates[<span class="number">0</span>].cates[<span class="number">0</span>].cates = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="comment">// other way</span></span><br><span class="line"><span class="keyword">let</span> _item = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"><span class="keyword">let</span> _arr = []</span><br><span class="line">_item.map(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span><br><span class="line">    _arr = cates[item]</span><br><span class="line">&#125;)</span><br><span class="line">_arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="comment">//此时 _arr 和 cates[0].cates[0].cates[0].cates 指向 相同 存储空间</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多重数组赋值&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
      <category term="vue" scheme="//fenghou.site/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>根据图片色调生成渐变背景</title>
    <link href="//fenghou.site/2017/12/01/2017-12-01-canvas-image-node-color/"/>
    <id>//fenghou.site/2017/12/01/2017-12-01-canvas-image-node-color/</id>
    <published>2017-12-01T02:00:00.000Z</published>
    <updated>2018-06-11T06:28:24.712Z</updated>
    
    <content type="html"><![CDATA[<p>有这么个需求<br>有个容器 容器里面有个图片<br>容器的背景需要根据图片的颜色渐变显示<br>让整个风格不突兀<br><a id="more"></a></p><h3 id="What-Color"><a href="#What-Color" class="headerlink" title="What Color"></a>What Color</h3><p>首先很明确 怎么提取图片中的颜色<br>canvas getImageData 可以获取图片中每个像素点的rgb值<br>通过一系列的 计算可以获取到 出现最多的几种颜色<br>此处省略好多字(代码下次补)</p><h3 id="And-Then"><a href="#And-Then" class="headerlink" title="And Then"></a>And Then</h3><p>假设我们拿到颜色了 结束</p><p>但是如果没拿到呢</p><p>总所周知 canvas 的getImageData 是不能处理跨域图片<br>当然如果图片的服务器 指定了 Access-Control-Allow-Origin *<br>那么 通过 img.crossOrigin = “Anonymous” 就可以获取</p><p>但是我的项目 需要的图片是某云音乐里拉出来图片<br>妥妥的跨域<br>好在 我的项目是通过node部署的<br>所以我是通过node中间转了一层<br>由node服务去请求 图片 然后再 返给前端<br>这样就不存在跨域的 行为了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有这么个需求&lt;br&gt;有个容器 容器里面有个图片&lt;br&gt;容器的背景需要根据图片的颜色渐变显示&lt;br&gt;让整个风格不突兀&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
      <category term="canvas" scheme="//fenghou.site/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>Git命令行</title>
    <link href="//fenghou.site/2017/11/21/2017-11-21-git-cmd/"/>
    <id>//fenghou.site/2017/11/21/2017-11-21-git-cmd/</id>
    <published>2017-11-21T05:33:37.000Z</published>
    <updated>2018-06-11T06:28:24.712Z</updated>
    
    <content type="html"><![CDATA[<p>Git命令行操作-收纳<br><a id="more"></a></p><h3 id="About-分支"><a href="#About-分支" class="headerlink" title="About 分支"></a>About 分支</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> checkout &lt;<span class="keyword">branchName&gt; </span>切换分支</span><br><span class="line"></span><br><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>&lt;<span class="keyword">branchName&gt; </span>新建分支</span><br><span class="line"></span><br><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>-a 本地分支列表</span><br><span class="line"></span><br><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>-r 远程分支列表</span><br><span class="line"></span><br><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>-D &lt;<span class="keyword">branchName&gt; </span>删除本地分支</span><br><span class="line"></span><br><span class="line"><span class="symbol">Git</span> <span class="built_in">v1</span>.<span class="number">7</span>.<span class="number">0</span> 之后</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push </span>origin --delete &lt;<span class="keyword">branchName&gt; </span>删除远程分支</span><br><span class="line"></span><br><span class="line">之前</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push </span>origin :&lt;<span class="keyword">branchName&gt;</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">git </span>merge &lt;<span class="keyword">branchName&gt; </span>合并分支到当前分支</span><br></pre></td></tr></table></figure><h3 id="About-提交"><a href="#About-提交" class="headerlink" title="About 提交"></a>About 提交</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git status  查看文件状态</span><br><span class="line">git add .   将修改文件推入提交栈</span><br><span class="line">git <span class="keyword">commit</span> -m <span class="string">''</span>  确认提交 并注释</span><br><span class="line">git <span class="keyword">commit</span> -am 简写</span><br><span class="line">git <span class="keyword">commit</span> -a -m 简写</span><br><span class="line">git push </span><br><span class="line"></span><br><span class="line">git <span class="keyword">commit</span> -m <span class="string">':tada'</span> 添加emoji表情</span><br></pre></td></tr></table></figure><p>emoji使用规范 <a href="https://www.webpagefx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">emojo-sheet</a></p><table><thead><tr><th>emoji</th><th>emoji代码</th><th>commit说明</th></tr></thead><tbody><tr><td>:art: (调色板)</td><td>:art:</td><td>改进代码结构/代码格式</td></tr><tr><td>:zap: (闪电):racehorse: (赛马)</td><td>:zap::racehorse:</td><td>提升性能</td></tr><tr><td>:fire: (火焰)</td><td>:fire:</td><td>移除代码或文件</td></tr><tr><td>:bug: (bug)</td><td>:bug:</td><td>修复 bug</td></tr><tr><td>:ambulance: (急救车)</td><td>:ambulance:</td><td>重要补丁</td></tr><tr><td>:sparkles: (火花)</td><td>:sparkles:</td><td>引入新功能</td></tr><tr><td>:memo: (备忘录)</td><td>:memo:</td><td>撰写文档</td></tr><tr><td>:rocket: (火箭)</td><td>:rocket:</td><td>部署功能</td></tr><tr><td>:lipstick: (口红)</td><td>:lipstick:</td><td>更新 UI 和样式文件</td></tr><tr><td>:tada: (庆祝)</td><td>:tada:</td><td>初次提交</td></tr><tr><td>:white_check_mark: (白色复选框)</td><td>:white_check_mark:</td><td>增加测试</td></tr><tr><td>:lock: (锁)</td><td>:lock:</td><td>修复安全问题</td></tr><tr><td>:apple: (苹果)</td><td>:apple:</td><td>修复 macOS 下的问题</td></tr><tr><td>:penguin: (企鹅)</td><td>:penguin:</td><td>修复 Linux 下的问题</td></tr><tr><td>:checkered_flag: (旗帜)</td><td>:checked_flag:</td><td>修复 Windows 下的问题</td></tr><tr><td>:bookmark: (书签)</td><td>:bookmark:</td><td>发行/版本标签</td></tr><tr><td>:rotating_light: (警车灯)</td><td>:rotating_light:</td><td>移除 linter 警告</td></tr><tr><td>:construction: (施工)</td><td>:construction:</td><td>工作进行中</td></tr><tr><td>:green_heart: (绿心)</td><td>:green_heart:</td><td>修复 CI 构建问题</td></tr><tr><td>:arrow_down: (下降箭头)</td><td>:arrow_down:</td><td>降级依赖</td></tr><tr><td>:arrow_up: (上升箭头)</td><td>:arrow_up:</td><td>升级依赖</td></tr><tr><td>:construction_worker: (工人)</td><td>:construction_worker:</td><td>添加 CI 构建系统</td></tr><tr><td>:chart_with_upwards_trend: (上升趋势图)</td><td>:chart_with_upwards_trend:</td><td>添加分析或跟踪代码</td></tr><tr><td>:hammer: (锤子)</td><td>:hammer:</td><td>重大重构</td></tr><tr><td>:heavy_minus_sign: (减号)</td><td>:heavy_minus_sign:</td><td>减少一个依赖</td></tr><tr><td>:whale: (鲸鱼)</td><td>:whale:</td><td>Docker 相关工作</td></tr><tr><td>:heavy_plus_sign: (加号)</td><td>:heavy_plug_sign:</td><td>增加一个依赖</td></tr><tr><td>:wrench: (扳手)</td><td>:wrench:</td><td>修改配置文件</td></tr><tr><td>:globe_with_meridians: (地球)</td><td>:globe_with_meridians:</td><td>国际化与本地化</td></tr><tr><td>:pencil2: (铅笔)</td><td>:pencil2:</td><td>修复 typo</td></tr></tbody></table><h3 id="About-版本"><a href="#About-版本" class="headerlink" title="About 版本"></a>About 版本</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git stash   推入缓存区</span><br><span class="line">git stash pop  从缓存列表中获取 并且在缓存中删除这条数据</span><br><span class="line">git log -3  查看最近三次<span class="keyword">commit</span></span><br><span class="line">git <span class="keyword">log</span> <span class="comment">--pretty=oneline  commit单行显示</span></span><br><span class="line">git <span class="keyword">reset</span> <span class="comment">--hard &lt;版本号&gt;</span></span><br><span class="line"></span><br><span class="line">git push -f origin <span class="keyword">master</span> 强制提交</span><br><span class="line"></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><p>333333 modify pull 3<br>222222 modify pull 2<br>111111 modify pull 1<br>已经push的版本号有3个<br>如果现在 git reset –hard 222222<br>会回退会222222的版本 提交的时候会提示有commit需要拉取<br>这时强制提交的话<br>版本记录会变成 l 2<br>222222 modify pul<br>111111 modify pull 1</p><p>本地的commit回退<br>push之后commit会指向提交的版本 回退前的版本会消失</p><p>这时需要找到 之前的版本号<br>git reflog  命令<br>222222 HEAD@{0}: reset: moving to 222222<br>333333 HEAD@{1}: pull origin master: Fast-forward<br>222222 HEAD@{2}: reset: moving to 222222<br>333333 HEAD@{3}: commit: modify pull 3</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git命令行操作-收纳&lt;br&gt;
    
    </summary>
    
    
      <category term="git" scheme="//fenghou.site/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>HTML标签语义</title>
    <link href="//fenghou.site/2017/11/20/2017-11-20-html-tag/"/>
    <id>//fenghou.site/2017/11/20/2017-11-20-html-tag/</id>
    <published>2017-11-20T10:09:08.000Z</published>
    <updated>2018-06-11T06:28:24.712Z</updated>
    
    <content type="html"><![CDATA[<p>HTML语义化整理<br><a id="more"></a><br>块级元素 常见的div p ul<br>行内元素 常见的span a </p><p>元素间的嵌套<br>什么是语义化<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--会变成--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--h1~h6 p 块级元素内不能再内嵌块级元素--&gt;</span></span><br></pre></td></tr></table></figure></p><p>行内元素内 原则上不应该内嵌块级元素 但没有强制限制</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML语义化整理&lt;br&gt;
    
    </summary>
    
    
      <category term="html" scheme="//fenghou.site/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>vue-about</title>
    <link href="//fenghou.site/2017/11/17/2017-11-17-vue-about/"/>
    <id>//fenghou.site/2017/11/17/2017-11-17-vue-about/</id>
    <published>2017-11-17T06:30:23.000Z</published>
    <updated>2018-06-11T06:28:24.711Z</updated>
    
    <content type="html"><![CDATA[<p>VUE-ABOUT</p><a id="more"></a><h3 id="vue中-scope的实现"><a href="#vue中-scope的实现" class="headerlink" title=".vue中 scope的实现"></a>.vue中 scope的实现</h3><p>vue文件可以实现当前文件的css作用域<br>实现手法是通过vue-loader后生成一个<br>随机字符串属性 通过内置css属性选择器实现<br>like that<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"scope-div"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scope</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.scope-div</span>&#123;</span></span><br><span class="line"><span class="undefined">        width: 200px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--打包处理后--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.scope-div</span><span class="selector-attr">[data-v-7af99ee4]</span>&#123;</span></span><br><span class="line"><span class="undefined">        width: 200px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"scope-div"</span> <span class="attr">data-v-7af99ee4</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h3><p>Vuex 中模块的划分<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mutations <span class="keyword">from</span> <span class="string">'./mutations'</span></span><br><span class="line"><span class="keyword">import</span> actions <span class="keyword">from</span> <span class="string">'./actions'</span></span><br><span class="line"><span class="keyword">import</span> ware <span class="keyword">from</span> <span class="string">'./module/wareModule'</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    viewImageConfig:&#123;</span><br><span class="line">      isShow:<span class="literal">false</span>,</span><br><span class="line">      url:<span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations,  <span class="comment">// 修改store方法</span></span><br><span class="line">  actions,    <span class="comment">// 调用修改store方法</span></span><br><span class="line">  modules: &#123;</span><br><span class="line">    ware</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//actions.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    demoAction(&#123;commit&#125;)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ware.js</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  demoWareStore:<span class="string">'345'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  getDemoWareStore: <span class="function"><span class="params">state</span> =&gt;</span> state.demoWareStore</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  demoWareAction(&#123;commit,state&#125;,rs)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(rs)</span><br><span class="line">    commit(<span class="string">'DEMO_WARE_MUT'</span>,rs)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  DEMO_WARE_MUT(state,rs)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(rs)</span><br><span class="line">    state.demoWareStore = <span class="string">'123'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  state,</span><br><span class="line">  getters,</span><br><span class="line">  actions,</span><br><span class="line">  mutations</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>vuex 实例会混入vue的实例中<br>通过this.$store<br>而模块中引入的 action mutations getters 都会和全局混合在一起<br>this.$store._actions[demoWareAction,demoAction]<br>而state会根据module分割<br>this.$store.store.viewImageConfig<br>this.$store.store.ware.demoWareStore</p><h3 id="Vue中路由-层级的渲染"><a href="#Vue中路由-层级的渲染" class="headerlink" title="Vue中路由 层级的渲染"></a>Vue中路由 层级的渲染</h3><p>首先Router和route 会混入到vue的实例中去<br>vue-router 提供了 一个 router-view 的组件<br>如果是嵌套的路由 vue-router 是怎么实现对应的显示<br>首先在 在显示 当前组件时 vue-router 会根据当前路由<br>生成一个 已经匹配过的数组<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$route = &#123;</span><br><span class="line">    path:<span class="string">'/part'</span>,</span><br><span class="line">    matched:[</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">''</span>,</span><br><span class="line">            name:<span class="string">'Home'</span>,</span><br><span class="line">            ...</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">'/part'</span>,</span><br><span class="line">            name:<span class="string">'Part'</span>,</span><br><span class="line">            ...</span><br><span class="line">        &#125;,</span><br><span class="line">    ],</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>渲染 vue-router 时 会去判断 当前组件的层级<br>然后对应去 这个 matched 中取层级下标对应的值<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> route = parent.$route</span><br><span class="line"><span class="keyword">let</span> depth = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> inactive = <span class="literal">false</span></span><br><span class="line"><span class="keyword">while</span> (parent &amp;&amp; parent._routerRoot !== parent) &#123;</span><br><span class="line">      <span class="keyword">if</span> (parent.$vnode &amp;&amp; parent.$vnode.data.routerView) &#123;</span><br><span class="line">        depth++</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (parent._inactive) &#123;</span><br><span class="line">        inactive = <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">      parent = parent.$parent </span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">const</span> matched = route.matched[depth]</span><br><span class="line"> <span class="comment">//此时mathed 就是匹配到要渲染的 组件</span></span><br></pre></td></tr></table></figure></p><p>举例说明<br>路由配置如下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> Router(&#123;</span><br><span class="line">    routes:[</span><br><span class="line">       &#123;</span><br><span class="line">            path: <span class="string">'/'</span>,</span><br><span class="line">            name: <span class="string">'Home'</span>,</span><br><span class="line">            component: Home,</span><br><span class="line">            children: [</span><br><span class="line">                &#123;</span><br><span class="line">                    path: <span class="string">'/part'</span>,</span><br><span class="line">                    name: <span class="string">'Part'</span>,</span><br><span class="line">                    component: Part,</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">           </span><br><span class="line">       &#125; </span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--App--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Home--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"readyMenu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-head</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-menu</span>&gt;</span><span class="tag">&lt;/<span class="name">v-menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content-box"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"move"</span> <span class="attr">mode</span>=<span class="string">"out-in"</span>&gt;</span><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-load</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-toast</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Part--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    Part</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 路由为 localhost:8010/#/时 </span></span><br><span class="line">$route = &#123;</span><br><span class="line">    path:<span class="string">'/'</span>,</span><br><span class="line">    matched:[</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">''</span>,</span><br><span class="line">            name:<span class="string">'Home'</span>,</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 此时</span></span><br><span class="line">depth = <span class="number">0</span></span><br><span class="line"><span class="keyword">const</span> matched = route.matched[depth]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由为 localhost:8010/#/part时 </span></span><br><span class="line">$route = &#123;</span><br><span class="line">    path:<span class="string">'/part'</span>,</span><br><span class="line">    matched:[</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">''</span>,</span><br><span class="line">            name:<span class="string">'Home'</span>,</span><br><span class="line">            ...</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">''</span>,</span><br><span class="line">            name:<span class="string">'Part'</span>,</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//先渲染Home之后</span></span><br><span class="line">depth = <span class="number">1</span></span><br><span class="line"><span class="keyword">const</span> matched = route.matched[depth]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;VUE-ABOUT&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="//fenghou.site/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>node-webpack</title>
    <link href="//fenghou.site/2017/11/16/2017-11-16-webpack-rules/"/>
    <id>//fenghou.site/2017/11/16/2017-11-16-webpack-rules/</id>
    <published>2017-11-16T03:29:13.000Z</published>
    <updated>2018-06-11T06:28:24.711Z</updated>
    
    <content type="html"><![CDATA[<p>webpack - 笔记<br><a id="more"></a></p><h3 id="CSS样式表"><a href="#CSS样式表" class="headerlink" title="CSS样式表"></a>CSS样式表</h3><p>webpack可以做的<br>预处理语言转换 (scss-loader等)<br>提取样式表文件 (extract-text-webpack-plugin)<br>补全浏览器前缀 (postcss-loader autoprefixer)<br>打包压缩</p><p>webpack 加载器的加载规则<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">model:&#123;</span><br><span class="line">   rules:[</span><br><span class="line">    &#123;</span><br><span class="line">       test:<span class="string">''</span>, <span class="comment">//多个loader建议配置</span></span><br><span class="line">       use:[</span><br><span class="line">        &#123;</span><br><span class="line">          loader:<span class="string">''</span>,</span><br><span class="line">          options:&#123;&#125;  </span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;&#125;</span><br><span class="line">       ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">       test:<span class="string">''</span>,<span class="comment">//单个loader建议配置</span></span><br><span class="line">       loader:<span class="string">''</span>,</span><br><span class="line">       options:&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对于要抽离出来的css文件的配置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">'extract-text-webpack-plugin'</span>)</span><br><span class="line">rules:[</span><br><span class="line">    &#123;</span><br><span class="line">            test:<span class="regexp">/\.css$/</span>,</span><br><span class="line">            use: ExtractTextPlugin.extract(<span class="string">'css-loader'</span>,<span class="string">'style-loader'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">           test:<span class="regexp">/\.css$/</span>,</span><br><span class="line">           use: ExtractTextPlugin.extract(&#123;</span><br><span class="line">               use:[</span><br><span class="line">                   &#123;</span><br><span class="line">                       loader:<span class="string">'css-loader'</span>,</span><br><span class="line">                       options:&#123;</span><br><span class="line">                          sourceMap:<span class="literal">true</span></span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               ]</span><br><span class="line">           &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>使用postcss-loader时需要配置 .postcssrc.js<br>安装 autoprefixer 并且指定兼容(package.json中配置)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//.postcssrc.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="string">"plugins"</span>: &#123;</span><br><span class="line">    <span class="comment">// to edit target browsers: use "browserlist" field in package.json</span></span><br><span class="line">    <span class="string">"autoprefixer"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//package.json</span></span><br><span class="line"><span class="string">"browserslist"</span>: [</span><br><span class="line">    <span class="string">"&gt; 1%"</span>,</span><br><span class="line">    <span class="string">"last 2 versions"</span>,</span><br><span class="line">    <span class="string">"not ie &lt;= 8"</span></span><br><span class="line">  ]</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">last 2 versions: the last 2 versions for each browser.</span></span><br><span class="line"><span class="comment">最后2个版本：每个浏览器的最后2个版本。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">last 2 Chrome versions: the last 2 versions of Chrome browser.</span></span><br><span class="line"><span class="comment">最后2个chrome版本：chrome浏览器的最后2个版本。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&gt; 5%: versions selected by global usage statistics. &gt;=, &lt; and &lt;= work too.</span></span><br><span class="line"><span class="comment">&gt; 5％：由全局使用统计选择的版本。&gt; =，&lt;和&lt;=也工作。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&gt; 5% in US: uses USA usage statistics. It accepts two-letter country code.</span></span><br><span class="line"><span class="comment">&gt; 5% in US: 使用美国使用统计。它接受两个字母的国家代码。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&gt; 5% in alt-AS: uses Asia region usage statistics. List of all region codes can be found at caniuse-lite/data/regions.</span></span><br><span class="line"><span class="comment">&gt; 5% in alt-AS: 使用亚洲地区使用情况统计。所有地区代码清单可在caniuse-lite / data / regions中找到。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&gt; 5% in my stats: uses custom usage data.</span></span><br><span class="line"><span class="comment">&gt; 5% in my stats: 使用自定义使用数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">extends browserslist-config-mycompany: take queries from browserslist-config-mycompany npm package.</span></span><br><span class="line"><span class="comment">扩展browserslist-config-mycompany: 从browserslist-config-mycompany npm包中获取查询。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ie 6-8: selects an inclusive range of versions.</span></span><br><span class="line"><span class="comment">ie 6-8: 选择包含范围的版本</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Firefox &gt; 20: versions of Firefox newer than 20. &gt;=, &lt; and &lt;= work too.</span></span><br><span class="line"><span class="comment">Firefox &gt; 20: Firefox的版本比20更新。&gt; =，&lt;和&lt;=也可以。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">iOS 7: the iOS browser version 7 directly.</span></span><br><span class="line"><span class="comment">iOS 7: 直接使用ios浏览器版本7</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Firefox ESR: the latest [Firefox ESR] version.</span></span><br><span class="line"><span class="comment">Firefox esr：最新的[firefox esr]版本。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">unreleased versions or unreleased Chrome versions: alpha and beta versions.</span></span><br><span class="line"><span class="comment">未发布的版本或未发布的Chrome版本：alpha和beta版本。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">last 2 major versions or last 2 iOS major versions: all minor/patch releases of last 2 major versions.</span></span><br><span class="line"><span class="comment">最后2个主要版本或最后2个主要版本: 最后2个主要版本的所有次要/补丁版本  </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">since 2015 or last 2 years: all versions released since year 2015 (also since 2015-03 and since 2015-03-10).</span></span><br><span class="line"><span class="comment">自2015年或最近2年以来: 自2015年以来发布的所有版本（自2015-03和2015-03-10以来）   </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">dead: browsers from last 2 version query, but with less than 0.5% in global usage statistics and without official support or updates for 24 months. Right now it is IE 10, IE_Mob 10, BlackBerry 10, and BlackBerry 7.</span></span><br><span class="line"><span class="comment">dead: 来自上次2版本查询的浏览器，但全球使用情况统计信息少于0.5％，并且24个月没有官方支持或更新</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">defaults: Browserslist’s default browsers (&gt; 0.5%, last 2 versions, Firefox ESR, not dead). </span></span><br><span class="line"><span class="comment">defaults://默认配置</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">not ie &lt;= 8: exclude browsers selected by previous queries. </span></span><br><span class="line"><span class="comment">not ie &lt;= 8: 排除先前查询选择的浏览器 </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><p>使用 optimize-css-assets-webpack-plugin 插件压缩css<br>可以考虑 将 css-loader 相关的加载处理抽出来处理<br>webpack 说到底就是一份配置文件<br>完全可以自由的拼拆(webpack-merge)</p><blockquote><p>extract-text-webpack-plugin<br>抽取样式 请配合 plugins使用<br>抽取样式 请配合 plugins使用<br>抽取样式 请配合 plugins使用 三遍<br>new ExtractTextPlugin(‘style.css’)</p></blockquote><h3 id="babel"><a href="#babel" class="headerlink" title="babel"></a>babel</h3><p>关于es6 babel的转换<br>transform-runtime 转换语法 ES6 的语法转换成ES5的<br>通俗理解为 转换语法糖<br>不转换新增API Map Set。。。includes等<br>如果需要实现 则需要通过引入 babel-polyfill来实现<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">a.push(<span class="string">'5'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(a.includes(<span class="string">'5'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如上代码 会转换成</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">a.push(<span class="string">'5'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a.includes(<span class="string">'5'</span>));</span><br></pre></td></tr></table></figure></p><h3 id="公共模块抽离"><a href="#公共模块抽离" class="headerlink" title="公共模块抽离"></a>公共模块抽离</h3><p>webpack抽离公共的模块</p><blockquote><p>name 打包的名称<br>  minChunks: number|Infinity|function(module, count) -&gt; boolean,<br>  // 在传入  公共chunk(commons chunk) 之前所需要包含的最少数量的 chunks 。<br>  // 数量必须大于等于2，或者少于等于 chunks的数量<br>  // 传入 <code>Infinity</code> 会马上生成 公共chunk，但里面没有模块。<br>  // 你可以传入一个 <code>function</code> ，以添加定制的逻辑（默认是 chunk 的数量）<br>      并且调用函数时会传入 module 和 count 参数。<br>      module 参数代表每个 chunks 里的模块，这些 chunks 是你通过 name/names 参数传入的<br>      module.context: The directory that stores the file. For example: ‘/my_project/node_modules/example-dependency’<br>      module.resource: The name of the file being processed. For example: ‘/my_project/node_modules/example-dependency/index.js’<br>      count 参数表示 module 被使用的 chunk 数量</p></blockquote><p>可以通过传参minChunks来控制你希望重复出现几次的module 被提取出来打包。<br>也就是说你自己可以控制当一个模块被引入几次可以被打包到共用的chunk中，<br>还可以规定如果这个公共模块小于一个值 minSize，<br>就不被提取出来这些都可以帮助你控制你想要的粒度。<br>当你改的不是公共模块的代码，理论上webpack 打包的时候本来就不会影响其他代码。<br>但是webpack 在使用 CommoChunkPlugin会生成一段 runtime 代码，<br>而哪怕你不改变common 里的代码这个 runtime 仍然是会跟随着打包变化的并且打入你的common 中，<br>所以你的common 的hash 就会开始变化了。<br>但是也有办法，就是独立把生成的runtime 代码抽出来。<br>（manifest）像下面一样，这个是从 vue-cli 中学习而来</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class="line">      name: <span class="string">'vendor'</span>,</span><br><span class="line">      minChunks: <span class="function"><span class="keyword">function</span> (<span class="params">module, count</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// any required modules inside node_modules are extracted to vendor</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">module</span>.resource &amp;&amp; <span class="regexp">/\.js$/</span>.test(<span class="built_in">module</span>.resource) &amp;&amp; <span class="built_in">module</span>.resource.indexOf(path.join(__dirname, <span class="string">'../node_modules'</span>)) === <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"> <span class="keyword">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class="line">       name: <span class="string">'mainfest'</span>,</span><br><span class="line">       chunks: [<span class="string">'vendor'</span>]</span><br><span class="line">     &#125;)</span><br></pre></td></tr></table></figure><h3 id="模块异步加载"><a href="#模块异步加载" class="headerlink" title="模块异步加载"></a>模块异步加载</h3><p>第一个参数 依赖的文件 第二个参数回调 第三个参数 命名名称<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">output: &#123;</span><br><span class="line">    path: config.build.assetsRoot,</span><br><span class="line">    filename: utils.assetsPath(<span class="string">'js/[name].[chunkhash].js'</span>),</span><br><span class="line">    chunkFilename: utils.assetsPath(<span class="string">'js/[name].[chunkhash].js'</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>.ensure([], <span class="built_in">require</span> =&gt; &#123;</span><br><span class="line">        <span class="built_in">require</span>(<span class="string">'../Component/Index'</span>)</span><br><span class="line">    &#125;,<span class="string">'Index'</span>)</span><br><span class="line"><span class="comment">// 传入第三个参数的  js/Index.xxxxxxxx.js</span></span><br><span class="line"><span class="comment">// 不传的           js/id.xxxxxxxx.js</span></span><br><span class="line"><span class="comment">// 第三个参数相同的会打包到一个js 中</span></span><br></pre></td></tr></table></figure></p><p>Vue中路由实现<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Home = <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>.ensure([],()=&gt;&#123;resolve(<span class="built_in">require</span>(<span class="string">'@/components/common/Home'</span>))&#125;)</span><br><span class="line">Home = <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>.ensure([],()=&gt;&#123;resolve(<span class="built_in">require</span>(<span class="string">'@/components/common/Home'</span>)),<span class="string">'Home'</span>&#125;)</span><br><span class="line">Home = <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>([<span class="string">'@/components/common/Home'</span>], resolve)</span><br></pre></td></tr></table></figure></p><p>react中路由实现<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Home = <span class="function">(<span class="params">location, resolve</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">require</span>.ensure([], <span class="built_in">require</span> =&gt; &#123;</span><br><span class="line">        resolve(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'../Component/Home'</span>).default)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> Home = <span class="function">(<span class="params">location, resolve</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">require</span>.ensure([], <span class="built_in">require</span> =&gt; &#123;</span><br><span class="line">        resolve(<span class="literal">null</span>, <span class="built_in">require</span>(<span class="string">'../Component/Home'</span>).default)</span><br><span class="line">    &#125;,<span class="string">'Home'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>普通js实现<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">load = <span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">require</span>.ensure([], <span class="built_in">require</span> =&gt; &#123;</span><br><span class="line">              <span class="built_in">require</span>(<span class="string">'@/assets/js/demo'</span>)</span><br><span class="line">             &#125;)</span><br><span class="line">&#125;</span><br><span class="line">load()</span><br><span class="line"></span><br><span class="line"><span class="comment">//demo.js         </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'I load'</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">V</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'I will V'</span>)</span><br><span class="line">&#125;</span><br><span class="line">V()</span><br></pre></td></tr></table></figure></p><h3 id="devServer"><a href="#devServer" class="headerlink" title="devServer"></a>devServer</h3><p>关于webpack的devServer<br>如下配置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">devServer:&#123;</span><br><span class="line">        contentBase:path.resolve(__dirname,<span class="string">'../static'</span>),</span><br><span class="line">        publicPath:<span class="string">'/'</span>,</span><br><span class="line">        port:<span class="number">8888</span>,</span><br><span class="line">        open:<span class="literal">true</span>,</span><br><span class="line">        host:<span class="string">'192.168.0.246'</span>,</span><br><span class="line">        hot:<span class="literal">true</span>,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Project is running at http://192.168.0.246:8888/</span></span><br><span class="line"><span class="comment">* webpack output is served from /</span></span><br><span class="line"><span class="comment">* Content not from webpack is served from E:\github\firework\static</span></span><br><span class="line"><span class="comment">* */</span></span><br></pre></td></tr></table></figure></p><p>contentBase 指定的是 页面中引用的不是通过webpack打包的文件的 获取目录<br>publicPath  指定的是 页面中引用的是通过webpack打包的文件的获取目录</p><p>hot 指的是是否开启热重载<br>需要搭配 new webpack.HotModuleReplacementPlugin() 插件一起使用</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;webpack - 笔记&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
      <category term="webpack" scheme="//fenghou.site/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>node-sms-boom</title>
    <link href="//fenghou.site/2017/11/13/2017-11-13-node-sms-boom/"/>
    <id>//fenghou.site/2017/11/13/2017-11-13-node-sms-boom/</id>
    <published>2017-11-13T01:27:44.000Z</published>
    <updated>2018-06-11T06:28:24.711Z</updated>
    
    <content type="html"><![CDATA[<p>利用puppeteer进行短信轰炸<br><a id="more"></a></p><h3 id="puppeteer"><a href="#puppeteer" class="headerlink" title="puppeteer"></a>puppeteer</h3><p>安装<br>ERROR: Failed to download Chromium r508693! Set “PUPPETEER_SKIP_CHROMIUM_DOWNLOAD” env variable to skip download.</p><p>原因 安装 puppeteer 时会去下载 chromium（实验版chrome），但是由于网络的原因，下载失败了</p><p>解决<br>win npm config set PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true<br>linux export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD = true</p><p>linux centos 7.3 下载chromium 失败 待解决</p><p><a href="http://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html" target="_blank" rel="noopener">http://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html</a><br>从这里下载 <a href="http://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html?prefix=Linux_x64/515411/" target="_blank" rel="noopener">http://commondatastorage.googleapis.com/chromium-browser-snapshots/index.html?prefix=Linux_x64/515411/</a><br>/admin/fenghou/www/chrome/chrome-linux/chrome</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用puppeteer进行短信轰炸&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>node-npm</title>
    <link href="//fenghou.site/2017/11/08/2017-11-08-node-npm/"/>
    <id>//fenghou.site/2017/11/08/2017-11-08-node-npm/</id>
    <published>2017-11-08T08:25:10.000Z</published>
    <updated>2018-06-11T06:28:24.711Z</updated>
    
    <content type="html"><![CDATA[<p>NPM - 笔记<br><a id="more"></a></p><h3 id="切换npm源"><a href="#切换npm源" class="headerlink" title="切换npm源"></a>切换npm源</h3><p><a href="https://registry.npmjs.org/" target="_blank" rel="noopener">https://registry.npmjs.org/</a><br>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a><br>npm config set disturl <a href="https://npm.taobao.org/dist" target="_blank" rel="noopener">https://npm.taobao.org/dist</a><br>npm config delete registry<br>npm config delete disturl<br>npm config list<br>npm config edit</p><h3 id="sass安装出错"><a href="#sass安装出错" class="headerlink" title="sass安装出错"></a>sass安装出错</h3><p>SASS_BINARY_SITE=<a href="https://npm.taobao.org/mirrors/node-sass/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/node-sass/</a> npm install node-sass –save-dev</p><h3 id="更新node版本"><a href="#更新node版本" class="headerlink" title="更新node版本"></a>更新node版本</h3><p>window 官网下载.msi文件 安装覆盖老版本</p><h3 id="npm-版本"><a href="#npm-版本" class="headerlink" title="npm 版本"></a>npm 版本</h3><p>npm版本5.5.1<br>会生成 package-lock.json 锁定当前安装的 package 包<br>rm -rf package-lock.json<br>管理员身份 npm install 还有有问题 没解决  版本回退到5之前</p><h3 id="npm-publish"><a href="#npm-publish" class="headerlink" title="npm publish"></a>npm publish</h3><p>登录 npm addUser<br>源切换 <a href="https://registry.npmjs.org/" target="_blank" rel="noopener">https://registry.npmjs.org/</a><br>不然会 <code>no_perms Private mode enable, only admin can publish this module</code></p><h3 id="关于–save-dev"><a href="#关于–save-dev" class="headerlink" title="关于–save-dev"></a>关于–save-dev</h3><p>publish上去的包中的devDependencies中依赖的包 下载时不会被安装</p><h3 id="关于包的安装依赖以及删除"><a href="#关于包的安装依赖以及删除" class="headerlink" title="关于包的安装依赖以及删除"></a>关于包的安装依赖以及删除</h3><p>npm view package versions 查看所有版本<br>npm view package version  查看最新版本</p><p>npm ls package            查看安装的版本</p><p>npm i package@version     安装指定版本</p><p>npm i package@latesd      安装最新版本</p><p>package.json 的版本依赖<br>x.y.z  x:主版本号  y:次版本号  z:补丁版本号<br>以下用 大 中 小 代替<br>~ 会匹配最新的小版本依赖包，比如~1.2.3会匹配所有1.2.z版本，但是不包括1.3.0<br>^ 会匹配最新的中版本依赖包，比如^1.2.3会匹配所有1.y.z的包，包括1.3.0，但是不包括2.0.0</p><ul><li>会匹配最新的版本<br>vue:’2.5.2’     安装 2.5.2版本<br>vue:’~2.5.2’    安装最近更新的小版本 2.5.z版本（z&gt;=3）<br>vue:’^2.5.2’    安装最近跟新的中版本 2.y.z版本 (y&gt;=5)(y = 5 ? z &gt;= 2 : z)<br>vue:’*’         安装最新版本</li></ul><p>npm update package  依赖～ ^版本规则<br>webpack:’3.7.0’    npm update webpack    不更新<br>webpack:’~3.7.0’   npm update webpack    3.7.0 —&gt; 3.7.1   小版本最新版本<br>webpack:’^3.7.0’   npm update webpack    3.7.0 —&gt; 3.11.0  中版本最新版本<br>webpack:’*’        npm update webpack                       最新版本</p><p>npm uninstall package 删除依赖包</p><p>npm cache clean 清除缓存</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;NPM - 笔记&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Css-Specification</title>
    <link href="//fenghou.site/2017/11/07/2017-11-07-css-Specification/"/>
    <id>//fenghou.site/2017/11/07/2017-11-07-css-Specification/</id>
    <published>2017-11-07T07:08:16.000Z</published>
    <updated>2018-06-11T06:28:24.710Z</updated>
    
    <content type="html"><![CDATA[<p>css规范笔记<br><a id="more"></a><br><a href="http://www.ayqy.net/doc/css2-1/cover.html#minitoc" target="_blank" rel="noopener">css规范文档</a><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123; </span><br><span class="line">  <span class="attribute">font-weight</span>: bold; </span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12pt</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">14pt</span>; </span><br><span class="line">  <span class="attribute">font-family</span>: Helvetica; </span><br><span class="line">  <span class="attribute">font-variant</span>: normal;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123; <span class="attribute">font</span>: bold <span class="number">12pt</span>/<span class="number">14pt</span> Helvetica &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;css规范笔记&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="//fenghou.site/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>css-Box-Model</title>
    <link href="//fenghou.site/2017/11/07/2017-11-07-css-box-model/"/>
    <id>//fenghou.site/2017/11/07/2017-11-07-css-box-model/</id>
    <published>2017-11-07T01:56:43.000Z</published>
    <updated>2018-06-11T06:28:24.710Z</updated>
    
    <content type="html"><![CDATA[<p>css-box 总结<br><a id="more"></a></p><h3 id="盒模型的计算"><a href="#盒模型的计算" class="headerlink" title="盒模型的计算"></a>盒模型的计算</h3><p>盒模型 规定了元素框处理元素内容、内边距、边框 和 外边距 的方式 </p><p>盒模型 宽高的计算<br>box-sizing 属性可以通俗的理解为 给box设置的宽高从哪里开始计算<br>盒模型的真实宽高 = border-box + padding-box + content-box</p><p>box-sizing: content-box(标准盒模型)  表示设置的宽高是 content-box的宽高 那渲染在页面上真实的宽高还要加上 padding-box 和 border-box<br>width(真实) = width(content-box设置的width) + padding-box + border-box</p><p>box-sizing: border-box(IE盒模型)   表示设置的宽高是 border-box的宽高 那渲染在页面上真实的宽高就是 设置的宽高<br>width(真实) = width(设置的width) </p><p>box-sizing: inherit 从父元素继承 </p><h3 id="BFC-amp-amp-IFC"><a href="#BFC-amp-amp-IFC" class="headerlink" title="BFC &amp;&amp; IFC"></a>BFC &amp;&amp; IFC</h3><p>BFC 块级格式化上下文<br>可以通过构建BFC 解决margin 重合 清除浮动<br>float的值不为none<br>position的值不为static或者relative<br>display的值为 table-cell, table-caption, inline-block, flex, 或者 inline-flex中的其中一个<br>overflow的值不为visible</p><p>IFC 内联格式化上下文<br>默认对齐方式 vertical-align:baseline 所以同时存在有内容的内联元素和没内容的内联元素 有内容的 会往下掉<br>vertical-align:top</p><h3 id="背景的起始"><a href="#背景的起始" class="headerlink" title="背景的起始"></a>背景的起始</h3><p>background-clip 表示背景在盒模型中显示的位置<br>border-box  从border-box开始有背景<br>padding-box 从padding-box开始有背景<br>content-box 从content-box开始有背景<br>background-origin 表示背景在盒模型中开始渲染的位置<br>border-box 背景从border-box 处开始渲染<br>padding-box 背景从padding-box 处开始渲染<br>content-box 背景从content-box 处开始渲染</p><p>background-position 表示从这张背景图片的什么位置 开始渲染在 元素背景上<br>background-position:X% Y%(百分比值) 表示会把图片 横向X% 纵向的Y% 的点与 元素 横向X% 纵向的Y%点对齐<br>background-position:Xpx Ypx(数值)  表示图片距离背景起始绘制点的距离   </p><p>background-position: <background-origin> <background-clip> <background-position>/<background-size></background-size></background-position></background-clip></background-origin></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;css-box 总结&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="//fenghou.site/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>从源码看webpack</title>
    <link href="//fenghou.site/2017/10/25/2017-10-25-webpack-source-code/"/>
    <id>//fenghou.site/2017/10/25/2017-10-25-webpack-source-code/</id>
    <published>2017-10-25T02:21:01.000Z</published>
    <updated>2018-06-11T06:28:24.710Z</updated>
    
    <content type="html"><![CDATA[<p>研究研究 源码<br>总结总结 心得<br><a id="more"></a></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>webpack 这边的配置<br>主要还是根据项目来灵活的配置<br>大的项目根据运行环境来区分 开发 测试 线上<br>本地的调试通过node来搭建<br>小的项目可以通过命令行的形式直接敲命令</p><blockquote><p>devServer</p></blockquote><p>devServer可以用来配置热加载 请求代理 静态资源访问等<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可以配置在webpack配置对象里的devServer里面</span></span><br><span class="line">devServer: &#123;</span><br><span class="line">        hot:<span class="literal">true</span>,</span><br><span class="line">        contentBase:path.resolve(__dirname,<span class="string">'../'</span>),</span><br><span class="line">        publicPath:path.resolve(__dirname,<span class="string">'../assets/'</span>)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 或者在调用的时候传入</span></span><br><span class="line"><span class="keyword">var</span> server = <span class="keyword">new</span> WebpackDevServer(compiler,devServer)</span><br></pre></td></tr></table></figure></p><p>通过 <code>webpack-dev-server</code>的源码可以看到<br>热加载是通过 <code>sockjs</code>来实现的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现原理 server.js</span></span><br><span class="line"><span class="keyword">var</span> sockjs_opts = &#123;<span class="attr">sockjs_url</span>: <span class="string">"http://cdn.jsdelivr.net/sockjs/1.0.1/sockjs.min.js"</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> sockjs = sockjs.createServer(sockjs_opts);</span><br><span class="line">sockjs.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">conn</span>) </span>&#123;</span><br><span class="line">    conn.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">        conn.write(message); <span class="comment">// 向客户端 发送</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> app = express(); </span><br><span class="line"><span class="keyword">var</span> server = http.createServer(app);</span><br><span class="line">sockjs.installHandlers(server, &#123;<span class="attr">prefix</span>:<span class="string">'/demo'</span>&#125;);</span><br><span class="line"><span class="comment">// client.js</span></span><br><span class="line"><span class="keyword">var</span> sockjs_url = <span class="string">'/demo'</span>;</span><br><span class="line"><span class="keyword">var</span> sockjs = <span class="keyword">new</span> SockJS(sockjs_url);</span><br><span class="line">sockjs.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// e.data</span></span><br><span class="line">    <span class="built_in">window</span>.location.reload()</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这也是为什么 要在 entry中将 <code>webpack-dev-server/client?http://localhost:8080/</code>引进来的原因</p><p>devServer的proxy是依赖<code>http-proxy-middleware</code>实现</p><p>而 devServer中的publicPath指定的是根据 dev-server服务请求中的静态资源的目录</p><blockquote><p>devtool</p></blockquote><p>source-map 几种模式 主要还是解决 多模块文件的调试和明确报错提示</p><h3 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3><p>webpack 的启动可以通过命令行调用</p><blockquote><p><code>webpack --w --config --progress --color</code></p></blockquote><p>通过这个命令可以启动webpack 监听 配置文件config路径 以及进程和颜色<br>具体的实现过程 输入命令行后会 执行 <code>node_modules/.bin/webpack</code> 这个脚本<br>然后会启动 <code>node_modules/webpack/bin/webpack.js</code><br>通过 yargs 这个node插件可以获取 在命令行中输入的参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//config-yargs.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">yargs</span>) </span>&#123;</span><br><span class="line">    yargs</span><br><span class="line">        .help(<span class="string">"help"</span>)</span><br><span class="line">    .alias(<span class="string">"help"</span>, <span class="string">"h"</span>)</span><br><span class="line">    .version()</span><br><span class="line">    .alias(<span class="string">"version"</span>, <span class="string">"v"</span>)</span><br><span class="line">    .options(&#123;</span><br><span class="line">            <span class="string">"watch"</span>: &#123;</span><br><span class="line">            type: <span class="string">"boolean"</span>,</span><br><span class="line">            alias: <span class="string">"w"</span>,</span><br><span class="line">            describe: <span class="string">"Watch the filesystem for changes"</span>,</span><br><span class="line">            group: BASIC_GROUP</span><br><span class="line">            &#125;,</span><br><span class="line">            ...</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//webpack.js</span></span><br><span class="line"><span class="keyword">var</span> options = <span class="built_in">require</span>(<span class="string">"./convert-argv"</span>)(yargs, argv);</span><br><span class="line"><span class="comment">//通过convert-argv.js 进行加工 返回一个混合配置文件的最终 options</span></span><br><span class="line">processOptions(options);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">processOptions</span>(<span class="params">options</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">"../lib/webpack.js"</span>);</span><br><span class="line">    <span class="keyword">var</span> compiler = webpack(options);</span><br><span class="line">    <span class="keyword">if</span>(options.watch) &#123;</span><br><span class="line">    compiler.watch(watchOptions, compilerCallback);</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">    compiler.run(compilerCallback);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="node"><a href="#node" class="headerlink" title="node"></a>node</h3><p>通过vue-cli构建的vue项目 开发是依赖 webpack<br>他是通过自己启动服务 将webpack作为中间件来运行<br>然后通过各种插件实现 代理 热加载等功能<br>通过express 来实现热加载 是依赖 <code>webpack-hot-middleware</code>实现<br>通过webpack构建的实例是继承<code>tapable</code>的<br><code>tapable</code> 用于事件发布执行的插件<br>通过 <code>plugin</code>注册事件<br>通过<code>applyPlugin</code>等响应事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> webpackConfig = <span class="built_in">require</span>(<span class="string">'./webpack.config'</span>)</span><br><span class="line"><span class="keyword">var</span> compiler = webpack(webpackConfig)</span><br><span class="line"><span class="keyword">var</span> hotMiddleware = <span class="built_in">require</span>(<span class="string">'webpack-hot-middleware'</span>)(compiler,&#123;</span><br><span class="line">    log:<span class="function"><span class="params">()</span>=&gt;</span>&#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//通过 html-webpack-plugin-after-emit 来触发 行为</span></span><br><span class="line">compiler.plugin(<span class="string">'compilation'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">compilation</span>) </span>&#123;</span><br><span class="line">    compilation.plugin(<span class="string">'html-webpack-plugin-after-emit'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data, cb</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'------------'</span>)</span><br><span class="line">        hotMiddleware.publish(&#123; <span class="attr">action</span>: <span class="string">'reload'</span> &#125;)</span><br><span class="line">        cb()</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//client</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">'eventsource-polyfill'</span>)</span><br><span class="line"><span class="keyword">var</span> hotClient = <span class="built_in">require</span>(<span class="string">'webpack-hot-middleware/client?noInfo=true&amp;reload=true'</span>)</span><br><span class="line"><span class="comment">// 响应 刷新页面</span></span><br><span class="line">hotClient.subscribe(<span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (event.action === <span class="string">'reload'</span>) &#123;</span><br><span class="line">    <span class="built_in">window</span>.location.reload()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>通过webpack的源码可以看到 webpack启动时 根据watch参数和回调来判断是否开启监听<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> mergeConfig = merge(webpackConfig,&#123;</span><br><span class="line">    watch:<span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line">webpack(mergeConfig)  <span class="comment">//监听</span></span><br><span class="line">webpack(mergeConfig,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;) <span class="comment">//监听</span></span><br><span class="line"><span class="comment">// 没有 回调 没有watch 执行watch</span></span><br><span class="line">compiler = webpack(mergeConfig)</span><br><span class="line">compiler.watch()</span><br></pre></td></tr></table></figure></p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>可以看到<code>webpack</code>的流程都是基于<code>tapable</code>订阅和发布机制来实现<br>而<code>tapable</code>的设计思想 是面向切面的编程设计aop<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例子 统计A方法的调用次数</span></span><br><span class="line"><span class="comment">// 直接写在A方法里 耦合了A的业务逻辑</span></span><br><span class="line"><span class="comment">// 通过回调参数解决 增加后期维护难度</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'执行A的逻辑'</span>)   </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'执行B的逻辑'</span>)  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//AOP</span></span><br><span class="line"><span class="built_in">Function</span>.prototype.logCount = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _self = <span class="keyword">this</span></span><br><span class="line">     <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        fn.apply(<span class="keyword">this</span>,<span class="built_in">arguments</span>)</span><br><span class="line">        <span class="keyword">return</span> _self.apply(<span class="keyword">this</span>,<span class="built_in">arguments</span>)</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> A_log = A.logCount(B)</span><br><span class="line">A_log()</span><br><span class="line"><span class="comment">// 业务解耦 面向切面进行拓展</span></span><br><span class="line"></span><br><span class="line"><span class="string">`tapable`</span>就是一句这种思想进行设计</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ComP</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>._plugins = &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">ComP.prototype.plugin = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">ComP.prototype.applyPlugins = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//webpack 的plugins 提供一个 apply 方法作为插件的入口</span></span><br><span class="line"><span class="comment">//并在这个方法中 发布时间</span></span><br><span class="line"><span class="comment">//在webpack构建时 调用apply方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">WebP</span>(<span class="params">options</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> compiler = <span class="keyword">new</span> ComP();</span><br><span class="line">    compiler.apply.apply(compiler,options.plugins)</span><br><span class="line">    compiler.run();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// options.plugins 是个数组 这里使用apply的技巧 第二个参数接受数组 在调用的方法里转成列表</span></span><br><span class="line">ComP.prototype.apply = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length; i++) &#123;</span><br><span class="line">            <span class="built_in">arguments</span>[i].apply(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">plugDemo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//plugDemo 订阅emit事件 当webpack的构建流程到emit时执行</span></span><br><span class="line">plugDemo.prototype.apply = <span class="function"><span class="keyword">function</span>(<span class="params">compiler</span>)</span>&#123;</span><br><span class="line">    compiler.plugin(<span class="string">"emit"</span>, (callback) =&gt; &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'第一次执行'</span>)</span><br><span class="line">            callback()</span><br><span class="line">        &#125;,<span class="number">1500</span>)</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> _obj = &#123;</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> plugDemo()</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br><span class="line">WebP(_obj)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;研究研究 源码&lt;br&gt;总结总结 心得&lt;br&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="//fenghou.site/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>canvas 图片裁剪</title>
    <link href="//fenghou.site/2017/10/10/2017-10-10-canvas-clip-image/"/>
    <id>//fenghou.site/2017/10/10/2017-10-10-canvas-clip-image/</id>
    <published>2017-10-10T08:50:07.000Z</published>
    <updated>2018-06-11T06:28:24.710Z</updated>
    
    <content type="html"><![CDATA[<p>心血来潮想实现一个图片编辑器<br><a id="more"></a></p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>实现图片根据选择区域裁剪<br>选择区域大小可以拖动改变</p><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><blockquote><p>裁切drawImage(image,x,y,w,h,_x,_y,_w,_h)</p></blockquote><p>x 裁切图片中x坐标<br>y 裁切图片中y坐标<br>w 裁切图片中的宽<br>h 裁切图片中的高<br>_x canvas中显示的x坐标<br>_y canvas中显示的y坐标<br>_w canvas中显示的宽<br>_h canvas中显示的高</p><p>所以思路是 在图片上显示一个选择区域 可以拖动 获取相对于图片的位置 在canvas中加载图片</p><blockquote><p>拉伸大小</p></blockquote><p>宽度拉伸 可以通过在选择区域中绝对定位一个元素来模拟边框 监听它上面的move事件来处理<br>这里注意事件的执行机制<br>事件的执行机制分为冒泡型和捕获型<br>冒泡型事件 从当前节点开始执行 一路传递给绑定当前事件的父元素 知道根节点为止<br>捕获型事件 从最外层绑定该事件的元素往子元素传递<br>addEventListener第三个参数默认false true表示冒泡事件 false表示捕获事件<br>可以通过<br>event.stopPropagation()<br>来阻止事件的冒泡<br>event.preventDefault()<br>这个是用来阻止事件的默认操作</p><blockquote><p>旋转</p></blockquote><p>通过控制Img旋转来控制<br>一开始的想法是通过旋转选择区域来选取，但这样选择区域的获取图片数据会很繁琐而且意义不大<br>旋转通过样式transform:rotate(0deg)<br>在js获取样式时 要通过getComputedStyle这个API来获取<br>style获取的是元素style属性中的样式 可读可写<br>所以通过style设置的元素回出现在元素的style属性中<br>getComputedStyle 获取的是最终作用在节点上的样式 只读<br>currentStyle IE自娱自乐产物 语法跟style类似 功能跟 getComputedStyle类似</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> clipV = <span class="built_in">window</span>.getComputedStyle(clip,<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">var</span> clipTrans = clip.getPropertyValue(<span class="string">'transform'</span>)</span><br><span class="line"><span class="comment">// or var clipTrans = clip.transform</span></span><br><span class="line"><span class="comment">// 这时候获取的是一个二维矩阵</span></span><br><span class="line"><span class="comment">// 型如 matrix(20, 10, 10, 10, 0, 0)</span></span><br></pre></td></tr></table></figure><blockquote><p>关于matrix</p></blockquote><p>matrix(a,b,c,d,e,f)<br>e,f 控制 x, y轴的偏移位置</p><p>a,b,c,d 控制旋转 旋转的角度(θ) matrix(cosθ,sinθ,-sinθ,cosθ,0,0)</p><p>角度计算 angle = Math.round(Math.atan2(b, a) <em> (180 / Math.PI))<br>缩放计算<br><code>有旋转时</code><br>x轴缩放  scaleX = Math.sqrt(a </em> a + b <em> b)<br>y轴缩放  scaleY = Math.sqrt(c </em> c + d * d)<br><code>无旋转时</code><br>x轴缩放  scaleX = a<br>y轴缩放  scaleY = b</p><p>matrix(1,tan(θy),tan(θx),1,0,0)<br>拉伸计算<br>x轴拉伸角度 skewX = Math.atan(c)<br>y轴拉伸角度 skewX = Math.atan(b)</p><blockquote><p>css动画界三巨头 transform transitions animation<br>举个例子<br>王者农药 新出一个英雄 <code>浪</code><br><code>一技能(transition)</code> 标记敌人 设置过度效果<br><code>二技能(transform)</code> 命中敌人 变化敌人<br><code>三技能(animation)</code> 命中目标 设置过度效果 变化敌人并带有过度效果(只产生效果)<br><code>被动(style.)</code>   二技能命中标记一技能的目标 会使二技能有过度效果；普攻第三次 变化敌人</p></blockquote><blockquote><p>硝烟弥漫的峡谷中 刚刚结束一场战斗 我方四名英雄死于敌方小兵之手<br>这时。。。<br>我方<code>浪</code>出现在中路 对线敌方诸葛亮 李白 红蓝双buff在手<br>一技能 成功标记诸葛亮(李白逃脱)  transition:transform 100ms linear<br>反手 一个二技能  transform:translate(0px,100px)(移动到我方中路一塔下) 命中对方诸葛亮 和 李白<br>李白唰一下出现在我方塔下(效果如闪现) 诸葛亮也慢跑到塔下…<br><code>浪</code> double kill<br>对面鲁班 苏烈过来支援 反手一个 大招  animation:scale_leg(腿缩短至十分之一) 100ms 4  alternate linear<br>只见 鲁班 苏烈一会变高 一会变矮 …<br><code>浪</code> quadra kill<br>木兰从草丛杀出 一技能 怼脸上  transition:display 100ms linear 蓝条空了<br>普攻 普攻 丝血 闪现接普攻 触发被动<br>缓缓的消失吧，木兰！！ document.querySelector(‘花木兰’).style.display = ‘none’<br><code>浪</code> penta kill</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>css相关的还是要经常温故温故 不然真的容易忘了</p><blockquote><p>参考<br><a href="http://www.zhangxinxu.com/wordpress/2012/05/getcomputedstyle-js-getpropertyvalue-currentstyle/" target="_blank" rel="noopener">获取元素CSS值之getComputedStyle方法熟悉</a><br><a href="http://www.zhangxinxu.com/wordpress/2012/06/css3-transform-matrix-%E7%9F%A9%E9%98%B5/" target="_blank" rel="noopener">理解CSS3 transform中的Matrix(矩阵)</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;心血来潮想实现一个图片编辑器&lt;br&gt;
    
    </summary>
    
    
      <category term="canvas" scheme="//fenghou.site/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>Js类型</title>
    <link href="//fenghou.site/2017/09/19/2017-09-19-js-input-check/"/>
    <id>//fenghou.site/2017/09/19/2017-09-19-js-input-check/</id>
    <published>2017-09-19T02:02:58.000Z</published>
    <updated>2018-06-11T06:28:24.710Z</updated>
    
    <content type="html"><![CDATA[<p>总结一些输入框中类型的判断<br><a id="more"></a></p><p>列举几个常用判断为空的情况<code>以下等于(==)不等于(!=)</code></p><table><thead><tr><th>对象</th><th>不等于</th><th>等于</th></tr></thead><tbody><tr><td>undefined</td><td>‘’ false 0 []</td><td>null</td></tr><tr><td>null</td><td>‘’ false 0 []</td><td>undefined</td></tr><tr><td>‘’</td><td>null undefined</td><td>false 0 []</td></tr><tr><td>0</td><td>null undefined</td><td>false ‘’ []</td></tr><tr><td>false</td><td>null undefined</td><td>0 ‘’ []</td></tr><tr><td>[]</td><td>null undefined</td><td>false 0 ‘’</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="literal">undefined</span> || <span class="literal">null</span> || <span class="string">''</span> || <span class="number">0</span> || <span class="literal">false</span></span><br><span class="line"><span class="keyword">if</span>(!a)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'会执行'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = a || <span class="string">'test'</span></span><br><span class="line"><span class="built_in">console</span>.log(b) <span class="comment">// test</span></span><br><span class="line"><span class="comment">//判断是否输入了</span></span><br><span class="line"><span class="comment">//转成string 一来replace可以调用 而来 如果数据是一开始写入的0</span></span><br><span class="line"><span class="keyword">var</span> _s = (inputVal+<span class="string">''</span>).replace(<span class="regexp">/(^\s*)|(\s*$)/g</span>,<span class="string">''</span>)</span><br><span class="line"><span class="keyword">if</span>(_s)&#123;</span><br><span class="line">    <span class="comment">//输入有效</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结一些输入框中类型的判断&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Node-Session</title>
    <link href="//fenghou.site/2017/08/20/2017-08-20-node-session-cookie/"/>
    <id>//fenghou.site/2017/08/20/2017-08-20-node-session-cookie/</id>
    <published>2017-08-20T02:20:32.000Z</published>
    <updated>2018-06-11T06:28:24.709Z</updated>
    
    <content type="html"><![CDATA[<p>Node中使用Session<br><a id="more"></a></p><blockquote><p>server.js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bodyParser  =  <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">var</span> session = <span class="built_in">require</span>(<span class="string">'express-session'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="built_in">require</span>(<span class="string">'express'</span>)()</span><br><span class="line"><span class="keyword">var</span> router = <span class="built_in">require</span>(<span class="string">'./models/user'</span>)</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(session(&#123;</span><br><span class="line">    name:<span class="string">'SESSION'</span>,</span><br><span class="line">    secret: <span class="string">'recommand 128 bytes random string'</span>,</span><br><span class="line">    cookie: &#123; <span class="attr">maxAge</span>: <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span> &#125;</span><br><span class="line">&#125;));</span><br><span class="line">app.use(<span class="string">'/'</span>, router);</span><br><span class="line">app.listen(<span class="number">4000</span>)</span><br></pre></td></tr></table></figure><blockquote><p>./models/user.js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.Router();</span><br><span class="line"><span class="keyword">var</span> userControl = <span class="built_in">require</span>(<span class="string">'../controller/user'</span>)</span><br><span class="line">router.post(<span class="string">'/user/login'</span>,userControl.login)</span><br><span class="line">router.post(<span class="string">'/user/check'</span>,userControl.check)</span><br><span class="line">router.post(<span class="string">'/user/create'</span>,userControl.createUser)</span><br><span class="line"><span class="built_in">module</span>.exports = router;</span><br></pre></td></tr></table></figure><blockquote><p>../controller/user.js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> userService = <span class="built_in">require</span>(<span class="string">'../service/user'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    login: <span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">        userService.login(req,res)</span><br><span class="line">    &#125;,</span><br><span class="line">    check: <span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">        userService.check(req,res)</span><br><span class="line">    &#125;,</span><br><span class="line">    createUser: <span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>) </span>&#123;</span><br><span class="line">        userService.createUser(req,res)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>../service/user.js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> User = <span class="built_in">require</span>(<span class="string">'./../dataBase/user'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    login:<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> name = req.body.name,</span><br><span class="line">            pwd = req.body.pwd</span><br><span class="line">        <span class="keyword">var</span> user = <span class="keyword">new</span> User(&#123;</span><br><span class="line">            name:name,</span><br><span class="line">            password:pwd</span><br><span class="line">        &#125;)</span><br><span class="line">        user.findUser(user.name,user.password)</span><br><span class="line">            .then(<span class="function">(<span class="params">rs</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">let</span> _data = &#123;&#125;</span><br><span class="line">                <span class="keyword">if</span>(rs.length)&#123;</span><br><span class="line">                    _data = &#123;</span><br><span class="line">                        code:<span class="number">200</span>,</span><br><span class="line">                        data:rs[<span class="number">0</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                    req.session.user = rs[<span class="number">0</span>].id;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    _data = &#123;</span><br><span class="line">                        code:<span class="number">500</span>,</span><br><span class="line">                        msg:<span class="string">'用户名或密码不正确'</span>,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                res.send(_data)</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    check:<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> _data = &#123;&#125;</span><br><span class="line">        <span class="keyword">if</span>(req.session.user)&#123;</span><br><span class="line">            _data = &#123;</span><br><span class="line">                code:<span class="number">200</span>,</span><br><span class="line">                data:<span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            _data = &#123;</span><br><span class="line">                code:<span class="number">200</span>,</span><br><span class="line">                data:<span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        res.send(_data)</span><br><span class="line">    &#125;,</span><br><span class="line">    createUser:<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> name = req.body.name,</span><br><span class="line">            pwd = req.body.pwd</span><br><span class="line">        <span class="keyword">var</span> user = <span class="keyword">new</span> User(&#123;</span><br><span class="line">            name:name,</span><br><span class="line">            password:pwd</span><br><span class="line">        &#125;)</span><br><span class="line">        user.createUser(user.name,user.password)</span><br><span class="line">            .then(<span class="function">(<span class="params">rs</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">let</span> _data = &#123;&#125;</span><br><span class="line">                _data = &#123;</span><br><span class="line">                    code:<span class="number">200</span>,</span><br><span class="line">                    data:rs[<span class="number">0</span>]</span><br><span class="line">                &#125;</span><br><span class="line">                req.session.user = rs[<span class="number">0</span>].id;</span><br><span class="line">                res.send(_data)</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Node中使用Session&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Linux 使用 Mysql</title>
    <link href="//fenghou.site/2017/08/18/2017-08-18-linux-mysql/"/>
    <id>//fenghou.site/2017/08/18/2017-08-18-linux-mysql/</id>
    <published>2017-08-18T02:20:08.000Z</published>
    <updated>2018-06-11T06:28:24.709Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 中使用 Mysql<br>记录<br><a id="more"></a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>关于安装 完全按着教程走 没有什么大问题<br>具体的教程 按照 安装的 mysql版本 自行搜索<br><a href="https://www.baidu.com/s?wd=linux%20mysql%20%E5%AE%89%E8%A3%85" target="_blank" rel="noopener">linux mysqlx.x.x 安装</a></p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>基本都是数据库原理里面有交的<br>学校学的时候一开始还用过命令行<br>后来都是用可视化工具了<br>全忘光了</p><blockquote><p><code>mysql -uroot -p</code>  //输入密码后 操作mysql<br><code>show databases;</code>  //查看库<br><code>create database 库名;</code> //新建数据库<br><code>use 库名;</code>  // 打开数据库<br><code>show tables;</code>  // 显示表<br><code>describe 表名;</code> // 查看表结构<br><code>drop database 库名;</code> //删除库<br><code>drop table 表名;</code> //删除表<br>//新建库的话 直接导入来的快一点<br><code>mysql -u用户名 -p密码 数据库名 &lt; 数据库名.sql</code> 导入</p></blockquote><p>不涉及复杂操作的话 这些命令基本够用了 </p><blockquote><p>参考<br><a href="http://www.jb51.net/article/90317.htm" target="_blank" rel="noopener">最全的mysql 5.7.13 安装配置方法图文教程(linux) 强烈推荐!</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux 中使用 Mysql&lt;br&gt;记录&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="//fenghou.site/tags/linux/"/>
    
      <category term="mysql" scheme="//fenghou.site/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>浏览器中js事件运行机制</title>
    <link href="//fenghou.site/2017/08/08/2017-08-08-js-event-loop/"/>
    <id>//fenghou.site/2017/08/08/2017-08-08-js-event-loop/</id>
    <published>2017-08-08T08:28:27.000Z</published>
    <updated>2018-06-11T06:28:24.709Z</updated>
    
    <content type="html"><![CDATA[<p>总结一下 浏览器中js事件运行机制<br><a id="more"></a><br>起因是女票今天问我一个问题<br>问题如下</p><h3 id="alert引起的争论"><a href="#alert引起的争论" class="headerlink" title="alert引起的争论"></a>alert引起的争论</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>,</span><br><span class="line">    domProcess = <span class="built_in">document</span>.querySelector(<span class="string">'#process'</span>),</span><br><span class="line">    inter = <span class="literal">null</span></span><br><span class="line">inter = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(count == <span class="number">100</span>)&#123;</span><br><span class="line">        domProcess.innerText = count+<span class="string">'%'</span></span><br><span class="line">        <span class="built_in">console</span>.log(count)</span><br><span class="line">        alert(<span class="string">'加载完成'</span>)</span><br><span class="line">        clearInterval(inter)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,<span class="number">100</span>)</span><br><span class="line"><span class="comment">//弹框时 为什么页面上process显示的是99%？</span></span><br></pre></td></tr></table></figure><p>因为前段时间了解过Event-Loop的机制 知道怎么去解决它<br>但是要跟女票讲清楚 还是得在总结总结 毕竟自己也是了解的不深</p><h3 id="单线程-amp-amp-任务队列-amp-amp-Event-Loop"><a href="#单线程-amp-amp-任务队列-amp-amp-Event-Loop" class="headerlink" title="单线程 &amp;&amp; 任务队列 &amp;&amp; Event-Loop"></a>单线程 &amp;&amp; 任务队列 &amp;&amp; Event-Loop</h3><blockquote><p><img src="/assets/blogImg/2017-08-08-js-event-loop.png" alt="eventLoop"><br>图片来自Philip Roberts的演讲《Help, I’m stuck in an event-loop》<br><a href="http://v.youku.com/v_show/id_XMjY5MTkwMDYzNg==.html" target="_blank" rel="noopener">Help, I’m stuck in an event-loop优酷地址</a></p></blockquote><p>首先Js是单线程的 异步是浏览器的事(宿主环境)<br>主线程运行的时候 产生堆(heap)和栈(stack)<br>主线程将运行中碰到的事件推入 执行栈中 开始执行<br>执行结束后 弹出执行栈 推入下一个事件<br>当执行到webAPI时 会将它当做任务源(相当于是分发任务)来执行 并且弹出<br>这时候会产生一个待执行的任务<br>当这个任务满足执行条件时 会进入到任务队列当中<br>当执行栈 为空时 主线程会不断的去调取任务队列中任务 推入 执行栈中执行 这个运行机制就是 Event-Loop<br>而任务队列 可以分为 宏任务队列(macro-task) 和 微任务队列(micro-task)<br>当执行栈为空时 主线程会先去micro-task中调取任务 micro-task为空时才会去 macro-task调取任务执行</p><blockquote><p>触发任务的webAPI<br>DOM(DOCUMENT),AJAX,setTimeOut,setInterval,Promise,process.nextTick,setImmediate<br>其中 加入宏队列中任务 DOM(DOCUMENT),AJAX,setTimeOut,setInterval,setImmediate<br>加入微任务队列中的任务 Promise,process.nextTick</p></blockquote><h3 id="真相"><a href="#真相" class="headerlink" title="真相"></a>真相</h3><p>所以 上面的js在执行中<br>遇到 <code>document.querySelector(&#39;#process&#39;).innerText = count+&#39;%&#39;</code><br>推入执行栈 由于是DOM操作判定为任务源 推出执行栈<br>满足执行条件 加入到 宏任务队列<br>遇到 <code>console.log(count)</code><br>推入执行栈 控制台输出 100 推出执行栈<br>遇到 <code>alert(&#39;加载完成&#39;)</code><br>推入执行栈 开始执行 主线程挂起 等待弹框确认<br>弹窗确认后 推出执行栈<br>遇到 <code>clearInterval(inter)</code><br>推入执行栈 执行 推出执行栈<br>此时执行栈为空 开始调用 任务队列<br>微任务队列为空 直接调用宏任务队列<br>将 <code>document.querySelector(&#39;#process&#39;).innerText = count+&#39;%&#39;</code> dom操作分发的执行任务推入执行栈<br>渲染页面数据 推出执行栈</p><p>所以要解决这个问题 只需要加个setTimeout就能解决问题<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   alert(<span class="string">'加载完成'</span>) </span><br><span class="line">&#125;,<span class="number">0</span>)</span><br></pre></td></tr></table></figure></p><p>这里有个问题就是 碰到这个webAPI时 并不是把 这些webAPI推入任务队列<br>在执行栈中 这些webAPI还是立即执行的 是把它分发的任务 推入任务队列<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//譬如</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'log'</span>)</span><br><span class="line">&#125;,<span class="number">1000</span>)</span><br><span class="line"><span class="comment">//setTimeOut 会立即进入执行栈 并且执行</span></span><br><span class="line"><span class="comment">//它的第一个参数就是他要分发的任务 会在满足它的分发条件后进入任务队列 </span></span><br><span class="line"><span class="comment">// 上例就是1000ms后进入任务队列</span></span><br></pre></td></tr></table></figure></p><p>再看下面的两个例子<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//demo 1</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>)</span>&#123;<span class="built_in">console</span>.log(<span class="number">8</span>);&#125;,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">5</span>);</span><br><span class="line">    <span class="built_in">Promise</span>.resolve().then(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">7</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">6</span>)</span><br><span class="line">&#125;,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">reslove</span>)</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">     reslove()</span><br><span class="line">&#125;).then(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="number">4</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//demo 2</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">   setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="number">2.2</span>+x)</span><br><span class="line">   &#125;,<span class="number">0</span>)</span><br><span class="line">   <span class="built_in">Promise</span>.resolve().then(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="number">2.1</span>+x);</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="number">1</span>+x)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    A(<span class="string">'B'</span>)</span><br><span class="line">&#125;</span><br><span class="line">A(<span class="string">'A'</span>)</span><br><span class="line">B()</span><br></pre></td></tr></table></figure></p><p>联系上面的分析<br>第一题的输出 应该是 1 2 3 4 5 6 7 8</p><p>第二题的输出 应该是 1A 1B 2.1A 2.1B 2.2A 2.2B</p><p>写在一块输出 应该是 1 2 1A 1B 3 4 2.1A 2.1B 5 6 7 2.2A 2.2B 8</p><blockquote><p>参考文章<br><a href="http://www.cnblogs.com/woodyblog/p/6061671.html" target="_blank" rel="noopener">js的单线程和异步</a><br><a href="http://www.ruanyifeng.com/blog/2014/10/event-loop.html" target="_blank" rel="noopener">JavaScript 运行机制详解：再谈Event Loop</a><br><a href="http://www.jianshu.com/p/12b9f73c5a4f" target="_blank" rel="noopener">前端基础进阶（十二）：深入核心，详解事件循环机制</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结一下 浏览器中js事件运行机制&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Js异步编程</title>
    <link href="//fenghou.site/2017/08/02/2017-08-02-js-promise/"/>
    <id>//fenghou.site/2017/08/02/2017-08-02-js-promise/</id>
    <published>2017-08-02T02:19:25.000Z</published>
    <updated>2018-06-11T06:28:24.709Z</updated>
    
    <content type="html"><![CDATA[<p>异步 总结<br><a id="more"></a></p><h3 id="promise"><a href="#promise" class="headerlink" title="promise"></a>promise</h3><p>通过简易实现 promise 了解原理<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> PENDING = <span class="string">'PENDING'</span></span><br><span class="line">    <span class="keyword">const</span> FULFILLED = <span class="string">'FULFILLED'</span></span><br><span class="line">    <span class="keyword">const</span> REJECTED = <span class="built_in">Symbol</span>();</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">TP</span>(<span class="params">fn</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> state = PENDING</span><br><span class="line">        <span class="keyword">let</span> value = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">let</span> handel = []</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fulfill</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">            state = FULFILLED</span><br><span class="line">            value = result</span><br><span class="line">            handel.forEach(next)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">resolve</span>(<span class="params">result,idx</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> then = result &amp;&amp; result.then &amp;&amp; <span class="keyword">typeof</span> result.then == <span class="string">'function'</span> ? result.then : <span class="literal">null</span>;</span><br><span class="line">            <span class="comment">// let then = typeof result</span></span><br><span class="line">            <span class="keyword">if</span> (then) &#123;</span><br><span class="line">                then.bind(result)(resolve)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            fulfill(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// console.log(result)</span></span><br><span class="line">            <span class="comment">// console.log('resolve~~~',idx)</span></span><br><span class="line">            <span class="comment">// fulfill(result)</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">next</span>(<span class="params">&#123;onFulfill&#125;,idx</span>)</span>&#123;</span><br><span class="line">            <span class="comment">// console.log('next~~~',idx)</span></span><br><span class="line">            <span class="keyword">switch</span> (state)&#123;</span><br><span class="line">                <span class="keyword">case</span> FULFILLED:</span><br><span class="line">                    onFulfill &amp;&amp; onFulfill(value)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">case</span> PENDING:</span><br><span class="line">                    handel.push(&#123;onFulfill&#125;)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.then = <span class="function"><span class="keyword">function</span>(<span class="params">onFulfill,idx</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> TP(<span class="function">(<span class="params">resolve</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="comment">// console.log('then~~~',idx)</span></span><br><span class="line">                next(&#123;</span><br><span class="line">                    onFulfill:<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">                        resolve(onFulfill(val),idx)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,idx)</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        fn(resolve)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> TP(<span class="function">(<span class="params">resolve</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// console.log('TP-1')</span></span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            resolve(<span class="string">'TP-Resolve1'</span>,<span class="number">0</span>)</span><br><span class="line">        &#125;,<span class="number">2000</span>)</span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">s</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'TP-1'</span>,s)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> TP(<span class="function">(<span class="params">resolve</span>)=&gt;</span>&#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                resolve(<span class="string">'TP-Resolve2'</span>,<span class="number">0</span>)</span><br><span class="line">            &#125;,<span class="number">2000</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,<span class="number">1</span>).then(<span class="function">(<span class="params">s</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'TP-2'</span>,s)</span><br><span class="line">    &#125;,<span class="number">2</span>).then(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'---END---'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到 promise 回调是通过调用 promise中的 rosolve去触发回调函数的<br>关于promise状态的改变 只会触发一次 由pedding 变为 resolve 或者 reject<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> start = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">reslove,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    reslove()</span><br><span class="line">    reject()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//即只会执行 reslove</span></span><br></pre></td></tr></table></figure></p><p>关于异常的捕获 在声明时的异常可以在 reject或者catch中捕获<br>而在then中的异常只能在catch中捕获<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> start = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">reslove</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'我能在Reject中和catch中捕获'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">start.then(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'我能在catch中捕获'</span>)</span><br><span class="line">&#125;,()=&gt;&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'我只能捕获new Promise()中的异常'</span>)</span><br><span class="line">&#125;).catch(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'我能捕获所有异常 如果在reject中捕获了 那我就不捕获了'</span>)    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>Promise的嵌套 then可以返回的个promise对象支持链式回调<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> A = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>)=&gt;</span>&#123;</span><br><span class="line">    resolve(<span class="string">'A'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> B = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>)=&gt;</span>&#123;</span><br><span class="line">    resolve(<span class="string">'B'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">A.then(<span class="function">(<span class="params">rs</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(rs)</span><br><span class="line">    <span class="keyword">return</span> B</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">rs</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(rs)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//而不是</span></span><br><span class="line">A.then(<span class="function">(<span class="params">rs</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(rs)</span><br><span class="line">    B.then(<span class="function">(<span class="params">rs</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(rs)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h3 id="generator"><a href="#generator" class="headerlink" title="generator"></a>generator</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">genT</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>,_len = arr.length;i&lt;_len;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> arr[i] === <span class="string">'number'</span>)&#123;</span><br><span class="line">            <span class="keyword">yield</span> arr[i]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">yield</span>* genT(arr[i])</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> _arr = [<span class="number">1</span>,<span class="number">2</span>,[<span class="number">3</span>,<span class="number">4</span>]]</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> g <span class="keyword">of</span> genT(_arr))&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(g)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="async-await"><a href="#async-await" class="headerlink" title="async await"></a>async await</h3><p>可以理解为generator 的语法糖<br>实现过程将generator 的表述移到语法内部实现(await)<br>async函数返回一个 Promise 对象，可以使用then方法添加回调函数<br>await 后面一般跟promise 如果不是的话会执行promise.reslove()<br>await 只能作用在 async方法中</p><p>譬如<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>().then(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">await</span> start()</span><br><span class="line">&#125;)</span><br><span class="line">[].forEach(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">await</span> start()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//都会报错</span></span><br></pre></td></tr></table></figure></p><p>await 返回的应该是 一个promise.resolve()中返回的数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> awaitLoad = <span class="function"><span class="params">()</span>=&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">reslove</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">    reslove(arr)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> start = <span class="keyword">async</span> ()=&gt;&#123;</span><br><span class="line">    <span class="keyword">var</span> load = <span class="keyword">await</span> awaitLoad()</span><br><span class="line">    <span class="built_in">console</span>.log(load)</span><br><span class="line">    <span class="comment">//[1,2,3,4,5]</span></span><br><span class="line">    <span class="keyword">return</span> load</span><br><span class="line">&#125;</span><br><span class="line">start().then(<span class="function">(<span class="params">rs</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(rs)</span><br><span class="line">    <span class="comment">//[1,2,3,4,5]</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>关于异常返回从处理<br>如果 await 后面的promise异常执行了reject 那么 后面的命令不再执行<br>因此要把问题抛出来<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> start = <span class="keyword">async</span> ()=&gt;&#123;</span><br><span class="line">    <span class="comment">//一种写法</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> fn()</span><br><span class="line">    &#125; <span class="keyword">catch</span>(err)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//第二种</span></span><br><span class="line">    <span class="keyword">await</span> fn().catch(<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err)</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="避免async-await-地狱"><a href="#避免async-await-地狱" class="headerlink" title="避免async/await 地狱"></a>避免async/await 地狱</h3><p>promise 有一个好玩的特性，<br>你可以在一行代码中得到一个 promise 对象，<br>在另一行代码中得到这个 promise 的执行结果。<br>这是逃离 async/await 地狱的关键。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> pizzaData = <span class="keyword">await</span> getPizzaData()</span><br><span class="line">    <span class="keyword">const</span> drinkData = <span class="keyword">await</span> getDrinkData()</span><br><span class="line">    <span class="keyword">const</span> chosenPizza = choosePizza()</span><br><span class="line">    <span class="keyword">const</span> chosenDrink = chooseDrink()</span><br><span class="line">    <span class="keyword">await</span> addPizzaToCart(chosenPizza)</span><br><span class="line">    <span class="keyword">await</span> addDrinkTOCart(chosenDrink)</span><br><span class="line">    orderItems()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">orderItems</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> items = <span class="keyword">await</span> getCartItems()</span><br><span class="line">    <span class="keyword">const</span> noOfItems = items.length</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;noOfItems;i++)&#123;</span><br><span class="line">        <span class="keyword">await</span> sendRequest(items[i])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>多余的等待 drinkData 不需要多余的等待</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">selectPizza</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> pizzaData = <span class="keyword">await</span> getPizzaData()</span><br><span class="line">    <span class="keyword">const</span> chonsePizza = choosePizza()</span><br><span class="line">    <span class="keyword">await</span> addPizzaToCart()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">selectDrink</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> drinkData = <span class="keyword">await</span> getDrinkData()</span><br><span class="line">    <span class="keyword">const</span> chosenDrink = chooseDrink()</span><br><span class="line">    <span class="keyword">await</span> addDrinkToCart()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> pizzaPromise = selectPizza()</span><br><span class="line">    <span class="keyword">const</span> drinkPromise = selectDrink()</span><br><span class="line">    <span class="keyword">await</span> pizzaPromise</span><br><span class="line">    <span class="keyword">await</span> drinkPromise</span><br><span class="line">    orderItems()</span><br><span class="line">    <span class="comment">//或者直接promise.all</span></span><br><span class="line">    <span class="comment">// Promise.all([selectPizza(),selectDrink()]).then(orderItems)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">orderItems</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> items = <span class="keyword">await</span> getCartItems()</span><br><span class="line">    <span class="keyword">const</span> noOfItems = items.length</span><br><span class="line">    <span class="keyword">let</span> promises = []</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;noOfItems;i++)&#123;</span><br><span class="line">        <span class="keyword">const</span> orderPromise = sendRequest(items[i])</span><br><span class="line">        promises.push(orderPromise)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> <span class="built_in">Promise</span>.all(promises)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://juejin.im/post/5aefbb48f265da0b9b073c40?utm_medium=fe&amp;utm_source=weixinqun" target="_blank" rel="noopener">如何逃离 async/await 地狱</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;异步 总结&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Vue事件</title>
    <link href="//fenghou.site/2017/07/20/2017-07-20-vue-event/"/>
    <id>//fenghou.site/2017/07/20/2017-07-20-vue-event/</id>
    <published>2017-07-20T02:18:56.000Z</published>
    <updated>2018-06-11T06:28:24.709Z</updated>
    
    <content type="html"><![CDATA[<p>vue 中通过[$on]注册事件[$emit]来触发事件<br>这里来模拟一下它内部的实现机制<br>超简易<br><a id="more"></a></p><h3 id="初始化Vue"><a href="#初始化Vue" class="headerlink" title="初始化Vue"></a>初始化Vue</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">V</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>._init()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initMixin</span>(<span class="params">v</span>)</span>&#123;</span><br><span class="line">    v.prototype._init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        initEvent(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">initMixin(V)</span><br></pre></td></tr></table></figure><h3 id="初始化事件"><a href="#初始化事件" class="headerlink" title="初始化事件"></a>初始化事件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initEvent</span>(<span class="params">v</span>)</span>&#123;</span><br><span class="line">    v._events = <span class="built_in">Object</span>.create(<span class="literal">null</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="混合事件"><a href="#混合事件" class="headerlink" title="混合事件"></a>混合事件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">eventsMixin</span>(<span class="params">v</span>)</span>&#123;</span><br><span class="line">    v.prototype.$on = <span class="function"><span class="keyword">function</span>(<span class="params">name,fn</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>._events[name] = fn</span><br><span class="line">    &#125;</span><br><span class="line">    v.prototype.$emit = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> cbs = <span class="keyword">this</span>._events[event]</span><br><span class="line">        <span class="keyword">let</span> args = toArray(<span class="built_in">arguments</span>,<span class="number">1</span>)</span><br><span class="line">        cbs.apply(<span class="keyword">this</span>,args)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">eventsMixin(V)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toArray</span> (<span class="params">list, start</span>) </span>&#123;</span><br><span class="line">    start = start || <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> i = list.length - start</span><br><span class="line">    <span class="keyword">const</span> ret = <span class="keyword">new</span> <span class="built_in">Array</span>(i)</span><br><span class="line">    <span class="keyword">while</span> (i--) &#123;</span><br><span class="line">        ret[i] = list[i + start]</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> v = <span class="keyword">new</span> V()</span><br><span class="line">v.$on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(msg)</span><br><span class="line">&#125;)</span><br><span class="line">v.$emit(<span class="string">'click'</span>,<span class="string">'emit'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vue 中通过[$on]注册事件[$emit]来触发事件&lt;br&gt;这里来模拟一下它内部的实现机制&lt;br&gt;超简易&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
      <category term="vue" scheme="//fenghou.site/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置https</title>
    <link href="//fenghou.site/2017/07/12/2017-07-12-nginx-ssl/"/>
    <id>//fenghou.site/2017/07/12/2017-07-12-nginx-ssl/</id>
    <published>2017-07-12T09:40:27.000Z</published>
    <updated>2018-06-11T06:28:24.708Z</updated>
    
    <content type="html"><![CDATA[<p>最近刚续费阿里云服务器，肉疼中。。。<br>今天先尝试了下 把http改成https 在这里记录一下<br><a id="more"></a></p><h3 id="Http和Https"><a href="#Http和Https" class="headerlink" title="Http和Https"></a>Http和Https</h3><p>关于http和https的差别 就不说了<br>反正不是只多了个s就对了~~</p><h3 id="Linux中配置nginx"><a href="#Linux中配置nginx" class="headerlink" title="Linux中配置nginx"></a>Linux中配置nginx</h3><p>服务器上的项目是通过nginx跑起来的<br>所以主要还是围绕着nginx配置展开</p><blockquote><p>ssl on ;<br>我服务器上nginx配置编译的时候没有把ssl的模块编译进去<br>所以在这里报了缺少ssl指令的错误</p></blockquote><p>so 需要重新编译nginx<br>找到nginx下载目录 没了就就重新下~~</p><blockquote><p>./configure –with-http_ssl_module<br>很好 如果服务器上面已经安装了openssl 那么基本可以编译通过<br>yum install openssl openssl-devel<br>恩 如果编译的时候没有加载默认的 那么就需要手动配置<br>./configure –with-http_ssl_module –with-openssl=/usr/bin/openssl<br>敲黑板 这么写 编译的时候openssl会去从–with-openssl 那里取<br>所以这里必须是源码目录 不应该安装目录</p></blockquote><p>补充：填了安装目录 编译失败 竟然也找到了编译通过的方法。。<br>修改方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># vi auto/lib/openssl/conf</span><br><span class="line">CORE_INCS=<span class="string">"$CORE_INCS $OPENSSL/openssl/include"</span></span><br><span class="line">CORE_DEPS=<span class="string">"$CORE_DEPS $OPENSSL/openssl/include/openssl/ssl.h"</span></span><br><span class="line">CORE_LIBS=<span class="string">"$CORE_LIBS $OPENSSL/openssl/lib/libssl.a"</span></span><br><span class="line">CORE_LIBS=<span class="string">"$CORE_LIBS $OPENSSL/openssl/lib/libcrypto.a"</span></span><br><span class="line">改为：</span><br><span class="line">CORE_INCS=<span class="string">"$CORE_INCS $OPENSSL/include"</span></span><br><span class="line">CORE_DEPS=<span class="string">"$CORE_DEPS $OPENSSL/include/openssl/ssl.h"</span></span><br><span class="line">CORE_LIBS=<span class="string">"$CORE_LIBS $OPENSSL/lib/libssl.a"</span></span><br><span class="line">CORE_LIBS=<span class="string">"$CORE_LIBS $OPENSSL/lib/libcrypto.a"</span></span><br></pre></td></tr></table></figure></p><p>但是 make 的时候还是会报错 </p><p>make 打包成功后会在nginx源码目录的objs下生成nginx</p><blockquote><p>cp objs/nginx nginx配置目录/sbin<br>拷贝覆盖 即可</p></blockquote><p>然后配置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">listen <span class="number">443</span>;</span><br><span class="line">ssl on;</span><br><span class="line">ssl_certificate /---------------------.pem;</span><br><span class="line">ssl_certificate_key /-----------------.key;</span><br><span class="line">ssl_session_timeout <span class="number">5</span>m;</span><br><span class="line">ssl_ciphers -----------------------------------------------;</span><br><span class="line">ssl_protocols ------------------------;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br></pre></td></tr></table></figure></p><p>配置ssl证书 基本就ok了</p><blockquote><p>sbin/nginx -t<br>  nginx: [emerg] getpwnam(“www”) failed</p></blockquote><p>错误的原因是没有创建www这个用户 解决办法</p><blockquote><p>1 在nginx.conf中 把user nobody的注释去掉既可<br>2 /usr/sbin/groupadd -f www<br>    /usr/sbin/useradd -g www www</p></blockquote><h3 id="关于证书"><a href="#关于证书" class="headerlink" title="关于证书"></a>关于证书</h3><p>生成步骤 百度。。。</p><blockquote><p>startSSL</p></blockquote><p>注册申请 生成ctr…<br>捣腾许久 终于配置成功 微信打开失败 不被认证</p><blockquote><p>Symantec Ltd</p></blockquote><p>在阿里云 免费申请ssl证书<br>nginx如果配置是全局https<br>受认证只能是 申请ssl时填写的域名<br>xx.xx 申请<br>xx.xx.xx 不被认证</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>不想搞运维的前端不是个好架构</p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>今天下班 被分配到 小黑屋封闭开发<br>没空调。。</p><p><a href="https://www.cnblogs.com/jimisun/p/8057156.html" target="_blank" rel="noopener">nginx安装</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近刚续费阿里云服务器，肉疼中。。。&lt;br&gt;今天先尝试了下 把http改成https 在这里记录一下&lt;br&gt;
    
    </summary>
    
    
      <category term="http" scheme="//fenghou.site/tags/http/"/>
    
      <category term="nginx" scheme="//fenghou.site/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>谈谈我的vue项目</title>
    <link href="//fenghou.site/2017/06/25/2017-06-25-vue-modules/"/>
    <id>//fenghou.site/2017/06/25/2017-06-25-vue-modules/</id>
    <published>2017-06-25T12:17:35.000Z</published>
    <updated>2018-06-11T06:28:24.708Z</updated>
    
    <content type="html"><![CDATA[<p>Vue相关-整理中<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vue相关-整理中&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="//fenghou.site/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>XX云音乐</title>
    <link href="//fenghou.site/2017/06/20/2017-06-20-node-simple-netease-cloud-music/"/>
    <id>//fenghou.site/2017/06/20/2017-06-20-node-simple-netease-cloud-music/</id>
    <published>2017-06-20T08:30:19.000Z</published>
    <updated>2018-06-11T06:28:24.708Z</updated>
    
    <content type="html"><![CDATA[<p>整理中<br><a id="more"></a></p><p>前端 React<br>数据库 暂时不用<br>服务端 express —&gt; koa 迁移<br>API    (网易云Node音乐API)[<a href="https://binaryify.github.io/NeteaseCloudMusicApi/#/]" target="_blank" rel="noopener">https://binaryify.github.io/NeteaseCloudMusicApi/#/]</a></p><p>redux 中的 dispatch 行为会被所有的reducer 捕获<br>react-redux 的 connect 中 传入的 state 会混合在 组件的 props<br>传入的action 如果有值 会 传入调用 调用dispatch()的方法 如果不传 则会 传入 dispatch方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> connect(</span><br><span class="line">    (state)=&gt;&#123;</span><br><span class="line">        <span class="keyword">let</span> &#123;count&#125; = state.User</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            count</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    (dispatch) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> type  = &#123; <span class="attr">type</span>: <span class="string">'CAT'</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            onIncreaseClick: <span class="function"><span class="params">()</span> =&gt;</span> dispatch(type)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">)(Index)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">constructor</span>()&#123;</span><br><span class="line">        <span class="keyword">super</span>()</span><br><span class="line">    &#125;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; count, onIncreaseClick &#125; = <span class="keyword">this</span>.props</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;span&gt;&#123;count&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">                &lt;button onClick=&#123;onIncreaseClick&#125;&gt;Increase&lt;/</span>button&gt;</span><br><span class="line">          &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/如果不传第二个参数</span></span><br><span class="line"><span class="regexp">        const &#123; count, dispatch &#125; = this.props</span></span><br><span class="line"><span class="regexp">                </span></span><br><span class="line"><span class="regexp">                return (</span></span><br><span class="line"><span class="regexp">                    &lt;div&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;span&gt;&#123;count&#125;&lt;/</span>span&gt;</span><br><span class="line">                        &lt;button onClick=&#123;()=&gt;&#123;</span><br><span class="line">                            <span class="keyword">const</span> type  = &#123; <span class="attr">type</span>: <span class="string">'CAT'</span> &#125;</span><br><span class="line">                            dispatch(type)</span><br><span class="line">                        &#125;&#125;&gt;Increase&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">                  &lt;/</span>div&gt;</span><br><span class="line">                )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>react 中 默认props<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//way A</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> defaultProps = &#123; <span class="attr">demo</span> : <span class="number">12</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// way B</span></span><br><span class="line">Index.defaultProps = &#123; <span class="attr">demo</span> : <span class="number">12</span> &#125;</span><br></pre></td></tr></table></figure></p><p>react 中的 props 验证<br>React.PropTypes 自 React v15.5 起已弃用。请使用 prop-types 库代替<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Demo.propTypes = &#123;</span><br><span class="line">    name:  PropTypes.string.isRequired</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 是propTypes 不是PropTypes 也不是 propsTypes</span></span><br><span class="line"><span class="comment">// 是propTypes 不是PropTypes 也不是 propsTypes</span></span><br><span class="line"><span class="comment">// 是propTypes 不是PropTypes 也不是 propsTypes</span></span><br></pre></td></tr></table></figure></p><h3 id="关于路由"><a href="#关于路由" class="headerlink" title="关于路由"></a>关于路由</h3><p>react-router 版本 &gt; 4.0<br>exact 全匹配<br>Switch 匹配一个后不向下匹配</p><p><link to="/a/b"> 下面两个都会匹配</p><p><route path="/a"></route></p><p><route path="/a/b"></route><br>可以通过 exact 和 Switch 解决</p><p>strict 匹配链接的斜杠<br>true  /one 只匹配 /one<br>false /one 匹配  /one /one/ /one/two<br>Route component={XXX} render={()=&gt; XXX}</p><p>children 不管path是否被匹配 都会映射</p><p>默认是链接渲染</p><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>react react-router react-redux </p><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p>koa express pm2</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理中&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
      <category term="react" scheme="//fenghou.site/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>前端的请求</title>
    <link href="//fenghou.site/2017/05/17/2017-05-17-content-type/"/>
    <id>//fenghou.site/2017/05/17/2017-05-17-content-type/</id>
    <published>2017-05-17T03:28:09.000Z</published>
    <updated>2018-06-11T06:28:24.708Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="request-amp-amp-response"><a href="#request-amp-amp-response" class="headerlink" title="request &amp;&amp; response"></a>request &amp;&amp; response</h3><h3 id="content-type"><a href="#content-type" class="headerlink" title="content-type"></a>content-type</h3><blockquote><p>参考<br><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html" target="_blank" rel="noopener">跨域资源共享 CORS 详解</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;request-amp-amp-response&quot;&gt;&lt;a href=&quot;#request-amp-amp-response&quot; class=&quot;headerlink&quot; title=&quot;request &amp;amp;&amp;amp; respons
      
    
    </summary>
    
    
      <category term="http" scheme="//fenghou.site/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>浅析vue数据响应</title>
    <link href="//fenghou.site/2017/04/15/2017-04-15-vue-observe-watch/"/>
    <id>//fenghou.site/2017/04/15/2017-04-15-vue-observe-watch/</id>
    <published>2017-04-15T12:16:29.000Z</published>
    <updated>2018-06-11T06:28:24.708Z</updated>
    
    <content type="html"><![CDATA[<p>Vue相关-整理中<br><a id="more"></a><br>模板解析 指令解析<br>数据劫持过程中<br>监听 set 和 get<br>get 过程时 判断是否在模板解析时用到数据<br>通知 Dep 收集 当前 属性 的监听<br>watch 中 往 dep中添加 要收集的订阅</p><p>set 时<br>Dep 通知 watch 可以发布订阅<br>watch 发布订阅  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vue相关-整理中&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="//fenghou.site/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Nginx在前端</title>
    <link href="//fenghou.site/2017/03/31/2017-03-31-nginx-proxy-vue/"/>
    <id>//fenghou.site/2017/03/31/2017-03-31-nginx-proxy-vue/</id>
    <published>2017-03-31T01:55:58.000Z</published>
    <updated>2018-06-11T06:28:24.707Z</updated>
    
    <content type="html"><![CDATA[<p>总结一些我碰到的Nginx在前端的应用<br><a id="more"></a></p><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><p>nginx可以用来当做静态文件的服务器<br>如 本文所在的博客 就是通过nginx来部署的<br>通过root来指定 访问的静态资源的目录<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen <span class="number">443</span>;</span><br><span class="line">       ssl on;</span><br><span class="line">       ssl_certificate /admin/ali-ssl/fenghou_site.pem;</span><br><span class="line">       ssl_certificate_key /admin/ali-ssl/fenghou_site.key;</span><br><span class="line">       ssl_session_timeout <span class="number">5</span>m;</span><br><span class="line">       ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">       ssl_protocols TLSv1 TLSv1<span class="number">.1</span> TLSv1<span class="number">.2</span>;</span><br><span class="line">       ssl_prefer_server_ciphers on;</span><br><span class="line">       server_name fenghou.site;</span><br><span class="line">       root /admin/fenghou/www/aliyun-blog/hexo;         </span><br><span class="line">       location / &#123;</span><br><span class="line">                index index.html;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>前后端分离的项目中<br>nginx除了起到服务器的作用<br>还可以用来做请求代理 解决一系列的跨域问题<br>说道代理 有的叫正向代理 有的叫反向代理<br>那么是怎么区分的呢？ 很简单<br>正向代理 服务器不知道 真实的用户<br>反向代理 用户不知道 真实的服务器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen <span class="number">80</span>;</span><br><span class="line">       server_name demo.fenghou.site;</span><br><span class="line">       root /admin/fenghou/www/demo/view/dist;</span><br><span class="line">        location / &#123;</span><br><span class="line">            index index.html;</span><br><span class="line">        &#125;</span><br><span class="line">        location /demoAPI/ &#123;</span><br><span class="line">            proxy_pass http:<span class="comment">//localhost:4000;</span></span><br><span class="line">        &#125;</span><br><span class="line">        location /logAPI/ &#123;</span><br><span class="line">            proxy_pass http:<span class="comment">//localhost:5000/;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结一些我碰到的Nginx在前端的应用&lt;br&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="//fenghou.site/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>骗到手的第八年</title>
    <link href="//fenghou.site/2017/03/23/2017-03-23-love/"/>
    <id>//fenghou.site/2017/03/23/2017-03-23-love/</id>
    <published>2017-03-23T02:22:59.000Z</published>
    <updated>2018-06-11T06:28:24.707Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="https://music.163.com/outchain/player?type=2&id=406346853&auto=0&height=66"></iframe><br><a id="more"></a></p><p>八年<br>九十六个月<br>两千九百二十二天</p><p><img src="/assets/blogImg/love/IMG_0053.PNG" alt="love"></p><p>那会还很瘦的陈妞妞(当然现在也不怎么胖)<br><img src="/assets/blogImg/love/IMG_0045.JPG" alt="love"></p><p><img src="/assets/blogImg/love/IMG_0051.JPG" alt="love"><br>(是的，陈妞妞现在的形象)</p><p>当陈妞妞意识到自己变胖了以后<br>深深的自责，忏悔着<br>but~~</p><p><img src="/assets/blogImg/love/IMG_0040.JPG" alt="love"></p><p>高中那会<br>我跟陈妞妞说<br>你负责貌美如花<br>我负责赚钱养家</p><p><img src="/assets/blogImg/love/IMG_0047.JPG" alt="love"><br>(I Love You)</p><p>现在<br>我正在努力<br>陈妞妞不仅仅是花<br>还兼职当上了小仙女<br>~~~</p><p><img src="/assets/blogImg/love/IMG_0054.GIF" alt="love"></p><p>多年后<br>幼儿园<br>很多小朋友争得面红耳赤<br>“我妈是老师！”<br>“我爸是警察！”<br>“我爸是局长！”</p><p>而我家小孩</p><p>云淡风轻 一脸不屑<br>“呵，我妈可是仙女！”</p><p><img src="/assets/blogImg/love/IMG_0042.JPG" alt="love"><br>(该打赏打赏，都别客气)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;https://music.163.com/outchain/player?type=2&amp;id=406346853&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="//fenghou.site/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>此去经年</title>
    <link href="//fenghou.site/2017/03/22/2017-03-21-diary/"/>
    <id>//fenghou.site/2017/03/22/2017-03-21-diary/</id>
    <published>2017-03-22T06:05:31.000Z</published>
    <updated>2018-06-11T06:28:24.707Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="https://music.163.com/outchain/player?type=2&id=187908&auto=0&height=66"></iframe><br><a id="more"></a></p><p>昨天跟同事一起去打球<br>还没开始打，热身阶段投了会儿球<br>完了，跟跑完1000米一样一样的<br>后来还硬是打了快俩小时<br>今天全身酸爽的不行<br>连走路都走不顺</p><p>唉 老是真的老了<br>想想上次打球<br>还是去年毕业前最后的寝室南北对抗赛</p><p><img src="/assets/blogImg/2017-03-21-basekitball.jpg" alt="脆皮鸡"><br>(拍照那小子，问什么不把我照进去)</p><p>那会虽然体重跟现在差了略微几斤<br>但是照样能跑能跳</p><p>大学不是一点儿好处没有<br>它能洗去人的浮华<br>同时让人意志消磨<br>多愁善感<br>酒量大增(有吗)</p><p><img src="/assets/blogImg/2017-03-21-study.jpg" alt="脆皮鸡"></p><p><img src="/assets/blogImg/2017-03-21-IMG_0048.jpg" alt="脆皮鸡"><br>真正的成长或许就是<br>你开始低下了头<br>无论在行走还是坐着的时候<br>当头颅微微低下成为你日常生活中的主要姿势<br>你就真的长大了<br>总仰着脑袋的一定小屁孩<br>以为自己很牛x<br>其实差远了<br><img src="/assets/blogImg/2017-03-21-IMG_0050.jpg" alt="脆皮鸡"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;https://music.163.com/outchain/player?type=2&amp;id=187908&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="//fenghou.site/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>基于Vue的CPS后台</title>
    <link href="//fenghou.site/2017/02/27/2017-02-27-%E5%9F%BA%E4%BA%8EVue%E7%9A%84CPS%E5%90%8E%E5%8F%B0/"/>
    <id>//fenghou.site/2017/02/27/2017-02-27-基于Vue的CPS后台/</id>
    <published>2017-02-27T11:17:43.000Z</published>
    <updated>2018-06-11T06:28:24.707Z</updated>
    
    <content type="html"><![CDATA[<p>上周结束了在想去的最后一个项目<br>公众号联盟的推广后台<br><a id="more"></a></p><h3 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h3><p>vue<br>应该不需要介绍<br>vuex<br>巴拉巴拉巴拉<br>vue-router<br>。。。。<br>webpack<br>这次用的版本是2.x跟1.x的配置还是有点出入</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>将整个后台按功能抽离成单独的模块<br>header 模块<br>footer 模块<br>menu 模块<br>page 分页模块<br>and 具体功能模块<br>balabalabalabala~~~<br>其实也没什么好说的。。。</p><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><p>还是有不少值得注意的地方的</p><blockquote><p>路由切换中页面的刷新<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//监听路由变化</span></span><br><span class="line">watch: &#123;</span><br><span class="line">      <span class="string">'$route'</span> (to, <span class="keyword">from</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (to.fullPath !== <span class="keyword">from</span>.fullPath) &#123;</span><br><span class="line">          <span class="keyword">this</span>.pageInt() <span class="comment">// 刷新处理</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>store交互数据的延迟<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回异步操作</span></span><br><span class="line"><span class="comment">//actions</span></span><br><span class="line">getOrder (&#123;commit&#125;, data) &#123;</span><br><span class="line">    <span class="keyword">const</span> opts = &#123;</span><br><span class="line">      type: <span class="string">'POST'</span>,</span><br><span class="line">      url: <span class="string">'/union/order/list'</span>,</span><br><span class="line">      data: data</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fetchLoading(commit, <span class="string">'SET_ORDER'</span>, opts)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> fetchLoading = <span class="function">(<span class="params">commit, fn, opts</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    beginLoading(commit)</span><br><span class="line">    Util.fetch(opts)</span><br><span class="line">      .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        stopLoading(commit)</span><br><span class="line">        <span class="keyword">if</span> (fn) &#123;</span><br><span class="line">          commit(fn, response)</span><br><span class="line">          resolve()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          resolve(response)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, error =&gt; &#123;</span><br><span class="line">        stopLoading(commit)</span><br><span class="line">        <span class="keyword">const</span> config = &#123;</span><br><span class="line">          isShow: <span class="literal">true</span>,</span><br><span class="line">          isToast: <span class="literal">true</span>,</span><br><span class="line">          toastConfig: &#123;</span><br><span class="line">            toastMsg: <span class="string">'系统繁忙,请稍后再试'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        commit(<span class="string">'SET_POP'</span>, config)</span><br><span class="line">        <span class="built_in">console</span>.error(error)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//模块中调用actions中方法</span></span><br><span class="line"><span class="keyword">this</span>.getOrder(opts)</span><br><span class="line">          .then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.getPaging(opts)</span><br><span class="line">          &#125;)</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>估计这周就离职了<br>额，就这样吧</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上周结束了在想去的最后一个项目&lt;br&gt;公众号联盟的推广后台&lt;br&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="//fenghou.site/tags/webpack/"/>
    
      <category term="vue" scheme="//fenghou.site/tags/vue/"/>
    
      <category term="es6" scheme="//fenghou.site/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>Weex</title>
    <link href="//fenghou.site/2017/02/21/2017-02-21-Weex/"/>
    <id>//fenghou.site/2017/02/21/2017-02-21-Weex/</id>
    <published>2017-02-21T11:17:14.000Z</published>
    <updated>2018-06-11T06:28:24.707Z</updated>
    
    <content type="html"><![CDATA[<p>整理中<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理中&lt;br&gt;
    
    </summary>
    
    
      <category term="vue" scheme="//fenghou.site/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Rax</title>
    <link href="//fenghou.site/2017/02/17/2017-02-17-Rax/"/>
    <id>//fenghou.site/2017/02/17/2017-02-17-Rax/</id>
    <published>2017-02-17T11:16:59.000Z</published>
    <updated>2018-06-11T06:28:24.706Z</updated>
    
    <content type="html"><![CDATA[<p>整理中<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理中&lt;br&gt;
    
    </summary>
    
    
      <category term="react" scheme="//fenghou.site/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>PReact</title>
    <link href="//fenghou.site/2017/02/13/2017-02-13-PReact/"/>
    <id>//fenghou.site/2017/02/13/2017-02-13-PReact/</id>
    <published>2017-02-13T11:16:39.000Z</published>
    <updated>2018-06-11T06:28:24.706Z</updated>
    
    <content type="html"><![CDATA[<p>React相关-整理中<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;React相关-整理中&lt;br&gt;
    
    </summary>
    
    
      <category term="react" scheme="//fenghou.site/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>wx签名出错-URL</title>
    <link href="//fenghou.site/2017/02/13/2017-02-13-wx%E7%AD%BE%E5%90%8D%E5%87%BA%E9%94%99-URL/"/>
    <id>//fenghou.site/2017/02/13/2017-02-13-wx签名出错-URL/</id>
    <published>2017-02-13T11:16:16.000Z</published>
    <updated>2018-06-11T06:28:24.706Z</updated>
    
    <content type="html"><![CDATA[<p>上周调试wx收货地址的时候<br>碰到一个签名出错的问题<br>invalid signature<br><a id="more"></a></p><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>为了增强用户体验<br>在下单页选择收货地址的时候<br>如果是微信用户<br>新增添加微信地址的功能</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>调用wxAPI获取地址信息<br>转换地址信息格式<br>将新地址保存</p><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>wx.openAddress方法中<br>cancel回调是取消选项</p><p>wx地址选择中北京天津等自治区<br>新增县选项<br>北京市 北京市 朝阳区<br>北京市 县 密云县</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>因为方便测试<br>打开页面的方式都是通过<br>打开指定连接的形式<br><a href="http://www.xiangqu.com/order/submit/view?skuMap[q90060]=1" target="_blank" rel="noopener">http://www.xiangqu.com/order/submit/view?skuMap[q90060]=1</a><br>一切OK<br>但是从商品详情页进入<br>在选择SKU下单的时候<br>wx.openAddress会调用不了<br>也就是 直接打开 <a href="http://www.xiangqu.com/order/submit/view?skuMap[q90060]=1" target="_blank" rel="noopener">http://www.xiangqu.com/order/submit/view?skuMap[q90060]=1</a> 正常<br>先进商品详情页 ==&gt; <a href="http://www.xiangqu.com/order/submit/view?skuMap[q90060]=1" target="_blank" rel="noopener">http://www.xiangqu.com/order/submit/view?skuMap[q90060]=1</a> 异常<br>invalid signature</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>直接打开链接<br>wx浏览器会对url连接进行转码(encode)<br>wx浏览器内部连接跳转<br>不会对url进行转码处理</p><p>wx验证签名信息的时候<br>会将当前页面的链接进行转码处理(encode)</p><p>所以<br>直接打开 <a href="http://www.xiangqu.com/order/submit/view?skuMap[q90060]" target="_blank" rel="noopener">http://www.xiangqu.com/order/submit/view?skuMap[q90060]</a> = 1<br>wx的验证的URL = <a href="http://www.xiangqu.com/order/submit/view?skuMap%5Bq90060%5D=1" target="_blank" rel="noopener">http://www.xiangqu.com/order/submit/view?skuMap%5Bq90060%5D=1</a><br>服务端验证的URL = <a href="http://www.xiangqu.com/order/submit/view?skuMap%5Bq90060%5D=1" target="_blank" rel="noopener">http://www.xiangqu.com/order/submit/view?skuMap%5Bq90060%5D=1</a></p><p>间接打开的 <a href="http://www.xiangqu.com/order/submit/view?skuMap[q90060]=1" target="_blank" rel="noopener">http://www.xiangqu.com/order/submit/view?skuMap[q90060]=1</a><br>wx的验证的URL = <a href="http://www.xiangqu.com/order/submit/view?skuMap%5Bq90060%5D=1" target="_blank" rel="noopener">http://www.xiangqu.com/order/submit/view?skuMap%5Bq90060%5D=1</a><br>服务端验证的URL = <a href="http://www.xiangqu.com/order/submit/view?skuMap[q90060]=1" target="_blank" rel="noopener">http://www.xiangqu.com/order/submit/view?skuMap[q90060]=1</a></p><p>解决方法很简单<br>在跳转的时候<br>js先对链接进行转码</p><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><p>在处理url编码问题的时候<br>最好的方法就是Javascript先对URL进行编码<br>不通过浏览器编码<br>保证输出结果和服务器得到数据的一致</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上周调试wx收货地址的时候&lt;br&gt;碰到一个签名出错的问题&lt;br&gt;invalid signature&lt;br&gt;
    
    </summary>
    
    
      <category term="wx" scheme="//fenghou.site/tags/wx/"/>
    
  </entry>
  
  <entry>
    <title>react-redux</title>
    <link href="//fenghou.site/2017/02/05/2017-02-05-react-redux/"/>
    <id>//fenghou.site/2017/02/05/2017-02-05-react-redux/</id>
    <published>2017-02-05T11:15:42.000Z</published>
    <updated>2018-06-11T06:28:24.706Z</updated>
    
    <content type="html"><![CDATA[<p>React相关-整理中<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;React相关-整理中&lt;br&gt;
    
    </summary>
    
    
      <category term="react" scheme="//fenghou.site/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>react-flux</title>
    <link href="//fenghou.site/2017/02/04/2017-02-04-react-flux/"/>
    <id>//fenghou.site/2017/02/04/2017-02-04-react-flux/</id>
    <published>2017-02-04T11:15:20.000Z</published>
    <updated>2018-06-11T06:28:24.706Z</updated>
    
    <content type="html"><![CDATA[<p>React相关-整理中<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;React相关-整理中&lt;br&gt;
    
    </summary>
    
    
      <category term="react" scheme="//fenghou.site/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>react-immutable</title>
    <link href="//fenghou.site/2017/02/03/2017-02-03-react-immutable/"/>
    <id>//fenghou.site/2017/02/03/2017-02-03-react-immutable/</id>
    <published>2017-02-03T11:14:58.000Z</published>
    <updated>2018-06-11T06:28:24.706Z</updated>
    
    <content type="html"><![CDATA[<p>React相关-整理中<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;React相关-整理中&lt;br&gt;
    
    </summary>
    
    
      <category term="react" scheme="//fenghou.site/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>Canvas--毛笔字书法</title>
    <link href="//fenghou.site/2017/01/21/2017-01-21-Canvas%E6%AF%9B%E7%AC%94%E5%AD%97%E4%B9%A6%E6%B3%95/"/>
    <id>//fenghou.site/2017/01/21/2017-01-21-Canvas毛笔字书法/</id>
    <published>2017-01-21T11:14:18.000Z</published>
    <updated>2018-06-11T06:28:24.705Z</updated>
    
    <content type="html"><![CDATA[<p>继续Canvas<br>这次记录移动端手写书法的实现<br><a id="more"></a></p><h3 id="抛出问题"><a href="#抛出问题" class="headerlink" title="抛出问题"></a>抛出问题</h3><p>canvas在移动端应用书法<br>需要解决两个问题<br>1.笔锋问题<br>2.连贯问题</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>首先分析一下<br>毛笔字是有笔锋的<br>又粗有细有勾有钩<br>通过点击时间长短决定画笔大小<br>来模拟毛笔力度</p><p>通过touchmove事件获取连续移动的两个点<br>计算两点间的直线距离<br>通过循环在canvas画图</p><h3 id="代码上"><a href="#代码上" class="headerlink" title="代码上"></a>代码上</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> domCanvas = <span class="built_in">document</span>.querySelector(<span class="string">'#Calligraphy'</span>),</span><br><span class="line">        context = domCanvas.getContext(<span class="string">'2d'</span>),</span><br><span class="line">        CONFIG = &#123;</span><br><span class="line">            lineMin:<span class="number">8</span>,</span><br><span class="line">            lineMax:<span class="number">20</span>,</span><br><span class="line">            radius:<span class="number">0</span></span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="keyword">let</span> Calligraphy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.touchFlog = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.hasEvent = [];  <span class="comment">//move数组</span></span><br><span class="line">        <span class="keyword">this</span>.upEvent = <span class="literal">null</span>; <span class="comment">//当前操作</span></span><br><span class="line">        <span class="keyword">this</span>.limitDis = <span class="number">80</span>; <span class="comment">//移动最少距离</span></span><br><span class="line">        <span class="keyword">this</span>.radius = CONFIG.radius;</span><br><span class="line">        <span class="keyword">this</span>.lineMin = CONFIG.lineMin;</span><br><span class="line">        <span class="keyword">this</span>.lineMax = CONFIG.lineMax;</span><br><span class="line">    &#125;</span><br><span class="line">    Calligraphy.prototype = &#123;</span><br><span class="line">        start:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">//开始执行监听事件</span></span><br><span class="line">            <span class="keyword">this</span>.bindEventDown = <span class="keyword">this</span>.eventDown.bind(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">this</span>.bindEventMove = <span class="keyword">this</span>.eventMove.bind(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">this</span>.bindEventUp= <span class="keyword">this</span>.eventUp.bind(<span class="keyword">this</span>);</span><br><span class="line">            domCanvas.addEventListener(<span class="string">'touchstart'</span>,<span class="keyword">this</span>.eventDown)</span><br><span class="line">            domCanvas.addEventListener(<span class="string">'touchmove'</span>,<span class="keyword">this</span>.bindEventMove)</span><br><span class="line">            domCanvas.addEventListener(<span class="string">'touchend'</span>,<span class="keyword">this</span>.bindEventUp)</span><br><span class="line">        &#125;,</span><br><span class="line">        eventDown:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'Down'</span>)</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            <span class="keyword">let</span> target = e.changedTouches[e.changedTouches.length<span class="number">-1</span>];</span><br><span class="line">            <span class="keyword">this</span>.touchFlog = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">this</span>.hasEvent = [];  <span class="comment">//</span></span><br><span class="line">            <span class="keyword">this</span>.upEvent = <span class="keyword">this</span>.getPoint(target); <span class="comment">//当前操作</span></span><br><span class="line">        &#125;,</span><br><span class="line">        eventMove:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'Move'</span>);</span><br><span class="line">            <span class="keyword">let</span> target = e.changedTouches[e.changedTouches.length<span class="number">-1</span>];</span><br><span class="line">            <span class="keyword">this</span>.drawFont(<span class="keyword">this</span>.getPoint(target))</span><br><span class="line">        &#125;,</span><br><span class="line">        eventUp:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'Up'</span>);</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            <span class="keyword">this</span>.moveFlog = <span class="literal">false</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        drawFont:<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">this</span>.touchFlog)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">let</span> moEvent = point,</span><br><span class="line">                upEvent = <span class="keyword">this</span>.upEvent,</span><br><span class="line">                upRadius = <span class="keyword">this</span>.radius,</span><br><span class="line">                dis = <span class="number">0</span>, <span class="comment">//连续点距离</span></span><br><span class="line">                time = <span class="number">0</span>; <span class="comment">//时间</span></span><br><span class="line">            <span class="keyword">this</span>.hasEvent.unshift(&#123;<span class="attr">time</span>:<span class="keyword">new</span> <span class="built_in">Date</span>().getTime(),<span class="attr">dis</span>:<span class="keyword">this</span>.getDistance(upEvent,moEvent)&#125;);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> n = <span class="number">0</span>; n &lt; <span class="keyword">this</span>.hasEvent.length<span class="number">-1</span>; n++) &#123;</span><br><span class="line">                dis += <span class="keyword">this</span>.hasEvent[n].dis;</span><br><span class="line">                time += <span class="keyword">this</span>.hasEvent[n].time-<span class="keyword">this</span>.hasEvent[n+<span class="number">1</span>].time;</span><br><span class="line">                <span class="keyword">if</span> (dis&gt;<span class="keyword">this</span>.limitDis)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> radius = <span class="built_in">Math</span>.min(time/dis+<span class="keyword">this</span>.lineMin,<span class="keyword">this</span>.lineMax)/<span class="number">2</span>; <span class="comment">//计算这次画笔半径</span></span><br><span class="line">            <span class="keyword">this</span>.radius = radius;</span><br><span class="line">            <span class="keyword">this</span>.upEvent = moEvent;</span><br><span class="line">            <span class="keyword">let</span> len = <span class="built_in">Math</span>.round(<span class="keyword">this</span>.hasEvent[<span class="number">0</span>].dis/<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">            <span class="comment">//跟上次画笔半径渐变</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> x = upEvent.x + (moEvent.x-upEvent.x)/len* i,</span><br><span class="line">                    y = upEvent.y + (moEvent.y-upEvent.y)/len* i,</span><br><span class="line">                    r = upRadius + (radius-upRadius)/len*i;</span><br><span class="line">                context.beginPath();</span><br><span class="line">                context.arc(x,y,r,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,<span class="literal">true</span>);</span><br><span class="line">                context.fill();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        getPoint:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                x: e.clientX - domCanvas.offsetLeft + (<span class="built_in">document</span>.body.scrollLeft || <span class="built_in">document</span>.documentElement.scrollLeft),</span><br><span class="line">                y: e.clientY - domCanvas.offsetTop + (<span class="built_in">document</span>.body.scrollLeft || <span class="built_in">document</span>.documentElement.scrollTop),</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        getDistance: <span class="function"><span class="keyword">function</span>(<span class="params">pre,next</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> x = next.x - pre.x,</span><br><span class="line">                y = next.y - pre.y;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Math</span>.sqrt(x*x + y*y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> calligrapgy = <span class="keyword">new</span> Calligraphy();</span><br><span class="line">    calligrapgy.start();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续Canvas&lt;br&gt;这次记录移动端手写书法的实现&lt;br&gt;
    
    </summary>
    
    
      <category term="canvas" scheme="//fenghou.site/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>Canvas--黑凤梨</title>
    <link href="//fenghou.site/2017/01/20/2017-01-20-Canvas%E9%BB%91%E5%87%A4%E6%A2%A8/"/>
    <id>//fenghou.site/2017/01/20/2017-01-20-Canvas黑凤梨/</id>
    <published>2017-01-20T11:13:46.000Z</published>
    <updated>2018-06-11T06:28:24.705Z</updated>
    
    <content type="html"><![CDATA[<p>之前很火的黑凤梨生成性格图片<br>相信大家印象深刻<br>短时间拉了大量粉丝，同时自个儿也被微信封了<br><a id="more"></a><br>我们公司当时也做了一个类似的活动<br>想去治病！</p><h3 id="活动流程"><a href="#活动流程" class="headerlink" title="活动流程"></a>活动流程</h3><p><img src="http://xqproduct.xiangqu.com/FqDKF5UELtMrxWcGd33YSKEVM3Xq?imageView2/2/w/250/q/90/format/jpg/1352x1580/" alt="黑凤梨"><br>通过输入生日年月，确定星座<br>每个新座对应几个不同的病症<br>每个病症对应几段不同的文案和商品<br>诊断结果可以分享</p><h3 id="初步想法"><a href="#初步想法" class="headerlink" title="初步想法"></a>初步想法</h3><p>前端通过canvas实现结果图片<br>通过toDataURL转成Image<br>用微信浏览器自带保存图片功能</p><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>设计师希望采用第三方字体<br>那显然在前端实现这有点坑用户流量<br>中文不是就26个字母<br>常用词汇加起来2500 大概7M左右<br>这还是一种字体<br>要实现设计稿要求<br>至少需要三种字体</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>将字体资源放到服务器<br>有服务端实现生成图片<br>前端上传生成格式和内容</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p>在代码实现上前端没有什么大问题<br>主要是数据格式的规定上<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> XZ = &#123;</span><br><span class="line">    <span class="string">'1'</span>:&#123;</span><br><span class="line">        division:<span class="number">19</span>,</span><br><span class="line">        items:[<span class="string">'MJ'</span>,<span class="string">'SP'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'2'</span>:&#123;</span><br><span class="line">        division:<span class="number">18</span>,</span><br><span class="line">        items:[<span class="string">'SP'</span>,<span class="string">'SY'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'3'</span>:&#123;</span><br><span class="line">        division:<span class="number">20</span>,</span><br><span class="line">        items:[<span class="string">'SY'</span>,<span class="string">'BY'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'4'</span>:&#123;</span><br><span class="line">        division:<span class="number">19</span>,</span><br><span class="line">        items:[<span class="string">'BY'</span>,<span class="string">'JN'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'5'</span>:&#123;</span><br><span class="line">        division:<span class="number">20</span>,</span><br><span class="line">        items:[<span class="string">'JN'</span>,<span class="string">'SdZ'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'6'</span>:&#123;</span><br><span class="line">        division:<span class="number">21</span>,</span><br><span class="line">        items:[<span class="string">'SdZ'</span>,<span class="string">'JX'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'7'</span>:&#123;</span><br><span class="line">        division:<span class="number">22</span>,</span><br><span class="line">        items:[<span class="string">'JX'</span>,<span class="string">'SlZ'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'8'</span>:&#123;</span><br><span class="line">        division:<span class="number">22</span>,</span><br><span class="line">        items:[<span class="string">'SlZ'</span>,<span class="string">'CN'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'9'</span>:&#123;</span><br><span class="line">        division:<span class="number">22</span>,</span><br><span class="line">        items:[<span class="string">'CN'</span>,<span class="string">'TC'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'10'</span>:&#123;</span><br><span class="line">        division:<span class="number">23</span>,</span><br><span class="line">        items:[<span class="string">'TC'</span>,<span class="string">'TX'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'11'</span>:&#123;</span><br><span class="line">        division:<span class="number">22</span>,</span><br><span class="line">        items:[<span class="string">'TX'</span>,<span class="string">'SS'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'12'</span>:&#123;</span><br><span class="line">        division:<span class="number">21</span>,</span><br><span class="line">        items:[<span class="string">'SS'</span>,<span class="string">'MJ'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//星座的判别</span></span><br><span class="line"><span class="keyword">let</span> oXz = XZ[domInputMonth],</span><br><span class="line">    sXz = domInputDate &lt;= oXz.division ? oXz.item[<span class="number">0</span>] : oXz.item[<span class="number">1</span>];</span><br><span class="line"><span class="comment">//病症描述的格式规定</span></span><br><span class="line">[<span class="string">'$+@70@&amp;方正兰亭特黑简体&amp;**+$$+@50@&amp;方正兰亭特黑简体&amp;想发个朋友圈+$'</span>,<span class="string">'结果..$+@50@&amp;方正兰亭特黑简体&amp;俩小时+$过去了...'</span>,<span class="string">'还在$+@110@&amp;方正兰亭特黑简体&amp;选照片+$'</span>]</span><br><span class="line">文案分行采取数组形式</span><br><span class="line">$+ +$ 包含有特殊字体文本</span><br><span class="line">&amp; &amp;   特殊字体</span><br><span class="line">@ @   字号</span><br><span class="line">**    替换文案(姓名)</span><br><span class="line"><span class="comment">//生成文案在显示位置</span></span><br><span class="line">通过本地Canvas模拟生成的图片</span><br><span class="line">(字体用系统字体代替)</span><br><span class="line">context.ctx.font = nSize+<span class="string">'px arial'</span>;</span><br><span class="line">context.measureText(sContext).width 来获取长度</span><br><span class="line">通过指定宽度容器的比较获取x,y坐标</span><br><span class="line"><span class="comment">//小技巧</span></span><br><span class="line"><span class="comment">//数组的随机</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.shuffle = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> len = <span class="keyword">this</span>.length,num = n ? <span class="built_in">Math</span>.min(n,len) : len,index,</span><br><span class="line">                arr = <span class="keyword">this</span>.slice(<span class="number">0</span>),temp,</span><br><span class="line">                lib = &#123;&#125;;</span><br><span class="line">            lib.range = <span class="function"><span class="keyword">function</span>(<span class="params">min,max</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> min + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*(max-min+<span class="number">1</span>))</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">                index = lib.range(i,len<span class="number">-1</span>);</span><br><span class="line">                temp = arr[i];</span><br><span class="line">                arr[i] = arr[index];</span><br><span class="line">                arr[index] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> arr.slice(<span class="number">0</span>,num);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//两个数组的合并</span></span><br><span class="line">[a].concat([b])  返回结果新数组</span><br><span class="line">[].push.apply([a],[b]);返回结果[a]</span><br></pre></td></tr></table></figure></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>虽然好像跟canvas关系不大<br>但是，好像也没有但是。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前很火的黑凤梨生成性格图片&lt;br&gt;相信大家印象深刻&lt;br&gt;短时间拉了大量粉丝，同时自个儿也被微信封了&lt;br&gt;
    
    </summary>
    
    
      <category term="canvas" scheme="//fenghou.site/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>Canvas--星空</title>
    <link href="//fenghou.site/2017/01/19/2017-01-19-Canvas%E6%98%9F%E7%A9%BA/"/>
    <id>//fenghou.site/2017/01/19/2017-01-19-Canvas星空/</id>
    <published>2017-01-19T11:13:18.000Z</published>
    <updated>2018-06-11T06:28:24.705Z</updated>
    
    <content type="html"><![CDATA[<p>Canvas 星空效果<br>嗯 是的 就是左上方的星空效果<br><a id="more"></a></p><h3 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h3><p>其实星空在实现上很简单<br>一个星星就是一个星星对象实例<br>有属性x坐标，y坐标，半径，移动速度和透明度<br>有方法生成坐标，绘制星星</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 配置选项</span></span><br><span class="line"><span class="comment">        * width:画布宽</span></span><br><span class="line"><span class="comment">        * height:画布高</span></span><br><span class="line"><span class="comment">        * splitHeight:星星密集分割</span></span><br><span class="line"><span class="comment">        * stars:星星数量</span></span><br><span class="line"><span class="comment">        * maxStar:星星最大半径</span></span><br><span class="line"><span class="comment">        * minStar:星星最小半径</span></span><br><span class="line"><span class="comment">        * maxSpeed:星星最大移动速度</span></span><br><span class="line"><span class="comment">        * minSpeed:星星最小移动速度</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="keyword">let</span> SkySetting = &#123;</span><br><span class="line">                width:<span class="number">800</span>,</span><br><span class="line">                height:<span class="number">300</span>,</span><br><span class="line">                splitHeight:<span class="number">200</span>,</span><br><span class="line">                stars:<span class="number">400</span>,</span><br><span class="line">                maxStar:<span class="number">1.2</span>,</span><br><span class="line">                minStar:<span class="number">0.6</span>,</span><br><span class="line">                maxSpeed:<span class="number">0.1</span>,</span><br><span class="line">                minSpeed:<span class="number">0.02</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">            domCanvas = <span class="built_in">document</span>.querySelector(<span class="string">'#Star'</span>),</span><br><span class="line">            context = domCanvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 画布实例</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="keyword">let</span> starSky = <span class="function"><span class="keyword">function</span>(<span class="params">width,height,stars</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.width = width;</span><br><span class="line">            <span class="keyword">this</span>.height = height;</span><br><span class="line">            <span class="keyword">this</span>.stars = stars;</span><br><span class="line">            <span class="keyword">this</span>.aStars = [];</span><br><span class="line">        &#125;</span><br><span class="line">        starSky.prototype = &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 入口</span></span><br><span class="line"><span class="comment">            * */</span></span><br><span class="line">            start:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                domCanvas.width = <span class="keyword">this</span>.width;</span><br><span class="line">                domCanvas.height = <span class="keyword">this</span>.height;</span><br><span class="line">                context.fillStyle = <span class="string">'rgba(0,0,0,1)'</span>;</span><br><span class="line">                context.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="keyword">this</span>.width,<span class="keyword">this</span>.height);</span><br><span class="line">                <span class="keyword">this</span>.render();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 重绘</span></span><br><span class="line"><span class="comment">            * */</span></span><br><span class="line">            redraw:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                context.clearRect(<span class="number">0</span>,<span class="number">0</span>,<span class="keyword">this</span>.width,<span class="keyword">this</span>.height);</span><br><span class="line">                context.fillStyle = <span class="string">'rgba(0,0,0,1)'</span>;</span><br><span class="line">                context.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="keyword">this</span>.width,<span class="keyword">this</span>.height);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 新建星星实例</span></span><br><span class="line"><span class="comment">            * 绘制星星</span></span><br><span class="line"><span class="comment">            * window.requestAnimationFrame 动画函数</span></span><br><span class="line"><span class="comment">            * */</span></span><br><span class="line">            render:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.redraw();</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.aStars.length &lt;= <span class="keyword">this</span>.stars)&#123;</span><br><span class="line">                    <span class="keyword">let</span> star = <span class="keyword">new</span> Star();</span><br><span class="line">                    <span class="keyword">this</span>.aStars.push(star);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">this</span>.aStars.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">star</span>)</span>&#123;</span><br><span class="line">                    star.draw();</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="built_in">window</span>.requestAnimationFrame(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.render();</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 星星构造器</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="keyword">let</span> Star = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.randomPoint();</span><br><span class="line">        &#125;</span><br><span class="line">        Star.prototype = &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 随机星星数据</span></span><br><span class="line"><span class="comment">            * */</span></span><br><span class="line">            randomPoint:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">let</span> _x = <span class="built_in">Math</span>.random()*SkySetting.width,</span><br><span class="line">                    _r = SkySetting.minStar + <span class="built_in">Math</span>.random()*(SkySetting.maxStar - SkySetting.minStar),</span><br><span class="line">                    _ran = <span class="built_in">Math</span>.random()*<span class="number">10</span>,</span><br><span class="line">                    _rx = <span class="built_in">Math</span>.random()*(SkySetting.maxSpeed-SkySetting.minSpeed) + SkySetting.minSpeed,</span><br><span class="line">                    _y = _ran &gt; <span class="number">2</span> ? <span class="built_in">Math</span>.random()*SkySetting.splitHeight: <span class="built_in">Math</span>.random()*SkySetting.height,</span><br><span class="line">                    _alphaMax = <span class="built_in">Math</span>.random()*<span class="number">0.8</span> + <span class="number">0.2</span>,</span><br><span class="line">                    _alphaMin = <span class="number">0.2</span>,</span><br><span class="line">                    _alpha = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">this</span>.x = _x;</span><br><span class="line">                <span class="keyword">this</span>.y = _y;</span><br><span class="line">                <span class="keyword">this</span>.r = _r;</span><br><span class="line">                <span class="keyword">this</span>.rx = _rx;</span><br><span class="line">                <span class="keyword">this</span>.alpha = _alpha;</span><br><span class="line">                <span class="keyword">this</span>.alphaMax = _alphaMax;</span><br><span class="line">                <span class="keyword">this</span>.alphaMin = _alphaMin;</span><br><span class="line">                <span class="keyword">this</span>.alphaAction = <span class="literal">true</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 绘制星星</span></span><br><span class="line"><span class="comment">            * 星星变化</span></span><br><span class="line"><span class="comment">            * */</span></span><br><span class="line">            draw:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.x += <span class="keyword">this</span>.rx;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.x + <span class="keyword">this</span>.r &gt;= SkySetting.width)&#123;</span><br><span class="line">                    <span class="keyword">this</span>.x = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.alphaAction)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="keyword">this</span>.alpha &lt; <span class="keyword">this</span>.alphaMax)&#123;</span><br><span class="line">                        <span class="keyword">this</span>.alpha += <span class="number">0.05</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">this</span>.alphaAction = <span class="literal">false</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(!<span class="keyword">this</span>.alphaAction)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="keyword">this</span>.alpha &gt; <span class="keyword">this</span>.alphaMin)&#123;</span><br><span class="line">                        <span class="keyword">this</span>.alpha -= <span class="number">0.02</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">this</span>.alphaAction = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                context.beginPath();</span><br><span class="line">                context.fillStyle = <span class="string">'rgba(255,255,255,'</span>+<span class="keyword">this</span>.alpha.toString()+<span class="string">')'</span>;</span><br><span class="line">                context.arc(<span class="keyword">this</span>.x,<span class="keyword">this</span>.y,<span class="keyword">this</span>.r,<span class="number">0</span>,<span class="built_in">Math</span>.PI*<span class="number">2</span>,<span class="literal">true</span>);</span><br><span class="line">                context.closePath();</span><br><span class="line">                context.fill();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 构造星空实例</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="keyword">let</span> sky = <span class="keyword">new</span> starSky(SkySetting.width,SkySetting.height,SkySetting.stars);</span><br><span class="line">        sky.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Canvas 星空效果&lt;br&gt;嗯 是的 就是左上方的星空效果&lt;br&gt;
    
    </summary>
    
    
      <category term="canvas" scheme="//fenghou.site/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>Canvas--刮刮卡</title>
    <link href="//fenghou.site/2017/01/18/2017-01-18-Canvas%E5%88%AE%E5%88%AE%E5%8D%A1/"/>
    <id>//fenghou.site/2017/01/18/2017-01-18-Canvas刮刮卡/</id>
    <published>2017-01-18T11:12:27.000Z</published>
    <updated>2018-06-11T06:28:24.705Z</updated>
    
    <content type="html"><![CDATA[<p>到年底了，去回顾了下做过的项目<br>发现有很多跟Canvas有关的<br>这里简单记录一点心得<br>方便日后查阅<br><a id="more"></a></p><h2 id="一个模拟刮奖的活动"><a href="#一个模拟刮奖的活动" class="headerlink" title="一个模拟刮奖的活动"></a>一个模拟刮奖的活动</h2><h3 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h3><p>获奖结果上实现一个遮层<br>手指滑动位置遮层对应位置色值清空<br>判断清空数据达到设定值，清除遮层</p><h3 id="必备API"><a href="#必备API" class="headerlink" title="必备API"></a>必备API</h3><p>getContext()<br>getImageData() //获取画布像素数据 每个像素包含RGBA四个值<br>fill() //填充<br>rect() //矩形<br>arc() //圆<br>globalCompositeOperation //设置或返回如何将一个源（新的）图像绘制到目标（已有）的图像上</p><h3 id="touch事件"><a href="#touch事件" class="headerlink" title="touch事件"></a>touch事件</h3><p>touchstart<br>touchmove<br>touchend<br>changedTouches:touchlist。<br>对于 touchstart 事件, 这个 TouchList 对象列出在此次事件中新增加的触点<br>对于 touchmove 事件，列出和上一次事件相比较，发生了变化的触点<br>对于 touchend ，列出离开触摸平面的触点（这些触点对应已经不接触触摸平面的手指）</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="keyword">let</span> domCanvas = <span class="built_in">document</span>.querySelector(<span class="string">'#GGL'</span>),</span><br><span class="line">            context = domCanvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 构建对象</span></span><br><span class="line"><span class="comment">        * width</span></span><br><span class="line"><span class="comment">        * height</span></span><br><span class="line"><span class="comment">        * filter 取消遮罩百分比</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="keyword">let</span> clipImage = <span class="function"><span class="keyword">function</span>(<span class="params">height,width,filter</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.width = width;</span><br><span class="line">            <span class="keyword">this</span>.height = height;</span><br><span class="line">            <span class="keyword">this</span>.filter = filter;</span><br><span class="line">            domCanvas.width = <span class="keyword">this</span>.width;</span><br><span class="line">            domCanvas.height = <span class="keyword">this</span>.height;</span><br><span class="line">        &#125;</span><br><span class="line">        clipImage.prototype = &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 函数入口</span></span><br><span class="line"><span class="comment">            * 开始监听事件</span></span><br><span class="line"><span class="comment">            * */</span></span><br><span class="line">            start:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                context.fillStyle = <span class="string">'gray'</span>;</span><br><span class="line">                context.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="keyword">this</span>.width,<span class="keyword">this</span>.height);</span><br><span class="line">                context.globalCompositeOperation = <span class="string">'destination-out'</span>;</span><br><span class="line">                <span class="keyword">this</span>.bindEventMove = <span class="keyword">this</span>.eventMove.bind(<span class="keyword">this</span>);</span><br><span class="line">                <span class="keyword">this</span>.bindEventUp= <span class="keyword">this</span>.eventUp.bind(<span class="keyword">this</span>);</span><br><span class="line">                domCanvas.addEventListener(<span class="string">'touchstart'</span>,<span class="keyword">this</span>.eventDown)</span><br><span class="line">                domCanvas.addEventListener(<span class="string">'touchmove'</span>,<span class="keyword">this</span>.bindEventMove)</span><br><span class="line">                domCanvas.addEventListener(<span class="string">'touchend'</span>,<span class="keyword">this</span>.bindEventUp)</span><br><span class="line">            &#125;,</span><br><span class="line">            eventDown:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Down'</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            eventMove:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Move'</span>);</span><br><span class="line">                <span class="keyword">let</span> target = e.changedTouches[e.changedTouches.length<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">this</span>.clearMove(target)</span><br><span class="line">            &#125;,</span><br><span class="line">            eventUp:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Up'</span>);</span><br><span class="line">                <span class="keyword">this</span>.clearMask();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 清除划过画布</span></span><br><span class="line"><span class="comment">            * */</span></span><br><span class="line">            clearMove:<span class="function"><span class="keyword">function</span>(<span class="params">target</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">let</span> nX = target.clientX,</span><br><span class="line">                    nY = target.clientY;</span><br><span class="line">                context.beginPath();</span><br><span class="line">                context.arc(nX,nY,<span class="number">15</span>,<span class="number">0</span>,<span class="built_in">Math</span>.PI * <span class="number">2</span>);</span><br><span class="line">                context.fill();</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 判断像素点清除数是否到达指定百分比</span></span><br><span class="line"><span class="comment">            * */</span></span><br><span class="line">            clearMask:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">let</span> nNum = <span class="number">0</span>,</span><br><span class="line">                    aImageData = context.getImageData(<span class="number">0</span>,<span class="number">0</span>,<span class="keyword">this</span>.width,<span class="keyword">this</span>.height).data,</span><br><span class="line">                    nLength = aImageData.length;</span><br><span class="line">                aImageData.forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(item == <span class="number">0</span>)&#123;</span><br><span class="line">                        nNum++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">if</span>(nNum &gt;= nLength * <span class="keyword">this</span>.filter)&#123;</span><br><span class="line">                    <span class="keyword">this</span>.finish();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            * 完成刮奖</span></span><br><span class="line"><span class="comment">            * */</span></span><br><span class="line">            finish:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                context.beginPath();</span><br><span class="line">                context.rect(<span class="number">0</span>,<span class="number">0</span>,<span class="keyword">this</span>.width,<span class="keyword">this</span>.height);</span><br><span class="line">                context.fill();</span><br><span class="line">                domCanvas.removeEventListener(<span class="string">'touchstart'</span>,<span class="keyword">this</span>.eventDown);</span><br><span class="line">                domCanvas.removeEventListener(<span class="string">'touchmove'</span>,<span class="keyword">this</span>.bindEventMove);</span><br><span class="line">                domCanvas.removeEventListener(<span class="string">'touchend'</span>,<span class="keyword">this</span>.bindEventUp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> clip = <span class="keyword">new</span> clipImage(<span class="number">400</span>,<span class="number">400</span>,<span class="number">.3</span>);</span><br><span class="line">        clip.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;到年底了，去回顾了下做过的项目&lt;br&gt;发现有很多跟Canvas有关的&lt;br&gt;这里简单记录一点心得&lt;br&gt;方便日后查阅&lt;br&gt;
    
    </summary>
    
    
      <category term="canvas" scheme="//fenghou.site/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>谈谈js的继承</title>
    <link href="//fenghou.site/2017/01/03/2017-01-03-%E8%B0%88%E8%B0%88js%E7%9A%84%E7%BB%A7%E6%89%BF/"/>
    <id>//fenghou.site/2017/01/03/2017-01-03-谈谈js的继承/</id>
    <published>2017-01-03T11:11:44.000Z</published>
    <updated>2018-06-11T06:28:24.704Z</updated>
    
    <content type="html"><![CDATA[<p>继承在JavaScript中不像在别的面向对象语言中那样简单<br>JavaScript使用的是基于对象的继承<br>它可以用来模仿基于类的继承<br><a id="more"></a><br>Es6中，新增了Class和extends关键字来支持类的继承<br>在这里记录各种继承的实现方式</p><h3 id="类式继承"><a href="#类式继承" class="headerlink" title="类式继承"></a>类式继承</h3><p>JavaScript对象可以模仿Java中的对象<br>通过函数来声明类<br>用关键字new来创建实例<br>这种方式包括两个步骤<br>1.用一个类的声明定义对象的结构<br>2.实例化该类创建一个新对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类的实例</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype.sayName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.sName);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> Ls = <span class="keyword">new</span> Person(<span class="string">'Ls'</span>);</span><br><span class="line">Ls.sayName();</span><br></pre></td></tr></table></figure></p><p>这种类式继承的方式可以分为五种<br>对象冒充，Call，Apply，原型链和混合模式</p><h3 id="对象冒充"><a href="#对象冒充" class="headerlink" title="对象冒充"></a>对象冒充</h3><p>构造函数使用 this 关键字给所有属性和方法赋值<br>因为构造函数只是一个函数<br>所以可使Person构造函数成为Author的方法，然后调用它<br>Author就会收到Person的构造函数中定义的属性和方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.sayName=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Author</span>(<span class="params">name,book</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.book = book;</span><br><span class="line">        <span class="keyword">this</span>.Person = Person;</span><br><span class="line">        <span class="keyword">this</span>.Person(name);</span><br><span class="line">        <span class="keyword">delete</span> <span class="keyword">this</span>.Person;</span><br><span class="line">        <span class="keyword">this</span>.sayBook = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.book)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> Ls = <span class="keyword">new</span> Author(<span class="string">'Ls'</span>,<span class="string">'My Book'</span>);</span><br><span class="line">Ls.sayName();</span><br><span class="line">Ls.sayBook();</span><br></pre></td></tr></table></figure></p><h3 id="apply-amp-amp-call继承"><a href="#apply-amp-amp-call继承" class="headerlink" title="apply&amp;&amp;call继承"></a>apply&amp;&amp;call继承</h3><p>call和apply方法通过改变函数上下文实现继承<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.sayName=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Author</span>(<span class="params">name,book</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.book = book;</span><br><span class="line">        Person.call(<span class="keyword">this</span>,name);</span><br><span class="line">        Person.apply(<span class="keyword">this</span>,[name]);</span><br><span class="line">        <span class="keyword">this</span>.sayBook = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.book)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> Ls = <span class="keyword">new</span> Author(<span class="string">'Ls'</span>,<span class="string">'My Book'</span>);</span><br><span class="line">    Ls.sayName();</span><br><span class="line">    Ls.sayBook();</span><br></pre></td></tr></table></figure></p><h3 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h3><p>使子类原型对象指向父类的实例以实现继承,即重写类的原型对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype.sName = <span class="string">''</span>;</span><br><span class="line">Person.prototype.sayName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.sName);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Author</span>(<span class="params">book</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.book = book;</span><br><span class="line">&#125;</span><br><span class="line">Author.prototype = <span class="keyword">new</span> Person();</span><br><span class="line">Author.prototype.sayBook= <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.book);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> Ls = <span class="keyword">new</span> Author(<span class="string">'My book'</span>);</span><br><span class="line">Ls.sName = <span class="string">'Ls'</span>;</span><br><span class="line">Ls.sayName();</span><br><span class="line">Ls.sayBook();</span><br></pre></td></tr></table></figure></p><p>这种模式无法使用带参数的构造函数，不支持多重继承</p><h3 id="混合模式继承"><a href="#混合模式继承" class="headerlink" title="混合模式继承"></a>混合模式继承</h3><p>用对象冒充继承构造函数的属性，用原型链继承 prototype 对象的方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype.sayName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Author</span>(<span class="params">name,book</span>)</span>&#123;</span><br><span class="line">    Person.call(<span class="keyword">this</span>,name);</span><br><span class="line">    <span class="keyword">this</span>.book = book;</span><br><span class="line">&#125;</span><br><span class="line">Author.prototype = <span class="keyword">new</span> Person();</span><br><span class="line">Author.prototype.constructor = Author;</span><br><span class="line">Author.prototype.sayBook = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.book);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> Ls = <span class="keyword">new</span> Author(<span class="string">'Ls'</span>,<span class="string">'My Book'</span>);</span><br><span class="line">Ls.sayName();</span><br><span class="line">Ls.sayBook();</span><br></pre></td></tr></table></figure></p><p>为了简化类的声明，可以把派生子类的整个过程包装在一个名为extend的函数中<br>空函数F，这样可以避免创建Person的新实例,因为它可能会比较庞大<br>增加superclass这个属性弱化Author与Person之间的耦合<br>并且确保constructor属性被正确设置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">subClass.superClass</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line">    F.prototype = superClass.prototype;</span><br><span class="line">    subClass.prototype = <span class="keyword">new</span> F();</span><br><span class="line">    subClass.prototype.constructor = subClass;</span><br><span class="line">    subClass.superclass = superClass.prototype;</span><br><span class="line">    <span class="keyword">if</span>(subClass.prototype.constructor == <span class="built_in">Object</span>.prototype.constructor)&#123;</span><br><span class="line">        subClass.prototype.constructor = subClass;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype.sayName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Author</span>(<span class="params">name,book</span>)</span>&#123;</span><br><span class="line">    Author.superclass.constructor.call(<span class="keyword">this</span>,name);</span><br><span class="line">    <span class="keyword">this</span>.book = book;</span><br><span class="line">&#125;</span><br><span class="line">extend(Author,Person)</span><br><span class="line">Author.prototype.sayBook = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.book);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> Ls = <span class="keyword">new</span> Author(<span class="string">'Ls'</span>,<span class="string">'My Book'</span>);</span><br><span class="line">Ls.sayName();</span><br><span class="line">Ls.sayBook();</span><br></pre></td></tr></table></figure></p><p>JavaScript中的类式继承仅仅是对正正基于类的继承的一种模仿</p><h3 id="原型式继承"><a href="#原型式继承" class="headerlink" title="原型式继承"></a>原型式继承</h3><p>原型式继承与类式继承截然不同<br>它并不需要用类来定义对象结构，只需要创建一个对象<br>这个对象可以被新的对象重用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Person = &#123;</span><br><span class="line">    name:<span class="string">'default name'</span>,</span><br><span class="line">    sayName:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> Author = clone(Person);</span><br><span class="line">Author.book = <span class="string">'default book'</span>;</span><br><span class="line">Author.sayBook = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.book);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> Ls = clone(Author);</span><br><span class="line">Ls.name = <span class="string">'Ls'</span>;</span><br><span class="line">Ls.book = <span class="string">'My Book'</span>;</span><br><span class="line">Ls.sayName();</span><br><span class="line">Ls.sayBook();</span><br><span class="line"><span class="comment">//clone 通过把F的prototype属性设置为作为参数obj传去的原型对象</span></span><br><span class="line"><span class="comment">//函数返回的结果是一个以给定对象为原型对象的空对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clone</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">    F.prototype = obj;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> F();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Es6-extends"><a href="#Es6-extends" class="headerlink" title="Es6 extends"></a>Es6 extends</h3><p>Es6中引入了Class 和extends关键字<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">        <span class="keyword">constructor</span>(name)&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line">        sayName()&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Author</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">        <span class="keyword">constructor</span>(name,book)&#123;</span><br><span class="line">            <span class="keyword">super</span>(name);</span><br><span class="line">            <span class="keyword">this</span>.book = book;</span><br><span class="line">        &#125;</span><br><span class="line">        sayBook()&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.book);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> Ls = <span class="keyword">new</span> Author(<span class="string">'Ls'</span>,<span class="string">'My Book'</span>);</span><br><span class="line">Ls.sayName();</span><br><span class="line">Ls.sayBook();</span><br><span class="line">Ls.__proto__ === Author.prototype; <span class="comment">//true</span></span><br><span class="line">Author.prototype.__proto__ === Person.prototype; <span class="comment">//true</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继承在JavaScript中不像在别的面向对象语言中那样简单&lt;br&gt;JavaScript使用的是基于对象的继承&lt;br&gt;它可以用来模仿基于类的继承&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>彻底理解Js中的作用域和上下文</title>
    <link href="//fenghou.site/2016/12/30/2016-12-30-%E5%BD%BB%E5%BA%95%E7%90%86%E8%A7%A3Js%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E4%B8%8A%E4%B8%8B%E6%96%87/"/>
    <id>//fenghou.site/2016/12/30/2016-12-30-彻底理解Js中的作用域和上下文/</id>
    <published>2016-12-30T11:11:06.000Z</published>
    <updated>2018-06-11T06:28:24.704Z</updated>
    
    <content type="html"><![CDATA[<p>笔记 - 总结 - 心得<br>函数的每次调用都有与之紧密相关的作用域和上下文<br>这俩者是完全不同的<br>作用域(Scope) 是基于函数的<br>作用域涉及到所被调用函数中的变量访问，并且不同的调用场景是不一样的<br>而上下文(Context)是基于对象的<br>上下文始终是this关键字的值，它是拥有(控制)当前所执行代码的对象的引用。<br><a id="more"></a></p><h3 id="作用域-Scope"><a href="#作用域-Scope" class="headerlink" title="作用域(Scope)"></a>作用域(Scope)</h3><p>首先只有函数具有作用域<br>也就是说，在一个函数内部声明的变量在函数外部无法访问<br>JavaScript的作用域是词法性质的<br>这这意味着函数运行在定义它的作用域中<br>而不是在调用它的作用域中<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        a *= <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bar;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> baz = foo();</span><br><span class="line">baz(); <span class="comment">//20</span></span><br></pre></td></tr></table></figure></p><p>Es6之前 局部变量只能存在于函数体中<br>Es6开始支持let声明变量 局部变量能存在于块级作用域<br>通过var声明的变量会出现变量提升的问题</p><blockquote><p>变量的 声明周期<br>  声明阶段(Declaration phase)<br>  初始化阶段(Initialization phase)<br>  初始化阶段：variable = undefined<br>  赋值阶段(Assignment phase)<br>  赋值阶段后：variable = ‘value’</p></blockquote><p>var<br>变量在函数作用域的开始位置就完成了声明阶段(variable)和初始化阶段(var variable)，这两个阶段之间没有任何间隙<br>let<br>变量通过声明阶段(foo)后，会进去暂时性死区，此时变量不可访问，直到初始化阶段(let foo)之后，变量才可以被访问<br>所以变量提升是变量的耦合声明并且在作用域的顶部完成初始化<br>然而let生命周期中将声明和初始化阶段解耦。这一解耦使 let 的变量提升现象消失。</p><h3 id="上下文-Context"><a href="#上下文-Context" class="headerlink" title="上下文(Context)"></a>上下文(Context)</h3><p>上下文通常取决于函数是如何被调用的<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当一个函数作为对象中的一个方法被调用的时候,this就设置为调用该方法的对象</span></span><br><span class="line"><span class="keyword">var</span> foo = &#123;</span><br><span class="line">    bar:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span> === foo)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">foo.bar() <span class="comment">// true</span></span><br><span class="line"><span class="comment">//当使用new操作符创造对象的实例时,函数的作用域内部this的值被设置为新创建的实例</span></span><br><span class="line"><span class="keyword">let</span> aThis = [];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x = x;</span><br><span class="line">    aThis.push(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//foo&#123;x:1&#125;</span></span><br><span class="line">    <span class="comment">//foo&#123;x:2&#125;</span></span><br><span class="line">&#125;</span><br><span class="line">foo.prototype.baz = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.x);</span><br><span class="line">    <span class="comment">//1</span></span><br><span class="line">    <span class="comment">//2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> foo(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">new</span> foo(<span class="number">2</span>);</span><br><span class="line">aThis.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    item.baz();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h3 id="执行环境-execution-context"><a href="#执行环境-execution-context" class="headerlink" title="执行环境(execution context)"></a>执行环境(execution context)</h3><p>执行环境 定义了变量或函数有权访问的数据，决定它们各自的行为<br>Js是单线程的，当JavaScript解释器初始化执行代码时，会默认进入全局执行环境<br>此后函数的每次调用都会创建一个新的执行环境<br>每个函数都有自己的执行环境，当执行流进入一个函数时，函数的环境会被推入一个环境栈中<br>在函数执行完后，栈将其环境弹出，把控制权返回给之前的执行环境。<br>ECMAScript程序中的执行流正是由这个便利的机制控制着<br>执行环境可以分为创建和执行两个阶段。<br>在创建阶段，解析器首先会创建一个变量对象（variable object，也称为活动对象 activation object），<br>它由定义在执行环境中的变量、函数声明、和参数组成。<br>在这个阶段，作用域链会被初始化， this 的值也会被最终确定。<br>在执行阶段，代码被解释执行。</p><h3 id="作用域链-scope-chain"><a href="#作用域链-scope-chain" class="headerlink" title="作用域链(scope chain)"></a>作用域链(scope chain)</h3><p>当代码在一个环境中执行时<br>会创建变量对象的一个作用域链<br>作用域链的用途是保证对执行环境有权访问的所有变量和函数的有序访问<br>作用域链包含了在环境栈中的每个执行环境对应的变量对象<br>内部环境可以通过作用域链访问所有的外部环境<br>但是外部环境不能访问内部环境中的任何变量和函数<br>这些环境之间的联系是线性的、有次序的</p><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><p>闭包是指有权访问另一函数作用域中的变量的函数<br>在函数内定义一个嵌套的函数时，就构成了一个闭包<br>它允许嵌套函数访问外层函数的变量<br>通过返回嵌套函数，允许你维护对外部函数中局部变量、参数、和内函数声明的访问。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模块模式最流行的闭包类型之一，它允许你模拟公共的、私有的、和特权成员</span></span><br><span class="line"><span class="keyword">let</span> Module = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> privateProperty = <span class="string">'foo'</span>;</span><br><span class="line">    fucntion privateMethod()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        publicProperty:<span class="string">''</span>,</span><br><span class="line">        publicMethod:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        &#125;,</span><br><span class="line">        privilegedMethod: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> privateMethod(<span class="built_in">arguments</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"><span class="comment">//另一种类型的闭包被称为 立即执行的函数表达式(IIFE) Es5中</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">window</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> foo, bar;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">private</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> Module = &#123;</span><br><span class="line">        public: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// do something</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">window</span>.Module = Module;</span><br><span class="line">&#125;)(<span class="keyword">this</span>);</span><br><span class="line"><span class="comment">//保护全局命名空间免受变量污染</span></span><br><span class="line"><span class="keyword">var</span> baz;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> foo = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">var</span> bar = <span class="number">2</span>;</span><br><span class="line">    baz = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> foo * bar;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br><span class="line">baz(); <span class="comment">//20</span></span><br><span class="line"><span class="comment">//保护私用private变量</span></span><br></pre></td></tr></table></figure></p><h3 id="apply-amp-call-amp-bind"><a href="#apply-amp-call-amp-bind" class="headerlink" title="apply&amp;call&amp;bind"></a>apply&amp;call&amp;bind</h3><p>apply和call内建在所有的函数中(它们是Function对象的原型方法)<br>允许你在自定义上下文中执行函数<br>不同点在于，call函数需要参数列表，而apply 函数需要你提供一个参数数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//arguments</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    [].slice.apply(<span class="built_in">arguments</span>);</span><br><span class="line">    [].sort.apply(<span class="built_in">arguments</span>,<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a&gt;b;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//apply在传递参数时会将数组转变成列表集合</span></span><br><span class="line"><span class="comment">//在一些只能处理列表的方法中可以巧妙地处理</span></span><br><span class="line"><span class="comment">//求数组最大值</span></span><br><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="built_in">Math</span>.max(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>); <span class="comment">//3</span></span><br><span class="line"><span class="built_in">Math</span>.max.apply(<span class="keyword">this</span>,a); <span class="comment">//3</span></span><br><span class="line"><span class="comment">//两个数组合并</span></span><br><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>,<span class="number">2</span>],</span><br><span class="line">    b = [<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="comment">//a.push(b)</span></span><br><span class="line"><span class="comment">//a [1,2,[3,4]];</span></span><br><span class="line">[].push.apply(a,b)</span><br><span class="line"><span class="comment">//a [1,2,3,4];</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AA</span>(<span class="params">a,b,c,d</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a,b,c,d)</span><br><span class="line">&#125;</span><br><span class="line">AA.apply(AA,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BB</span>(<span class="params">[a,b,c,d] = arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a,b,c,d)</span><br><span class="line">&#125;</span><br><span class="line">BB([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br></pre></td></tr></table></figure><p>在ES5中引入了 Function.prototype.bind 方法，<br>用于控制函数的执行上下文，它会返回一个新的函数，<br>并且这个新函数会被永久的绑定到 bind 方法的第一个参数所指定的对象上，无论该函数被如何使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//低版本浏览器，我们可以简单的对它进行实现如下(polyfill)</span></span><br><span class="line"><span class="keyword">if</span>(!(<span class="string">'bind'</span> <span class="keyword">in</span> <span class="built_in">Function</span>.prototype))&#123;</span><br><span class="line">    <span class="built_in">Function</span>.prototype.bind = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fn = <span class="keyword">this</span>,</span><br><span class="line">            context = <span class="built_in">arguments</span>[<span class="number">0</span>],</span><br><span class="line">            args = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> fn.apply(context, args.concat(<span class="built_in">arguments</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Es6箭头函数"><a href="#Es6箭头函数" class="headerlink" title="Es6箭头函数"></a>Es6箭头函数</h3><p>S6中的箭头函数可以作为 Function.prototype.bind() 的替代品。<br>和普通函数不同，箭头函数没有它自己的this值，它的 this 值继承自外围作用域。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Obj = &#123;</span><br><span class="line">    baz:..</span><br><span class="line">    foo:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>].forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">            self.baz(item);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Es5 bind</span></span><br><span class="line"><span class="keyword">var</span> Obj = &#123;</span><br><span class="line">    baz:..</span><br><span class="line">    foo:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        [<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>].forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">            self.baz(item);</span><br><span class="line">        &#125;.bind(<span class="keyword">this</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Es6箭头函数</span></span><br><span class="line"><span class="keyword">var</span> Obj = &#123;</span><br><span class="line">    baz:..</span><br><span class="line">    foo:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        [<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>].forEach(<span class="function">(<span class="params">item</span>)=&gt;</span><span class="keyword">this</span>.baz(item))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;笔记 - 总结 - 心得&lt;br&gt;函数的每次调用都有与之紧密相关的作用域和上下文&lt;br&gt;这俩者是完全不同的&lt;br&gt;作用域(Scope) 是基于函数的&lt;br&gt;作用域涉及到所被调用函数中的变量访问，并且不同的调用场景是不一样的&lt;br&gt;而上下文(Context)是基于对象的&lt;br&gt;上下文始终是this关键字的值，它是拥有(控制)当前所执行代码的对象的引用。&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>ECMA-prototype</title>
    <link href="//fenghou.site/2016/12/28/2016-12-28-ECMA-prototype/"/>
    <id>//fenghou.site/2016/12/28/2016-12-28-ECMA-prototype/</id>
    <published>2016-12-28T11:09:23.000Z</published>
    <updated>2018-06-11T06:28:24.704Z</updated>
    
    <content type="html"><![CDATA[<p>要学好Js，首先必须得先理解原型(prototype)<br>why？<br>js作为面向对象的语言，实现面向对象的机制就是原型！<br><a id="more"></a><br>都说js中一切皆对象,那到底什么是对象呢？</p><blockquote><p>对象是属性的集合，并有一个原型对象。原型对象可以是空值。<br>  按宿主环境分可以分为<br>  原生对象：由ECMAScript规范定义其语义的对象<br>  内置对象：由ECMAScript实现提供，独立于宿主环境的对象，ECMAScript程序开始执行时就存在(所有内置对象是原生对象)<br>  宿主对象：由宿主环境提供的对象，用于完善ECMAScript执行环境(DOM,BOM)<br>  按功能分可以分为：<br>  普通对象：无原型对象<br>  函数对象：有原型对象(函数对象的一个实例)</p></blockquote><p>我们这里只关注函数对象<br>那么到底什么是原型呢？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//凡是通过new Function() 创建的对象都是函数对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Bar</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="keyword">var</span> foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="keyword">var</span> baz = <span class="keyword">new</span> <span class="built_in">Function</span>();</span><br><span class="line"><span class="comment">//Bar foo baz 都是函数对象</span></span><br><span class="line"><span class="comment">//原型对象本质是函数对象的一个实例</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Bar</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">Bar.prototype</span><br><span class="line"><span class="keyword">var</span> temp = <span class="keyword">new</span> Bar();</span><br><span class="line">Bar.prototype = temp;</span><br><span class="line"><span class="keyword">var</span> temp = <span class="keyword">new</span> <span class="built_in">Function</span>();</span><br><span class="line"><span class="built_in">Function</span>.prototype = temp</span><br><span class="line"><span class="comment">//构造器：创建和初始化对象的函数对象(在原型对象prototype中,prototype.constructor)</span></span><br><span class="line"><span class="comment">//原型对象prototype中都有个预定义的constructor属性，用来引用它的函数对象</span></span><br><span class="line"><span class="comment">//每个由构造器创建的对象拥有一个执行构造器prototype的属性值的隐式引用</span></span><br><span class="line"><span class="comment">//这个引用称之为原型</span></span><br><span class="line"><span class="comment">//每个原型可以拥有指向自己原型的隐式引用(原型的原型),就是所谓的原型链</span></span><br><span class="line"><span class="comment">//每个对象都有一个__proto__属性来实现对原型的隐式引用</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">Person.prototype = &#123;</span><br><span class="line">    name:<span class="string">'Louis'</span>,</span><br><span class="line">    age:<span class="string">'24'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> Person();</span><br><span class="line">person.__proto__ = Person.prototype</span><br><span class="line">Person.prototype.__proto__ = <span class="built_in">Object</span>.prototype</span><br><span class="line"><span class="built_in">Object</span>.prototype.__proto__ = <span class="literal">null</span></span><br><span class="line"><span class="comment">//person对象由构造器Person创建</span></span><br><span class="line"><span class="comment">//所以person对Person.prototype有隐式引用(__proto__)</span></span><br><span class="line"><span class="comment">//Person对象又是由构造器Object创建</span></span><br><span class="line"><span class="comment">//所以Person对Object.prototype有隐式引用(__proto__)</span></span><br></pre></td></tr></table></figure><p><img src="/assets/blogImg/prototype.png" alt="原型"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;要学好Js，首先必须得先理解原型(prototype)&lt;br&gt;why？&lt;br&gt;js作为面向对象的语言，实现面向对象的机制就是原型！&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>你真的学好Js了吗</title>
    <link href="//fenghou.site/2016/12/27/2016-12-27-%E4%BD%A0%E7%9C%9F%E7%9A%84%E5%AD%A6%E5%A5%BDJs/"/>
    <id>//fenghou.site/2016/12/27/2016-12-27-你真的学好Js/</id>
    <published>2016-12-27T11:08:58.000Z</published>
    <updated>2018-06-11T06:28:24.704Z</updated>
    
    <content type="html"><![CDATA[<p>在我看来前端(Js)就好比是个剑客江湖<br>江湖中有人练react宝典，有人练vue神功<br>有人锻造webpack利剑<br>…<br><a id="more"></a><br>而Js就是这些的基础心法，决定这些宝典,神功最后在你手上的杀伤力<br>那么作为最基础的心法，你真的参透的了吗？</p><blockquote><p>这里简单的记录些Js的一些特点</p></blockquote><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p>什么是面向对象</p><blockquote><p>一切事物皆对象<br>对象具有封装和继承特性<br>对象与对象之间使用消息通信，各自存在信息隐藏</p></blockquote><p>众所周知Java采用面向对象思想构造其语言，它实现了类、继承、多态、接口等机制。<br>但是这些机制，只是实现面向对象编程的一种方式<br>实际上，Js是通过原型的方式来实现面向对象编程的<br>Js中的对象是依靠构造器(constructor)利用原型(prototype)构造出来的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象的声明</span></span><br><span class="line"><span class="comment">//字面式对象声明</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    name:<span class="string">'Louis'</span>,</span><br><span class="line">    age:<span class="string">'24'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用函数构造器构造对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype = &#123;</span><br><span class="line">    name:<span class="string">'Louis'</span>,</span><br><span class="line">    age:<span class="string">'24'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="comment">//这里的new关键字跟java中 的new毫无关系</span></span><br><span class="line"><span class="comment">//只是借用了它的关键字new</span></span><br><span class="line"><span class="comment">//用来表示调用构造器创建对象</span></span><br></pre></td></tr></table></figure><h3 id="弱类型语言"><a href="#弱类型语言" class="headerlink" title="弱类型语言"></a>弱类型语言</h3><p>在Js中，定义变量不必声明其类型。但这不意味着变量没有类型。<br>原始类型：布尔型、数值型、字符串类型<br>引用类型：对象类型(数组是一种特殊的对象)、函数类型<br>其他类型：空类型和未定义类型<br>js中的变量可以根据所附的值改变类型<br>原始类型按值传送，在栈内存中存的是变量的值<br>引用类型则按引用传送，在栈内存中存的是 引用对象在堆内存中的地址<br>所以这里涉及到引用类型深拷贝和浅拷贝的问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//浅拷贝 把父对象的属性全部拷贝给子对象</span></span><br><span class="line"><span class="comment">//如果父元素的属性对应的值是引用类型，那子对象对应的属性的值还是引用类型的内存地址</span></span><br><span class="line"><span class="comment">//这个时候就需要深拷贝</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopy</span>(<span class="params">pre</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ch = pre.constructor === <span class="built_in">Array</span> ? [] : &#123;&#125;;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> pre !== <span class="string">'object'</span>)&#123;</span><br><span class="line">            ch = pre;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.JSON)&#123;</span><br><span class="line">            ch = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(pre))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> pre)&#123;</span><br><span class="line">                ch[i] = <span class="keyword">typeof</span> pre[i] === <span class="string">'object'</span> ?</span><br><span class="line">                (pre[i].constructor === <span class="built_in">Array</span> ? pre[i].slice() : deepCopy(pre[i]))</span><br><span class="line">                : pre[i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数是一等对象"><a href="#函数是一等对象" class="headerlink" title="函数是一等对象"></a>函数是一等对象</h3><p>在JavaScript中，函数是一等对象<br>可以存储在变量中<br>可以作为参数传给其他函数<br>可以作为返回值从其他函数传出<br>还可以在运行时进行构造<br>可以用function(){…}这样的语法创建匿名函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> foo = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">var</span> bar = <span class="number">2</span>;</span><br><span class="line">    alert(foo*bar);</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>这个函数在定义后便会立即执行<br>匿名函数可以用来创建闭包<br>闭包是一个受到保护的变量空间<br>由内嵌函数生成</p><h3 id="对象的易变性"><a href="#对象的易变性" class="headerlink" title="对象的易变性"></a>对象的易变性</h3><p>JavaScript中,一切都是对象<br>除了三种原始类型(布尔型、数值型、字符串类型)<br>即便是这几种类型在必要时候也会被自动封装成对象<br>而且所有对象都是易变的(mutable)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//为函数添加属性</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dispalyError</span>(<span class="params">message</span>)</span>&#123;</span><br><span class="line">    dispalyError.numTimesExecuted++;</span><br><span class="line">    alert(message);</span><br><span class="line">&#125;</span><br><span class="line">dispalyError.numTimesExecuted = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//对定义的类和实例化的对象进行修改</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype = &#123;</span><br><span class="line">    getName:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;,</span><br><span class="line">    getAge:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> alice = <span class="keyword">new</span> Person(<span class="string">'Alice'</span>,<span class="number">39</span>);</span><br><span class="line"><span class="keyword">var</span> bill = <span class="keyword">new</span> Person(<span class="string">'Bill'</span>,<span class="number">20</span>);</span><br><span class="line">Person.prototype.getGreeting = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hi '</span>+ <span class="keyword">this</span>.getName()+<span class="string">'!'</span>;</span><br><span class="line">&#125;</span><br><span class="line">alice.displayGreeting = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>.getGreeting);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>继承在JavaScript中不像在别的面向对象语言中那样简单<br>JavaScript使用的是基于对象的继承<br>它也可以用来模仿基于类的继承<br>Es6中新增了extends实现继承<br>后面会有文章相信讲讲继承</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我看来前端(Js)就好比是个剑客江湖&lt;br&gt;江湖中有人练react宝典，有人练vue神功&lt;br&gt;有人锻造webpack利剑&lt;br&gt;…&lt;br&gt;
    
    </summary>
    
    
      <category term="js" scheme="//fenghou.site/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>从实时聊天谈谈通信协议</title>
    <link href="//fenghou.site/2016/12/26/2016-12-26-%E5%AE%9E%E6%97%B6%E8%81%8A%E5%A4%A9%E8%B0%88%E8%B0%88%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/"/>
    <id>//fenghou.site/2016/12/26/2016-12-26-实时聊天谈谈通信协议/</id>
    <published>2016-12-26T11:08:20.000Z</published>
    <updated>2018-06-11T06:28:24.704Z</updated>
    
    <content type="html"><![CDATA[<p>作为前端开发人员<br>了解前后端通信协议还是很必须的<br>尤其是在用Node写服务端的时候<br>对于请求的响应处理和返回有很大的帮助<br><a id="more"></a><br>客户端与服务端的通信协议有HTTP(HTTPS)协议和WebSocket协议<br>HTTP协议是无状态的，服务端进行处理返回response后很难主动向客户端发送数据<br>WebSocket协议实现了客户端与服务端的全双工通信<br>扩展了客户端与服务端的通信功能<br>使服务端也能主动向客户端发送数据<br>在WebSocket协议提出之前<br>要实现即时通信、实时数据这样的功能，经常会使用轮询(polling)和Comet技术</p><p>轮询是最原始的实现实时Web应用的解决方案。<br>轮询技术要求客户端以设定的时间间隔周期性地向服务端发送请求，频繁地查询是否有新的数据改动。<br>明显地，这种方法会导致过多不必要的请求，浪费流量和服务器资源</p><p>Comet技术又可以分为长轮询和流技术。<br>长轮询改进了上述的轮询技术，减小了无用的请求。<br>它会为某些数据设定过期时间，当数据过期后才会向服务端发送请求；<br>这种机制适合数据的改动不是特别频繁的情况。<br>流技术通常是指客户端使用一个隐藏的窗口与服务端建立一个HTTP长连接，<br>服务端会不断更新连接状态以保持HTTP长连接存活；<br>这样的话，服务端就可以通过这条长连接主动将数据发送给客户端；<br>流技术在大并发环境下，可能会考验到服务端的性能。</p><p>WebSocket，真正实现了Web的实时通信</p><h3 id="Http协议"><a href="#Http协议" class="headerlink" title="Http协议"></a>Http协议</h3><p>HTTP(Hypertext Transfer Protocol 超文本传输协议)是一个基于请求与响应模式的、无状态的、应用层的协议<br>HTTP限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接<br>HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。<br>缺少状态意味着如果后续处理需要前面的信息，则它必须重传，<br>这样可能导致每次连接传送的数据量增大。<br>另一方面，在服务器不需要先前信息时它的应答就较快。</p><blockquote><p>HTTP的常用请求方法<br>  GET 请求获取Request-URI所标识的资源<br>  POST 在Request-URI所标识的资源后附加新的数据<br>  HEAD 请求获取由Request-URI所标识的资源的响应消息报头<br>  请求和响应都包含请求头或响应头header和可选的请求体或响应体Body(自由的文本)<br>  只有POST请求包含一个Body<br>  Content-type常用的MiME类型<br>  application/x-wwwform-urlencoded 经过编码的键值对请求字符串(Body)，web服务器需要解码字符串获得参数<br>  text/xml,application/xml Body是XML文档<br>  text/plain 普通文本<br>  text/html, text/xhtml Body是(X)HTML内容，web服务器端发送的标准web页面或内容片段<br>  text/javascript Body是一段JavaScript代码<br>  image/png, image/jpeg, image/gif：Body是二进制图像</p></blockquote><h3 id="HTTPS协议"><a href="#HTTPS协议" class="headerlink" title="HTTPS协议"></a>HTTPS协议</h3><p>HTTPS(Secure Hypertext Transfer Protocol 安全超文本传输协议)<br>是一个安全通信通道，它基于HTTP开发，用于在客户计算机和服务器之间交换信息。<br>它使用安全套接字层(SSL)进行信息交换，简单来说它是HTTP的安全版。<br>HTTP协议是不安全的，可以轻松对窃听你跟 Web 服务器之间的数据传输<br>在很多情况下，客户和服务器之间传输的是敏感信息，需要防止未经授权的访问</p><p>HTTPS协议在TCP协议上加了层SSL协议</p><blockquote><p>网络七层协议<br>  应用层 Http Https<br>  表示层 SSL TLS<br>  会话层<br>  传输层 TCP<br>  网络层 IP<br>  数据链路层<br>  物理层</p></blockquote><p>SSL 包含如下动作：<br>1.验证服务器端<br>2.允许客户端和服务器端选择加密算法和密码，确保双方都支持<br>3.验证客户端(可选)<br>4.使用公钥加密技术来生成共享加密数据<br>5.创建一个加密的 SSL 连接<br>6.基于该 SSL 连接传递 HTTP 请求</p><h3 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h3><p>TCP(Transmission Control Protocol 传输控制协议)是一种面向连接的、可靠的、基于字节流的传输层通信协议<br>连接时三次握手<br>第一次Client端发送SYN报文请求连接<br>第二次Server端接受连接后回复ACK报文，并且为这次连接分配资源<br>第三次Client端接收ACK报文后向Server端发送ACK报文，并分配资源<br>TCP连接建立</p><p>断开时四次握手<br>第一次Client发起中断连接，发送FIN报文<br>第二次Server端接到FIN报文后，发送ACK报文，(可能还有数据没有传输完)，Client进入FIN_WAIT状态<br>第三次Server端确定数据已经发送完成，则向Client端发送FIN报文，准备好关闭连接<br>第四次Client端接收FIN报文,知道可以关闭连接，但不相信网络,怕Server端不知道要关闭，发送ACK报文，并进入TIME_WAIT状态<br>Server端收到ACK报文后断开连接<br>Client端等待了一定时间(依赖实现方法)后，没有收到Server回复，表示Server端已正常关闭，Client端也关闭链接<br>TCP连接关闭</p><h3 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h3><p>AJAX (Asynchronous Javascript And XML 异步JavaScript和XML)，是指一种创建交互式网页应用的网页开发技术。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* open(method,url,async) 规定请求的类型、URL 以及是否异步处理请求</span></span><br><span class="line"><span class="comment">* method：请求的类型；GET 或 POST</span></span><br><span class="line"><span class="comment">* url：文件在服务器上的位置</span></span><br><span class="line"><span class="comment">* async：true（异步）或 false（同步）</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* send(string) 将请求发送到服务器</span></span><br><span class="line"><span class="comment">* string：仅用于 POST 请求</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* setRequestHeader(header,value) 向请求添加 HTTP 头</span></span><br><span class="line"><span class="comment">* header: 规定头的名称</span></span><br><span class="line"><span class="comment">* value: 规定头的值</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* responseText获得字符串形式的响应数据。</span></span><br><span class="line"><span class="comment">* responseXML获得XML形式的响应数据。</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* onreadystatechange 存储函数（或函数名），每当 readyState 属性改变时，就会调用该函数</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* readyState 存有 XMLHttpRequest 的状态 从 0 到 4 发生变化</span></span><br><span class="line"><span class="comment">* 0: 请求未初始化</span></span><br><span class="line"><span class="comment">* 1: 服务器连接已建立</span></span><br><span class="line"><span class="comment">* 2: 请求已接收</span></span><br><span class="line"><span class="comment">* 3: 请求处理中</span></span><br><span class="line"><span class="comment">* 4: 请求已完成，且响应已就绪</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* status</span></span><br><span class="line"><span class="comment">* 200: "OK"</span></span><br><span class="line"><span class="comment">* 404: 未找到页面</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">var</span> xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xmlhttp.open(<span class="string">'POST'</span>,url,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.setRequestHeader(<span class="string">'Content-type'</span>,<span class="string">'application/x-www-form-urlencoded'</span>);</span><br><span class="line">xmlhttp.send(<span class="string">'page=2&amp;size=10'</span>);</span><br><span class="line">xmlhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(xmlhttp.readystate == <span class="number">4</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(xmlhttp.status == <span class="number">200</span>)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(xmlhttp.responseText);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//异常</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h3><p>websocket协议本质上是一个基于TCP的协议<br>是先通过HTTP/HTTPS协议发起一条特殊的HTTP请求进行握手后创建一个用于交换数据的TCP连接<br>此后服务端与客户端通过此TCP连接进行实时通信</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//客户端</span></span><br><span class="line"><span class="keyword">var</span> ws = <span class="keyword">new</span> WebSocket(<span class="string">'ws://localhost:8181/'</span>);</span><br><span class="line"><span class="comment">//连接发生错误的回调方法</span></span><br><span class="line">ws.onerror = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//websocket 在任何时候都会处于下面4种状态中的其中一种</span></span><br><span class="line"><span class="comment">//CONNECTING (0) 表示还没建立连接</span></span><br><span class="line"><span class="comment">//OPEN (1)       已经建立连接，可以进行通讯</span></span><br><span class="line"><span class="comment">//CLOSING (2)    通过关闭握手，正在关闭连接</span></span><br><span class="line"><span class="comment">//CLOSED (3)     连接已经关闭或无法打开</span></span><br><span class="line"><span class="comment">//WebSocket.OPEN = 1;</span></span><br><span class="line"><span class="comment">//连接成功建立的回调方法</span></span><br><span class="line">ws.onopen = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ws.readyState === <span class="number">1</span>)&#123;</span><br><span class="line">        wsSend(<span class="string">'msg'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//接收到消息的回调方法</span></span><br><span class="line">ws.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//e.data</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//连接关闭的回调方法</span></span><br><span class="line">ws.onclose = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wsSend</span>(<span class="params">rs</span>)</span>&#123;</span><br><span class="line">    ws.send(rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wsEnd</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    ws.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//服务端(Node)</span></span><br><span class="line"><span class="keyword">var</span> WebSocketServer = <span class="built_in">require</span>(<span class="string">'ws'</span>).Server,</span><br><span class="line">    ws = <span class="keyword">new</span> WebSocketServer(&#123; <span class="attr">port</span>: <span class="number">8181</span> &#125;),</span><br><span class="line">    clients = [],</span><br><span class="line">    clientNum = <span class="number">0</span>;</span><br><span class="line">ws.on(<span class="string">'connection'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">ws</span>)</span>&#123;</span><br><span class="line">    clientNum ++;</span><br><span class="line">    clients.push(&#123;<span class="string">'ws'</span>:ws&#125;);</span><br><span class="line">    ws.on(<span class="string">'message'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">rs</span>)</span>&#123;</span><br><span class="line">        wsSend(rs);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wsSend</span>(<span class="params">rs</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;clients.length;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> clientSocket = clients[i].ws;</span><br><span class="line">        <span class="keyword">if</span> (clientSocket.readyState === <span class="number">1</span>) &#123;</span><br><span class="line">            clientSocket.send(<span class="built_in">JSON</span>.stringify(rs));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为前端开发人员&lt;br&gt;了解前后端通信协议还是很必须的&lt;br&gt;尤其是在用Node写服务端的时候&lt;br&gt;对于请求的响应处理和返回有很大的帮助&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
      <category term="http" scheme="//fenghou.site/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>Git自动化部署</title>
    <link href="//fenghou.site/2016/12/22/2016-12-22-git%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <id>//fenghou.site/2016/12/22/2016-12-22-git自动化部署/</id>
    <published>2016-12-22T11:07:31.000Z</published>
    <updated>2018-06-11T06:28:24.703Z</updated>
    
    <content type="html"><![CDATA[<p>每次更新完博客,得先push到github上<br>然后在服务器上把代码pull下来部署<br><a id="more"></a></p><p>一开始 忍了<br>后来 够了</p><p>整理一下<br>需要的是本地push成功后服务器上能自动执行pull命令<br>那么问题就变成了如何响应每次的push操作?</p><h3 id="WebHooks"><a href="#WebHooks" class="headerlink" title="WebHooks"></a>WebHooks</h3><p>Webhook就是用户通过自定义回调函数的方式来改变Web应用的一种行为，<br>这些回调函数可以由不是该Web应用官方的第三方用户或者开发人员来维护，修改。<br>通过Webhook，你可以自定义一些行为通知到指定的URL去。</p><p>那么每次push时候接受到请求，然后执行pull脚本，问题就解决了</p><h3 id="github配置"><a href="#github配置" class="headerlink" title="github配置"></a>github配置</h3><p>github 支持webhook<br>在github项目中选择setting<br>webhooks<br>Payload URL 请求地址<br>Content type 请求类型<br>Secret 密文(请求之后用作校验)</p><h3 id="请求处理"><a href="#请求处理" class="headerlink" title="请求处理"></a>请求处理</h3><p>通过node接受请求作出响应</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"><span class="keyword">var</span> createHandler = <span class="built_in">require</span>(<span class="string">'github-webhook-handler'</span>)</span><br><span class="line"><span class="keyword">var</span> handler = createHandler(&#123; <span class="attr">path</span>: <span class="string">'/deploy'</span>, <span class="attr">secret</span>: <span class="string">''</span> &#125;)</span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    handler(req, res, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">        res.statusCode = <span class="number">404</span></span><br><span class="line">        res.end(<span class="string">'no such location'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;).listen(<span class="number">8989</span>)</span><br><span class="line">handler.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'Error:'</span>, err.message)</span><br><span class="line">&#125;)</span><br><span class="line">handler.on(<span class="string">'push'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 调用pull脚本</span></span><br><span class="line">    process.exec(<span class="string">'git pull origin master'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error, stdout, stderr</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (error !== <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'exec error: '</span> + error);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这个时候每次push的时候，会发送一个请求到 url:8989/deylop<br>通过node 服务会作出相应操作</p><h3 id="服务器部署"><a href="#服务器部署" class="headerlink" title="服务器部署"></a>服务器部署</h3><p>nginx 方向代理<br>将8989 代理到80端口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen <span class="number">80</span>;</span><br><span class="line">       server_name <span class="string">''</span>;</span><br><span class="line">       location /deploy &#123;</span><br><span class="line">               proxy_pass http:<span class="comment">//localhost:8989;</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>通过forever 启动node 服务</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每次更新完博客,得先push到github上&lt;br&gt;然后在服务器上把代码pull下来部署&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
      <category term="git" scheme="//fenghou.site/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>1px != 1px -- 移动端适配浅析</title>
    <link href="//fenghou.site/2016/12/19/2016-12-19-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/"/>
    <id>//fenghou.site/2016/12/19/2016-12-19-移动端适配/</id>
    <published>2016-12-19T11:06:45.000Z</published>
    <updated>2018-06-11T06:28:24.703Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogImg/rem-dpr.png" alt="px"><br><a id="more"></a></p><p>css中我们一般使用px作为单位<br>在pc上css中的1个像素往往对应着电脑屏幕中的1个物理像素<br>这可能会给我们造成一个错觉<br>css中的像素等于设备的物理像素<br>但实际情况却并非如此<br>css中的像素只是一个抽象的单位<br>在不同的设备或不同的环境中<br>css中的1px所代表的设备物理像素是不同的</p><p>典型的就是retina屏</p><p>首先我们先了解几个概念</p><h3 id="viewport"><a href="#viewport" class="headerlink" title="viewport"></a>viewport</h3><p>viewport 是用户网页的可视区域<br>pc中就是屏幕宽度<br>移动设备中viewport(这个虚拟窗口)比屏幕宽 一般为980</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">移动端布局viewport的宽度设为理想宽度</span><br><span class="line">layout viewport 默认的viewport 比屏幕宽 <span class="built_in">document</span>.documentElement.clientWidth</span><br><span class="line">visual viewport  浏览器可视区域的大小 <span class="built_in">window</span>.innerWidth</span><br><span class="line">ideal viewport 最适合移动设备的viewport</span><br><span class="line">width：控制 viewport 的大小，可以指定的一个值，如果 <span class="number">600</span>，或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 <span class="number">100</span>% 时的 CSS 的像素）。</span><br><span class="line">height：和 width 相对应，指定高度。</span><br><span class="line">initial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例。</span><br><span class="line">maximum-scale：允许用户缩放到的最大比例。</span><br><span class="line">minimum-scale：允许用户缩放到的最小比例。</span><br><span class="line">user-scalable：用户是否可以手动缩放。</span><br></pre></td></tr></table></figure><h3 id="物理像素-physical-pixel"><a href="#物理像素-physical-pixel" class="headerlink" title="物理像素(physical pixel)"></a>物理像素(physical pixel)</h3><p>一个物理像素是显示器(手机屏幕)上最小的物理显示单元<br>在操作系统的调度下<br>每一个设备像素都有自己的颜色值和亮度值。</p><h3 id="设备独立像素-density-independent-pixel"><a href="#设备独立像素-density-independent-pixel" class="headerlink" title="设备独立像素(density-independent pixel)"></a>设备独立像素(density-independent pixel)</h3><p>设备独立像素(也叫密度无关像素)<br>可以认为是计算机坐标系统中得一个点<br>这个点代表一个可以由程序使用的虚拟像素(比如: css像素)<br>简单点就是屏幕宽高</p><h3 id="设备像素比-device-pixel-ratio"><a href="#设备像素比-device-pixel-ratio" class="headerlink" title="设备像素比(device pixel ratio)"></a>设备像素比(device pixel ratio)</h3><p>设备像素比 ＝ 物理像素 / 设备独立像素<br>5,6的dpr=2，1个css像素等于2个物理像素<br>6p的dpr=3,1个css像素等于3个物理像素</p><p>那首先我们在移动端布局，viewport肯定不能是默认的值<br>最终viewport宽度等于应该等于设备的宽度<br>我们的布局视图应该是 按照物理像素来布局<br>设备独立像素可获得<br>设备像素比 window.devicePixelRatio<br>现在假设 在iphone6上布局</p><p>此时dpr = 2,<br>dip = 375<br>物理像素应该是 dpr * dip = 750<br>div{<br>border-top:1px solid #000;<br>}<br>现在在页面上要实现一个1px的上边框<br>由于移动端布局viewport缩成设备宽度<br>而分辨率没有变<br>所以这时的1px会有2px的效果</p><p>这个时候可以手动将viewport 宽度设成物理像素的宽度，然后将整个页面缩小 dpr 倍</p><p>1px 的问题解决了，那如何解决在不同手机显示设计稿中的一个100x100的div<br>设计稿 750<br>其中div 100x100<br>750的设计稿对应的是iPhone6<br>结合上面viewport的缩放<br>div{<br>width:100px;<br>height:100px;<br>}<br>在6上跟设计稿是完全相同的<br>而在5(640)上会变大</p><p>这个时候可以通过rem在不同设备上动态计算出比例值</p><p>假设在750设计稿中 1rem = 100px<br>那么在640设计稿中 1rem = 640/750*100px<br>此时1rem 不管在5上还是6上显示都完全跟在设计稿中显示效果相同</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//html</span></span><br><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line"><span class="comment">//动态计算rem</span></span><br><span class="line"><span class="keyword">var</span> domDocEL = <span class="built_in">window</span>.document.documentElement,</span><br><span class="line">    mateViewPort = <span class="built_in">window</span>.document.querySelector(<span class="string">'meta[name="viewport"]'</span>),</span><br><span class="line">    nBasePsdWidth = <span class="number">750</span> / <span class="number">100</span>,</span><br><span class="line">    nDpr = <span class="built_in">window</span>.devicePixelRatio,</span><br><span class="line">    nScale = <span class="number">1</span> / nDpr,</span><br><span class="line">    nLayout = domDocEL.clientWidth,</span><br><span class="line">    nRem = nLayout * nDpr / nBasePsdWidth;</span><br><span class="line">domDocEL.style.fontSize = rem +<span class="string">'px'</span>;</span><br><span class="line">mateViewPort.setAttribute(<span class="string">'content'</span>,<span class="string">'width='</span>+nDpr*nLayout+<span class="string">',initial-scale='</span>+nScale+<span class="string">',maximum-scale='</span>+nScale+<span class="string">',minimum-scale='</span>+nScale+<span class="string">',user-scalable=no'</span>);</span><br></pre></td></tr></table></figure><p>对于字体可以用写个mixin方法<br>根据不同的dpr设置字号</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@mixin px2rem($name,$px) &#123;</span><br><span class="line">   [data-dpr=<span class="string">"2"</span>] &amp; &#123;</span><br><span class="line">     #&#123;$name&#125;: $px*2/2+px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>移动端布局将viewport设成物理像素的大小,然后在缩放为dpr的倒数倍。<br>dpr不存在？<br>简单点~~~<br>那就指定为1！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogImg/rem-dpr.png&quot; alt=&quot;px&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="//fenghou.site/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>react</title>
    <link href="//fenghou.site/2016/12/18/2016-12-18-react/"/>
    <id>//fenghou.site/2016/12/18/2016-12-18-react/</id>
    <published>2016-12-18T11:06:01.000Z</published>
    <updated>2018-06-11T06:28:24.703Z</updated>
    
    <content type="html"><![CDATA[<p>React相关-整理中<br><a id="more"></a></p><p>在props里使用 onClick={ this.handleClick.bind(this) }<br>或者 onClick={ (e) =&gt; this.handleClick(e) }<br>或者 onClick={ ::this.handleClick }<br>都会产生性能问题，所以现在eslint在语法检查时就会阻止这几种写法，<br>问题原因是每一次render的时候如果遇到这些写法，<br>都会重新用handleClick函数与this去绑定从而重新创建一个新的函数，影响性能。<br>如果使用下面的写法则不会每次都创建：<br>// 1.<br>constructor() {<br>this.handleClick = this.handleClick.bind(this);<br>}<br>handleClick(e) { / … / }<br>// 2.<br>handleClick = (e) =&gt; { / … / };</p><p>箭头函数不能用？<br>Parsing error: Unexpected token =<br>babel-eslint</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;React相关-整理中&lt;br&gt;
    
    </summary>
    
    
      <category term="react" scheme="//fenghou.site/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>webpack配置</title>
    <link href="//fenghou.site/2016/12/16/2016-12-16-webpack/"/>
    <id>//fenghou.site/2016/12/16/2016-12-16-webpack/</id>
    <published>2016-12-16T11:05:13.000Z</published>
    <updated>2018-06-11T06:28:24.702Z</updated>
    
    <content type="html"><![CDATA[<p>关于webpack的教程网上一抓一大把<br>就不班门弄斧了<br>这里只是总结一些webpack的实用配置以及个人心得<br><a id="more"></a></p><h3 id="entry-amp-output"><a href="#entry-amp-output" class="headerlink" title="entry&amp;output"></a>entry&amp;output</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">enpty:&#123;</span><br><span class="line">    index:<span class="string">'./index.js'</span>,</span><br><span class="line">    more:[<span class="string">'./more2.js'</span>,<span class="string">'./more.js'</span>],</span><br><span class="line">    vendor: [<span class="string">'react'</span>, <span class="string">'react-dom'</span>, <span class="string">'react-router'</span>]</span><br><span class="line">&#125;</span><br><span class="line">putput:&#123;</span><br><span class="line">    path:<span class="string">'./build'</span>,</span><br><span class="line">    filename:<span class="string">'[name]-[id].js'</span>,</span><br><span class="line">    publicPath:<span class="string">'/assets/'</span>,</span><br><span class="line">    chunkFilename:<span class="string">'[name]-[chunkhash]'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//[id], chunk的id</span></span><br><span class="line"><span class="comment">//[name] ,chunk名</span></span><br><span class="line"><span class="comment">//[hash], 编译哈希值</span></span><br><span class="line"><span class="comment">//[chunkhash] , chunk的hash值  根据模块内容</span></span><br><span class="line"><span class="comment">//output.publicPath：设置为想要的资源访问路径。</span></span><br><span class="line"><span class="comment">//访问时，则需要通过类似http://localhost:8080/asstes/index-1.js来访问资源，</span></span><br><span class="line"><span class="comment">//如果没有设置，则默认从站点根目录加载。</span></span><br><span class="line"><span class="comment">//filename应该比较好理解，就是对应于entry里面生成出来的文件名。比如：</span></span><br><span class="line">&#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        <span class="string">"index"</span>: <span class="string">"pages/index.jsx"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">"[name].min.js"</span>,</span><br><span class="line">        chunkFilename: <span class="string">"[name].min.js"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//生成出来的文件名为index.min.js。</span></span><br><span class="line"><span class="comment">//chunkname我的理解是未被列在entry中，</span></span><br><span class="line"><span class="comment">//却又需要被打包出来的文件命名配置。</span></span><br><span class="line"><span class="comment">//什么场景需要呢？我们项目就遇到过，在按需加载（异步）模块的时候，</span></span><br><span class="line"><span class="comment">//这样的文件是没有被列在entry中的，如使用CommonJS的方式异步加载模块：</span></span><br><span class="line"><span class="built_in">require</span>.ensure([<span class="string">"modules/tips.jsx"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">require</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">"modules/tips.jsx"</span>);</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;, <span class="string">'tips'</span>);</span><br><span class="line"><span class="comment">//异步加载的模块是要以文件形式加载哦，</span></span><br><span class="line"><span class="comment">//所以这时生成的文件名是以chunkname配置的，</span></span><br><span class="line"><span class="comment">//生成出的文件名就是tips.min.js。</span></span><br><span class="line"><span class="comment">//（require.ensure() API的第三个参数是给这个模块命名，</span></span><br><span class="line"><span class="comment">//否则 chunkFilename: "[name].min.js" 中的 [name] 是一个自动分配的、可读性很差的id，</span></span><br><span class="line"><span class="comment">//这是我在文档很不起眼的地方788发现的。。。）</span></span><br><span class="line"><span class="keyword">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class="line">          names: [<span class="string">'vendor'</span>],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="url-loader"><a href="#url-loader" class="headerlink" title="url-loader"></a>url-loader</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test: <span class="regexp">/\.(gif|jpg|png)$/</span>,</span><br><span class="line">loader: <span class="string">'url-loader?limit=1024&amp;name=img/[name].[ext]'</span></span><br><span class="line"><span class="comment">//小于1024字节 采用base64</span></span><br><span class="line"><span class="comment">//大于1024字节 正常打包到output目录下img文件夹中</span></span><br></pre></td></tr></table></figure><h3 id="js-loader"><a href="#js-loader" class="headerlink" title="js-loader"></a>js-loader</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//babel</span></span><br><span class="line"> <span class="comment">//配置 .babelrc</span></span><br><span class="line"> <span class="comment">//.rc run command 程序启动阶段被调用</span></span><br><span class="line"> <span class="comment">//执行babal-loader时自动执行</span></span><br><span class="line"> &#123;</span><br><span class="line">   <span class="string">"presets"</span>: [<span class="string">"es2015"</span>, <span class="string">"stage-2"</span>],</span><br><span class="line">   <span class="string">"plugins"</span>: [</span><br><span class="line">     <span class="string">"transform-class-properties"</span>,</span><br><span class="line">     <span class="string">"transform-runtime"</span></span><br><span class="line">   ]</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//webpack.config.js</span></span><br><span class="line"> &#123;</span><br><span class="line">    test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">    exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">    loader:<span class="string">'babel'</span></span><br><span class="line"> &#125;,</span><br><span class="line"><span class="comment">//不使用.babelrc</span></span><br><span class="line"> &#123;</span><br><span class="line">   test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">   exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">   loader: <span class="string">'babel'</span>,</span><br><span class="line">   query: &#123;</span><br><span class="line">       presets: [<span class="string">"es2015"</span>, <span class="string">"stage-2"</span>],</span><br><span class="line">       plugins: [</span><br><span class="line">           <span class="string">"transform-class-properties"</span>,</span><br><span class="line">           <span class="string">"transform-runtime"</span></span><br><span class="line">           ]</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure><h3 id="vue-loader"><a href="#vue-loader" class="headerlink" title="vue-loader"></a>vue-loader</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">   loader: <span class="string">'babel'</span>,</span><br><span class="line">   exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">   test:<span class="regexp">/\.vue$/</span>,</span><br><span class="line">   loader:<span class="string">'vue'</span>,</span><br><span class="line">&#125;</span><br><span class="line">babel: &#123;</span><br><span class="line">        presets: [<span class="string">'es2015'</span>],</span><br><span class="line">        plugins: [<span class="string">"transform-class-properties"</span>,</span><br><span class="line">                  <span class="string">"transform-runtime"</span>]</span><br><span class="line">&#125;,</span><br><span class="line">vue:&#123;</span><br><span class="line">    loaders:&#123;</span><br><span class="line">       js:<span class="string">'babel'</span>,</span><br><span class="line">       scss:[<span class="string">'vue-style-loader'</span>,<span class="string">'css'</span>,<span class="string">'sass'</span>].join(<span class="string">'!'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="css-loader"><a href="#css-loader" class="headerlink" title="css-loader"></a>css-loader</h3><p>loader 采取管道流</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loader: [<span class="string">'style'</span>,<span class="string">'css'</span>,<span class="string">'scss'</span>].join(<span class="string">'!'</span>)</span><br></pre></td></tr></table></figure><p>提取样式到单独文件<br>插件 extract-text-webpack-plugin</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">'extract-text-webpack-plugin'</span>);</span><br><span class="line">&#123;</span><br><span class="line">   test: <span class="regexp">/\.(scss|sass|css)$/</span>,</span><br><span class="line">   loader: ExtractTextPlugin.extract(<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>)</span><br><span class="line">&#125;</span><br><span class="line">plugins: [</span><br><span class="line">        <span class="keyword">new</span> ExtractTextPlugin(<span class="string">'[name].css'</span>)</span><br><span class="line">        <span class="comment">//output目录下</span></span><br><span class="line">  ],</span><br></pre></td></tr></table></figure><p>css样式自动 fix<br>插件 autoprefixer(postcss插件)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.(scss|sass|css)$/</span>,</span><br><span class="line">    loader: ExtractTextPlugin.extract(<span class="string">'style-loader'</span>, [<span class="string">'css-loader'</span>, <span class="string">'postcss-loader'</span>])</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">const</span> AUTOPREFIXER_BROWSERS = [</span><br><span class="line">    <span class="string">'Android &gt;= 4'</span>,</span><br><span class="line">    <span class="string">'Chrome &gt;= 35'</span>,</span><br><span class="line">    <span class="string">'Firefox &gt;= 31'</span>,</span><br><span class="line">    <span class="string">'Explorer &gt;= 9'</span>,</span><br><span class="line">    <span class="string">'iOS &gt;= 7'</span>,</span><br><span class="line">    <span class="string">'Opera &gt;= 12'</span>,</span><br><span class="line">    <span class="string">'Safari &gt;= 7.1'</span></span><br><span class="line">]</span><br><span class="line"> postcss: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> [autoprefixer(&#123; <span class="attr">browsers</span>: AUTOPREFIXER_BROWSERS &#125;)];</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure><h3 id="file-loader"><a href="#file-loader" class="headerlink" title="file-loader"></a>file-loader</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">      test: <span class="regexp">/\.(woff|svg|eot|ttf).$/</span>,</span><br><span class="line">      loader: <span class="string">"file-loader?name=fonts/[name].[ext]"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="resolve"><a href="#resolve" class="headerlink" title="resolve"></a>resolve</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> moment = <span class="built_in">require</span>(<span class="string">'moment'</span>);</span><br><span class="line"><span class="comment">//编译很慢 也就是说，请求的是 moment 的源码。</span></span><br><span class="line"><span class="comment">//实际上，通过 NPM 安装 moment 的时候会同时安装 moment 的源码和压缩后的代码</span></span><br><span class="line"><span class="comment">//var moment = require('moment/min/moment-with-locales.min.js');</span></span><br><span class="line"><span class="comment">//只不过这样改，可读性会有所下降，</span></span><br><span class="line"><span class="comment">//而且每一个用到 moment 的地方都得这么写。</span></span><br><span class="line"><span class="comment">//另外，如果同样的问题出现在第三方模块中，修改别人代码就不那么方便了。</span></span><br><span class="line"><span class="comment">//下面来看看用 Webpack 怎么解决这个问题。</span></span><br><span class="line"> resolve: &#123;</span><br><span class="line">     alias: &#123;</span><br><span class="line">         moment: <span class="string">"moment/min/moment-with-locales.min.js"</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//可以用 alias 指定从非npm引入的库，如</span></span><br><span class="line">jquery: path.resolve(__dirname, <span class="string">'./bower_components/jquery/dist/jquery.js'</span>) ，</span><br><span class="line">这样在 <span class="keyword">import</span> 时可以替换引用路径</span><br><span class="line"><span class="comment">// require时省略的扩展名，如：require('app') 不需要app.js</span></span><br><span class="line">extensions: [<span class="string">''</span>,<span class="string">'.js'</span>,<span class="string">'.vue'</span>,<span class="string">'.scss'</span>],</span><br></pre></td></tr></table></figure><h3 id="noParse"><a href="#noParse" class="headerlink" title="noParse"></a>noParse</h3><p>module.noParse 是 webpack 的另一个很有用的配置项，<br>如果你 确定一个模块中没有其它新的依赖 就可以配置这项，<br>webpack 将不再扫描这个文件中的依赖。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">   noParse: [<span class="regexp">/moment-with-locales/</span>]</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><h3 id="devtool"><a href="#devtool" class="headerlink" title="devtool"></a>devtool</h3><p>通常，JavaScript的解释器会告诉你，第几行第几列代码出错。<br>但是，这对于转换后的代码毫无用处。<br>举例来说，jQuery 1.9压缩后只有3行，每行3万个字符，所有内部变量都改了名字。<br>你看着报错信息，感到毫无头绪，根本不知道它所对应的原始位置。<br>这就是Source map想要解决的问题。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">devtool: <span class="string">'#source-map'</span></span><br></pre></td></tr></table></figure><h3 id="hot-reload"><a href="#hot-reload" class="headerlink" title="hot reload"></a>hot reload</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//package.json</span></span><br><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"webpack-dev-server --devtool eval-source-map --progress --colors --hot --inline"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">--content-base 内容基本路径 不加默认当前目录</span><br><span class="line">--colors       输出加颜色</span><br><span class="line">path: <span class="string">"./dist"</span>,</span><br><span class="line">filename: <span class="string">"[name].js"</span>,</span><br><span class="line">publicPath: <span class="string">"abababab"</span>,</span><br><span class="line">publicPath 必须设置 这里设置什么名 html里引用就写什么名字</span><br><span class="line">&lt;script src=<span class="string">"/abababab/main.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h3 id="webpack-w"><a href="#webpack-w" class="headerlink" title="webpack -w"></a>webpack -w</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webstrom 会在临时文件夹中创建一个文件用来保存(好像没有出发实际文件的变更)</span></span><br><span class="line">setting</span><br><span class="line">Appearance &amp; Behavior</span><br><span class="line">System Settings</span><br><span class="line">Use <span class="string">"safe write"</span>(save changes to a temporary file first) 勾去掉</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于webpack的教程网上一抓一大把&lt;br&gt;就不班门弄斧了&lt;br&gt;这里只是总结一些webpack的实用配置以及个人心得&lt;br&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="//fenghou.site/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>学点运维，配个服务器</title>
    <link href="//fenghou.site/2016/12/15/2016-12-15-aliyun-yunwei/"/>
    <id>//fenghou.site/2016/12/15/2016-12-15-aliyun-yunwei/</id>
    <published>2016-12-15T11:04:25.000Z</published>
    <updated>2018-06-28T05:57:16.611Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://imgs.ebrun.com/resources/2016_11/2016_11_23/2016112329114798900788972.png" alt="aliyun"><br><a id="more"></a></p><p>前段时间和同事合租了一个阿里云服务器，60几块钱一个月。<br>服务器上的资源环境很多都是他配的，<br>作为前端，只是在上面放点静态的东西，也没太大兴趣在这方面去摸索<br>然后这货今天离职了。</p><p>走之前，悠悠然发了我一个连接<br>阿里云搞活动 服务器免费赠送6个月</p><p>果断入手(要买个9块钱的套餐)<br>然后<br>买域名<br>解析DNS<br>配nginx<br>装git<br>搭node</p><p>也算是小入门了</p><hr><p>But 我想说的是<br>作为一个开发人员and 一个合格的开发人员<br>首先具备的应该是解决问题，查找问题的能力</p><p>而不是一有问题不假思索的问别人<br>有时候多学一样本领,就早说一句求人的话</p><p>作为我们作为初学者<br>总会碰到各种各样的问题<br>那么，怎么解决？</p><h2 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h2><p>linux git的安装</p><p>忽略前面下载解压过程</p><blockquote><p>./configure –prefix=/usr/local<br>  make &amp; make install</p></blockquote><p>果断报错。。<br>OK 下载各种依赖<br>报错<br>继续<br>安装成功<br>git –version<br>嗯 有版本号<br>easy嘛<br>然后 来 git clone ..<br>error:fatal: Unable to find remote helper for ‘https’<br>又报错，奔溃</p><p>这是因为Git环境没有安装完全，需要重新安装</p><blockquote><p>./configure –prefix=/usr/local<br>  make all doc<br>  make install install-doc install-man install-html</p></blockquote><p>继续 OK<br>问题解决</p><blockquote><p>1、查看当前git版本：git –version<br>  查看最新版git：访问<a href="https://www.kernel.org/pub/software/scm/git/" target="_blank" rel="noopener">https://www.kernel.org/pub/software/scm/git/</a><br>  或者<a href="https://github.com/git/git/releases" target="_blank" rel="noopener">https://github.com/git/git/releases</a><br>  2、官网下载：<br>  wget <a href="https://Github.com/Git/Git/archive/v2.11.0.tar.gz" target="_blank" rel="noopener">https://Github.com/Git/Git/archive/v2.11.0.tar.gz</a><br>  （建议本机迅雷下载rz到服务器,安装yum install lrzsz后rz即可）<br>  解压：tar -zxvf git-2.11.0.tar.gz<br>  3、cd git-2.11.0<br>  4、移除旧版本git：yum remove git<br>  5、make configure<br>  如果报错/bin/sh: autoconf: command not found：<br>  安装libtool即可：yum install install autoconf automake libtool<br>  正常会打印：GEN configure<br>  执行<br>  6、./configure –prefix=/usr/local/git –with-iconv =/usr/local/lib（建议优先尝试后者）<br>  或者<br>  ./configure –prefix=/usr/local/git –with-iconv –with-curl –with-expat=/usr/local/lib（如果没有安装libiconv请自行安装）<br>  make &amp;&amp; make install<br>  ①如果报错：cache.h:40:18: fatal error: zlib.h: No such file or directory<br>  安装zlib：yum install zlib、yum install zlib-devel<br>  ②如果报错：make[1]: *** [perl.mak] Error 2<br>  安装：yum install perl-ExtUtils-MakeMaker package<br>  7、echo “export PATH=$PATH:/usr/local/git/bin” &gt;&gt; /etc/bashrc<br>  8、source /etc/bashrc<br>  9、git –version<br>  编译git时报错： zlib.h: No such file or directory<br>      缺少 zlib的头文件， 开发包没装，<br>      yum install zlib （系统默认已经装上）<br>      yum install zlib-devel<br>  git clone时候提示fatal: Unable to find remote helper for ‘https’<br>  yum install libcurl-devel<br>  然后按照上诉步骤重新安装编译git即可</p></blockquote><p><a href="https://www.cnblogs.com/lhbryant/p/6928894.html" target="_blank" rel="noopener">Linux安装git</a></p><h3 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h3><p>ssh连接远程服务器   ssh name@ip<br>拷贝服务器文件到本地 scp <a href="文件">-r</a> name@ip:服务器地址 本地地址</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://imgs.ebrun.com/resources/2016_11/2016_11_23/2016112329114798900788972.png&quot; alt=&quot;aliyun&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
      <category term="linux" scheme="//fenghou.site/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>In city</title>
    <link href="//fenghou.site/2016/12/14/2016-12-14-incity/"/>
    <id>//fenghou.site/2016/12/14/2016-12-14-incity/</id>
    <published>2016-12-14T11:03:52.000Z</published>
    <updated>2018-06-11T06:28:24.702Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/blogImg/city.jpg" alt="city"></p><a id="more"></a><p>悠然<br>随心<br>随性<br>随缘</p><p>杭州，省会<br>美丽的西湖（我也只去过西湖。。）<br>一年前，在这<br>我开启了前端之旅</p><p>那谁说过，在风口，是只猪也能飞起来。<br>何况是在杭州这样的互联网台风中。。</p><p>但是风过了，依然在飞的却是鹰</p><p>麻雀从不担心树枝会断<br>因为他相信的不是树枝<br>而是自己的翅膀</p><p>身处互联网大时代<br>机会很多，机遇很多<br>首先飞起来<br>然后去充实自己<br>不断学习不断进步</p><p>最后<br>风即使过了<br>我们也进化成了鹰</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/blogImg/city.jpg&quot; alt=&quot;city&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="//fenghou.site/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Node-Spider</title>
    <link href="//fenghou.site/2016/12/13/2016-12-13-node-spider/"/>
    <id>//fenghou.site/2016/12/13/2016-12-13-node-spider/</id>
    <published>2016-12-13T11:03:06.000Z</published>
    <updated>2018-06-11T06:28:24.701Z</updated>
    
    <content type="html"><![CDATA[<p>Node学习入门，练习爬虫再适合不过了<br>这里通过爬区某图片网站近(10万张图片)的例子，介绍爬虫的过程<br><a id="more"></a></p><h3 id="爬虫分析设计"><a href="#爬虫分析设计" class="headerlink" title="爬虫分析设计"></a>爬虫分析设计</h3><p>抓取的是 ‘<a href="http://www.mzitu.com‘" target="_blank" rel="noopener">http://www.mzitu.com‘</a> 网站<br>图片大致有五个类目<br>每个类目下分页规则<br><a href="http://www.mzitu.com/类目/page/1" target="_blank" rel="noopener">http://www.mzitu.com/类目/page/1</a><br><a href="http://www.mzitu.com/类目/page/2" target="_blank" rel="noopener">http://www.mzitu.com/类目/page/2</a></p><p>每一个有25个专题<br>专题详情页 <a href="http://www.mzitu.com/专题id" target="_blank" rel="noopener">http://www.mzitu.com/专题id</a><br>专题详情页分页规则<br><a href="http://www.mzitu.com/专题id/1" target="_blank" rel="noopener">http://www.mzitu.com/专题id/1</a><br><a href="http://www.mzitu.com/专题id/2" target="_blank" rel="noopener">http://www.mzitu.com/专题id/2</a></p><p>因此第一次鉴于此 爬虫设计如下<br>先获取单个类目下专题(图片和Id)<br>专题图片根据 类目/当前page数/图片 路径保存<br>将获取的id暂存<br>知道获取完全部全部类目专题<br>然后开始获取专题详情<br>确定要获取的专题详情的所有分页数<br>最后爬区所有分页数</p><h3 id="用到的模块"><a href="#用到的模块" class="headerlink" title="用到的模块"></a>用到的模块</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> superagent = <span class="built_in">require</span>(<span class="string">'superagent'</span>); <span class="comment">//请求封装模块</span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">async</span> = <span class="built_in">require</span>(<span class="string">'async'</span>);  <span class="comment">//并发控制模块</span></span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">'cheerio'</span>); <span class="comment">//抓取页面dom节点模块</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br></pre></td></tr></table></figure><h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sUrl = <span class="string">'http://www.mzitu.com'</span>; <span class="comment">//爬取目标</span></span><br><span class="line"><span class="keyword">var</span> aItems = []; <span class="comment">//单个类目下需要爬取的链接</span></span><br><span class="line"><span class="keyword">var</span> aTagList = [<span class="string">'/'</span>,<span class="string">'/xinggan'</span>,<span class="string">'/japan'</span>,<span class="string">'/taiwan'</span>,<span class="string">'/mm'</span>]; <span class="comment">//所有类目</span></span><br><span class="line"><span class="keyword">var</span> aDirList = [<span class="string">'index'</span>,<span class="string">'xinggan'</span>,<span class="string">'japan'</span>,<span class="string">'taiwan'</span>,<span class="string">'mm'</span>]; <span class="comment">//爬取存放路径</span></span><br><span class="line"><span class="keyword">var</span> nCurrentTag = <span class="number">0</span>; <span class="comment">//当前爬取类目</span></span><br><span class="line"><span class="keyword">var</span> aIdList = []; <span class="comment">//专题Id</span></span><br><span class="line"><span class="keyword">var</span> aNextPage = []; <span class="comment">//专题详情</span></span><br><span class="line"><span class="keyword">var</span> aNxtItems = []; <span class="comment">//专题详情下需要爬区的链接</span></span><br></pre></td></tr></table></figure><h3 id="获取所有专题"><a href="#获取所有专题" class="headerlink" title="获取所有专题"></a>获取所有专题</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params">page</span>)</span>&#123;</span><br><span class="line">    superagent</span><br><span class="line">            .get(page)</span><br><span class="line">            .end(<span class="function"><span class="keyword">function</span> (<span class="params">err, response</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(err.status);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (response.status === <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> $ = cheerio.load(response.text);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> nPageLen = $(<span class="string">'.nav-links a.next'</span>).prev().text();  <span class="comment">// 获取页数</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; nPageLen ;i++)&#123;</span><br><span class="line">                    aItems.push(page+<span class="string">'/page/'</span>+(i+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> sName = page.replace(<span class="string">'http://www.mzitu.com'</span>,<span class="string">''</span>);</span><br><span class="line">                sName = sName ? sName : <span class="string">'index'</span>;</span><br><span class="line">                <span class="comment">// 新建类目 存放目录</span></span><br><span class="line">                fs.mkdir(__dirname+<span class="string">'/uploa/'</span>+sName.replace(<span class="string">'/'</span>,<span class="string">''</span>),<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">                        <span class="keyword">throw</span> err</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                fetchPage();</span><br><span class="line">            &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fetchPage</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> concurrencyCount = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> fetchUrl = <span class="function"><span class="keyword">function</span>(<span class="params">url,callback</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fetchStart = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">        concurrencyCount++;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'并发数'</span>+concurrencyCount+<span class="string">'====url:'</span>+url);</span><br><span class="line">        superagent.get(url)</span><br><span class="line">            .end(<span class="function"><span class="keyword">function</span>(<span class="params">err,res</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(err)&#123;</span><br><span class="line">                    <span class="comment">// callback(err,url);</span></span><br><span class="line">                    <span class="comment">// return next(err);</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime() - fetchStart;</span><br><span class="line">                <span class="comment">// console.log('抓取'+url+'成功,耗时'+time)</span></span><br><span class="line">                concurrencyCount--;</span><br><span class="line">                <span class="keyword">if</span>(res.status === <span class="number">200</span>)&#123;</span><br><span class="line">                    <span class="keyword">var</span> $ = cheerio.load(res.text);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//爬取数据处理</span></span><br><span class="line">                getDetail($,url,<span class="function"><span class="keyword">function</span>(<span class="params">rs</span>)</span>&#123;</span><br><span class="line">                    <span class="comment">// _html += rs;</span></span><br><span class="line">                &#125;)</span><br><span class="line">                callback();</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 控制并发数</span></span><br><span class="line">    <span class="keyword">async</span>.mapLimit(aItems,<span class="number">5</span>,<span class="function"><span class="keyword">function</span>(<span class="params">myUrl,callback</span>)</span>&#123;</span><br><span class="line">        fetchUrl(myUrl,callback);</span><br><span class="line">    &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,result</span>)</span>&#123;</span><br><span class="line">        nCurrentTag++;</span><br><span class="line">        <span class="keyword">if</span>(nCurrentTag &lt; aTagList.length)&#123;</span><br><span class="line">            <span class="comment">// console.log('====================开始抓取下一个类目====================');</span></span><br><span class="line">            aItems = [];</span><br><span class="line">            start(sUrl+aTagList[nCurrentTag]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'====================开始抓取详情页========================='</span>);</span><br><span class="line">            <span class="comment">// getNextPage();</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDetail</span>(<span class="params">$,url,callback</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//确定图片名称</span></span><br><span class="line">    <span class="keyword">var</span> dirList = url.replace(<span class="string">'http://www.mzitu.com/'</span>,<span class="string">''</span>).split(<span class="string">'/'</span>);</span><br><span class="line">    <span class="keyword">var</span> dirName = dirList[<span class="number">0</span>]+<span class="string">'/'</span>+dirList[<span class="number">1</span>]+dirList[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">if</span>(dirList.length &lt; <span class="number">3</span>)&#123;</span><br><span class="line">       dirName = <span class="string">'index/'</span>+dirList[<span class="number">0</span>]+dirList[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> domItemA = $(<span class="string">'#pins li a'</span>); <span class="comment">// 获取Id</span></span><br><span class="line">    <span class="keyword">var</span> domItem = $(<span class="string">'#pins li a img'</span>); <span class="comment">//获取图片</span></span><br><span class="line">    <span class="keyword">var</span> srcList = []</span><br><span class="line">    domItem.each(<span class="function"><span class="keyword">function</span>(<span class="params">idx,element</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $ele = $(element);</span><br><span class="line">        <span class="keyword">var</span> src = $ele.attr(<span class="string">'data-original'</span>);</span><br><span class="line">        <span class="keyword">var</span> id = $ele.parent().attr(<span class="string">'href'</span>).replace(<span class="string">'http://www.mzitu.com/'</span>,<span class="string">''</span>);</span><br><span class="line">        aSrcList.push(src);</span><br><span class="line">        aIdList.push(id);</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 下载专题图片</span></span><br><span class="line">    downImg(aSrcList,dirName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">downImg</span>(<span class="params">list,dirName</span>)</span>&#123;</span><br><span class="line">    fs.mkdir(__dirname+<span class="string">'/upload/'</span>+dirName,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            <span class="keyword">throw</span> err</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> savePath = __dirname+<span class="string">'/uploa/'</span>+dirName+<span class="string">'/'</span> + narr[<span class="number">0</span>]  +<span class="string">'_'</span>+ narr[<span class="number">1</span>] + <span class="string">'_'</span> + narr[<span class="number">2</span>];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">binaryParser</span>(<span class="params">res, callback</span>) </span>&#123;</span><br><span class="line">            res.setEncoding(<span class="string">'binary'</span>);</span><br><span class="line">            <span class="keyword">var</span> imgData = <span class="string">''</span>;</span><br><span class="line">            res.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">                imgData += chunk;</span><br><span class="line">            &#125;);</span><br><span class="line">            res.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                fs.writeFile(savePath, <span class="keyword">new</span> Buffer(imgData, <span class="string">'binary'</span>),<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">if</span>(err) &#123;</span><br><span class="line">                                <span class="built_in">console</span>.log(err);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="built_in">console</span>.log(url+<span class="string">'下载成功'</span>)</span><br><span class="line">                        &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">var</span> downUrl = <span class="function"><span class="keyword">function</span>(<span class="params">url,callback</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> narr = url.replace(<span class="string">"http://i.meizitu.net/thumbs/"</span>, <span class="string">""</span>).split(<span class="string">"/"</span>)</span><br><span class="line">        supergent.get(url)</span><br><span class="line">        <span class="comment">// .pipe(fs.createWriteStream(savePath))</span></span><br><span class="line">                .parse(binaryParser)</span><br><span class="line">                .end(<span class="function"><span class="keyword">function</span>(<span class="params">err,res</span>)</span>&#123;</span><br><span class="line">                &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">async</span>.mapLimit(list,<span class="number">5</span>,<span class="function"><span class="keyword">function</span>(<span class="params">myUrl,callback</span>)</span>&#123;</span><br><span class="line">        downUrl(myUrl,callback);</span><br><span class="line">    &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,result</span>)</span>&#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://blog.51cto.com/laoxu/1302013" target="_blank" rel="noopener">如何防止网站被爬虫爬取的几种办法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Node学习入门，练习爬虫再适合不过了&lt;br&gt;这里通过爬区某图片网站近(10万张图片)的例子，介绍爬虫的过程&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Node-server</title>
    <link href="//fenghou.site/2016/12/13/2016-12-13-node-server/"/>
    <id>//fenghou.site/2016/12/13/2016-12-13-node-server/</id>
    <published>2016-12-13T11:02:26.000Z</published>
    <updated>2018-06-11T06:28:24.701Z</updated>
    
    <content type="html"><![CDATA[<p>用Node搭建一个静态资源访问服务器</p><a id="more"></a><p>用到的模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>),</span><br><span class="line">    url = <span class="built_in">require</span>(<span class="string">'url'</span>),</span><br><span class="line">    path = <span class="built_in">require</span>(<span class="string">'path'</span>),</span><br><span class="line">    fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br></pre></td></tr></table></figure><p>思路 获取访问路径，以文件后缀判断文件类型<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mimetype = &#123;</span><br><span class="line">    <span class="string">'txt'</span>: <span class="string">'text/plain'</span>,</span><br><span class="line">    <span class="string">'html'</span>: <span class="string">'text/html'</span>,</span><br><span class="line">    <span class="string">'css'</span>: <span class="string">'text/css'</span>,</span><br><span class="line">    <span class="string">'xml'</span>: <span class="string">'application/xml'</span>,</span><br><span class="line">    <span class="string">'json'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">    <span class="string">'js'</span>: <span class="string">'application/javascript'</span>,</span><br><span class="line">    <span class="string">'jpg'</span>: <span class="string">'image/jpeg'</span>,</span><br><span class="line">    <span class="string">'jpeg'</span>: <span class="string">'image/jpeg'</span>,</span><br><span class="line">    <span class="string">'gif'</span>: <span class="string">'image/gif'</span>,</span><br><span class="line">    <span class="string">'png'</span>: <span class="string">'image/png'</span>,</span><br><span class="line">    <span class="string">'svg'</span>: <span class="string">'image/svg+xml'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>获取请求的时候判断请求文件是否存在，决定返回的类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> pathname = url.parse(req.url).pathname,</span><br><span class="line">        realPath = path.join(__dirname,<span class="string">'/static'</span>,pathname);</span><br><span class="line">    <span class="keyword">var</span> body = [];</span><br><span class="line">    req.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        body.push(data);</span><br><span class="line">    &#125;)</span><br><span class="line">    req.on(<span class="string">'end'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        body = Buffer.concat(body);</span><br><span class="line">    &#125;)</span><br><span class="line">    fs.exists(realPath,<span class="function"><span class="keyword">function</span>(<span class="params">ex</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ex)&#123;</span><br><span class="line">            <span class="keyword">var</span> rs = fs.createReadStream(realPath);</span><br><span class="line">            res.writeHead(<span class="number">200</span>,&#123;</span><br><span class="line">                <span class="string">'Content-Type'</span>:mimetype[realPath.split(<span class="string">'.'</span>).pop()] || <span class="string">'text/plain'</span></span><br><span class="line">            &#125;)</span><br><span class="line">            rs.on(<span class="string">'data'</span>,res.write.bind(res))</span><br><span class="line">            rs.on(<span class="string">'close'</span>,res.end.bind(res));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            page_404(req,res,realPath); <span class="comment">//错误页面</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;).listen(<span class="number">3000</span>)</span><br></pre></td></tr></table></figure><p>请求不存在</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">page_404</span>(<span class="params">req,res,path</span>)</span>&#123;</span><br><span class="line">    res.writeHead(<span class="number">404</span>,&#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>:<span class="string">'text/html'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    res.write(<span class="string">'&lt;!doctype html&gt;\n'</span>);</span><br><span class="line">    res.write(<span class="string">'&lt;title&gt;404 Not Found&lt;/title&gt;\n'</span>);</span><br><span class="line">    res.write(<span class="string">'&lt;h1&gt;Not Found&lt;/h1&gt;'</span>);</span><br><span class="line">    res.write(</span><br><span class="line">        <span class="string">'&lt;p&gt;The requested URL '</span> +</span><br><span class="line">        path +</span><br><span class="line">        <span class="string">' was not found on this server.&lt;/p&gt;'</span></span><br><span class="line">    );</span><br><span class="line">    res.end();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Node搭建一个静态资源访问服务器&lt;/p&gt;
    
    </summary>
    
    
      <category term="node" scheme="//fenghou.site/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown语法</title>
    <link href="//fenghou.site/2016/12/12/2016-12-12-md-rule/"/>
    <id>//fenghou.site/2016/12/12/2016-12-12-md-rule/</id>
    <published>2016-12-12T02:25:27.000Z</published>
    <updated>2018-06-11T06:28:24.701Z</updated>
    
    <content type="html"><![CDATA[<p>markdown 语法<br><a id="more"></a></p><h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><hr><p><code>亮不亮</code></p><p><a href="http://blog.csdn.net/guodongxiaren" title="悬停显示" target="_blank" rel="noopener">我的博客</a></p><ul><li>ES<ul><li>JS<ul><li>JS1</li></ul></li></ul></li></ul><blockquote><p>数据结构</p><blockquote><p>树</p><blockquote><p>二叉树</p><blockquote><p>平衡二叉树</p><blockquote><p>满二叉树</p></blockquote></blockquote></blockquote></blockquote></blockquote><table><thead><tr><th>第一格表头</th><th>第二格表头</th></tr></thead><tbody><tr><td>内容单元格 第一列第一格</td><td>内容单元格第二列第一格</td></tr><tr><td>内容单元格 第一列第二格 多加文字</td><td>内容单元格第二列第二格</td></tr></tbody></table><p>加删除线像这样用： <del>删除这些</del></p><ul><li>[x] 支持 @提到某人、#引用、<a href="">链接</a>、<strong>格式化</strong> 和 <del>标签</del> 等语法</li><li>[x] 需要使用列表语法来激活（无序或有序列表均可）</li><li>[x] 这是一个已完成项目</li><li>[ ] 这是一个未完成项目</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;markdown 语法&lt;br&gt;
    
    </summary>
    
    
      <category term="markdown" scheme="//fenghou.site/tags/markdown/"/>
    
  </entry>
  
</feed>
